--- configure.ac.orig	2014-09-23 00:39:16.000000000 -0700
+++ configure.ac	2016-01-09 06:52:29.000000000 -0800
@@ -96,29 +96,6 @@
 
 # nothing to do, yet.
 
-AC_MSG_CHECKING(for darwin)
-case $host_os in
-	rhapsody* | darwin1*)
-		AC_MSG_RESULT([yes, but too old])
-		AC_MSG_ERROR([This platform is too old, please update to the latest darwin])
-		;;
-	darwin*)
-		AC_MSG_RESULT([yes, patching libtool to always build dylibs])
-		mv libtool libtool.old
-		sed -e 's/^deplibs_check_method.*/deplibs_check_method=pass_all/g' \
-			-e 's|^library_names_spec.*|library_names_spec="\\$libname\\$release\\$versuffix.dylib \\$libname\\$release\\${major}.dylib \\$libname.dylib"|g' \
-			-e 's|^soname_spec.*|soname_spec="\\$libname\\$release\\$major.dylib"|g' \
-			< libtool.old > libtool
-		rm libtool.old
-		AC_DEFINE(DARWIN,,Found Mac OSX Darwin)
-		DARWIN="dylib"
-		AC_SUBST(DARWIN)
-		;;
-	*)
-		AC_MSG_RESULT(no)
-		;;
-esac
-
 dnl # **************************************************************
 dnl # Checks for typedefs, structures, and compiler characteristics.
 dnl # **************************************************************
@@ -387,60 +364,6 @@
 BB_ENABLE_DOXYGEN
 # ----------------------------------------------------------------
 
-dnl # *************************************
-dnl # Extra warnings
-dnl # *************************************
-AC_MSG_CHECKING(what extra warning flags to pass to the C compiler)
-if test ${GCC}x = yesx; then
-  warnFLAGS=
-  CFLAGS="${CFLAGS} -g2 -Wall"
-  AC_ARG_ENABLE(error-on-warning,
-        [  --disable-error-on-warning
-                          disable treating compile warnings as errors],
-        [case "${enableval}" in
-        yes) warnFLAGS="${warnFLAGS} -Werror" ;;
-        no)  ;;
-        *) AC_MSG_ERROR(bad value ${enableval} for --enable-error-on-warning) ;;
-        esac],
-        [  warnFLAGS="${warnFLAGS}" ])
-  GCC_VERSION=`${CC} -dumpversion`
-  if test `echo ${GCC_VERSION} | cut -d. -f1` -ge 3; then
-     # This is gcc >= 3.x.x
-     if test `echo ${GCC_VERSION} | cut -d. -f2` -ge 4; then
-        # This is gcc >= 3.4.x
-        warnFLAGS="${warnFLAGS} -Wdeclaration-after-statement"
-     else if test `echo ${GCC_VERSION} | cut -d. -f1` -ge 4; then
-        # This is gcc == 4.x.x
-        warnFLAGS="${warnFLAGS} -Wdeclaration-after-statement -Wno-pointer-sign"
-        fi
-     fi
-  fi
-dnl  CFLAGS="${CFLAGS} ${warnFLAGS}"
-else
-  warnFLAGS=
-fi
-AC_MSG_RESULT($warnFLAGS)
-AC_SUBST(warnFLAGS)
-
-set_compile_warnings=no
-
-AC_ARG_ENABLE(compile-warnings,
-              [  --enable-compile-warnings
-                          Enable verbose compiler warnings],
-              set_compile_warnings=yes)
-
-if test "$GCC" = "yes" -a "$set_compile_warnings" != "no"; then
-        warnFLAGS="$warnFLAGS -Wcast-align -Wsign-compare \
- -Wmissing-prototypes -Wmissing-declarations -Werror -Wmissing-include-dirs \
- -Wstrict-prototypes -Winline -Wnested-externs -Wpointer-arith \
- -Wmissing-field-initializers"
-# LDFLAGS="$LDFLAGS -Wl,-z,defs"
-fi
-
-AC_SUBST(CFLAGS)
-AC_SUBST(CPPFLAGS)
-AC_SUBST(LDFLAGS)
-
 DATADIR=`eval echo $datadir`
 QSF_SCHEMA_DIR=`eval echo $DATADIR`"/xml/qof/qsf"
 AC_SUBST(QSF_SCHEMA_DIR)
@@ -491,7 +414,7 @@
 echo ""
 
 dnl # <= CFLAGS and LDFLAGS =>
-echo "CFLAGS      :   $warnFLAGS"
+echo "CFLAGS      :   $CFLAGS"
 echo "LDFLAGS     :   $LDFLAGS"
 echo "QOF_CFLAGS  :   "`eval echo $QOF_CFLAGS`
 echo "QOF_LIBS    :   $QOF_LIBS"
