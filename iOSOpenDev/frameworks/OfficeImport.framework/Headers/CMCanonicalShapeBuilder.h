/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <OfficeImport/CMShapeBuilder.h>
#import <OfficeImport/OfficeImport-Structs.h>


__attribute__((visibility("hidden")))
@interface CMCanonicalShapeBuilder : CMShapeBuilder {
}
- (CGAffineTransform)affineTransform;	// 0xc8c8d
- (CGPathRef)createShapeWithTransform:(CGAffineTransform)transform;	// 0xc9005
- (CGPathRef)_rectangleWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0xc9425
- (CGPathRef)_parallelogramWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1d6f61
- (CGPathRef)_trapezoidWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1bfe21
- (CGPathRef)_ellipseWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x14d62d
- (CGPathRef)_roundedRectWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0xcf689
- (CGPathRef)_diamondWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x14d79d
- (CGPathRef)_triangleWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x15c651
- (CGPathRef)_rightTriangleWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x15c5b5
- (CGPathRef)_plusWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1eef41
- (CGPathRef)_pentagonWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1fd455
- (CGPathRef)_hexagonWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1fd5a5
- (CGPathRef)_octagonWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1fc121
- (CGPathRef)_canWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1ef3f9
- (CGPathRef)_cubeWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x14df55
- (CGPathRef)_wedgeRectWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x17e28d
- (CGPathRef)_straightConnector1tWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1fb9a1
- (CGPathRef)_lineWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x2f6109
- (CGPathRef)_rightArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0xd0019
- (CGPathRef)_leftArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x14cd45
- (CGPathRef)_upArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1b66e5
- (CGPathRef)_downArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1b61dd
- (CGPathRef)_leftRightArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1c5e7d
- (CGPathRef)_upDownArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1c0f95
- (CGPathRef)_quadArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1fd949
- (CGPathRef)_leftRightUpArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x2026cd
- (CGPathRef)_starWithTransform:(CGAffineTransform)transform aspectRatio:(float)ratio andBranchNumber:(int)number;	// 0x15c09d
- (CGPathRef)_homePlateWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1b4e31
- (CGPathRef)_chevronWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1b4fed
- (CGPathRef)_pieWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x2f5eb1
- (CGPathRef)_circularArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1d6609
- (CGPathRef)_rightDiagramArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1f0971
- (CGPathRef)_upDiagramArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1f4a35
- (CGPathRef)_pyramidLayerWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x2045e1
- (CGPathRef)_diagramCircularArrowWithTransform:(CGAffineTransform)transform andAspectRatio:(float)ratio;	// 0x1f2a21
@end
