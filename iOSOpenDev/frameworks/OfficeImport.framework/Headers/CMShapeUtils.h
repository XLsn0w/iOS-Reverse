/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

#import <OfficeImport/OfficeImport-Structs.h>
#import <OfficeImport/CMShapeUtils.h>
#import <OfficeImport/XXUnknownSuperclass.h>


__attribute__((visibility("hidden")))
@interface CMShapeUtils : XXUnknownSuperclass {
}
+ (BOOL)isShapeALine:(id)line;	// 0x149f15
+ (void)setCoordSpaceForCustomeGeometry:(id)customeGeometry fromSize:(CGSize)size;	// 0x1d0e21
+ (float)scaleFactorFromLength:(float)length toLength:(float)length2;	// 0xcf131
+ (CGRect)transformRect:(CGRect)rect scale:(float)scale offsetX:(float)x offsetY:(float)y;	// 0x1f0115
+ (id)transformFromBounds:(CGRect)bounds toOrientedBounds:(id)orientedBounds;	// 0xcedd1
+ (id)absoluteOrientedBoundsWithRelativeOrientedBounds:(id)relativeOrientedBounds parentOrientedBounds:(id)bounds parentLogicalBounds:(CGRect)bounds3;	// 0x2f6225
+ (id)inscribedBoundsWithBounds:(id)bounds logicalBounds:(CGRect)bounds2;	// 0x1ccdd9
+ (id)internalBoundsWithBounds:(id)bounds scaleBounds:(CGRect)bounds2;	// 0x1ce1e9
+ (id)relatvieBoundsWithAbsoluteInnerBounds:(id)absoluteInnerBounds parentBounds:(id)bounds;	// 0x1cd00d
+ (id)transformedBoundsWithBounds:(id)bounds transform:(id)transform;	// 0x1f48d5
+ (double)mapAdjustCoord:(OADAdjustCoord)coord geometry:(id)geometry;	// 0x14c7a9
+ (double)mapFormulaOfType:(int)type argValues:(double *)values isEscher:(BOOL)escher;	// 0x14ca89
+ (double)getFormulaResultFromCustomGeometry:(id)customGeometry atIndex:(unsigned)index;	// 0x14c805
+ (float)intersectionAngleNextToAngle:(float)angle isAfter:(BOOL)after nodeSize:(CGSize)size;	// 0x1f2685
+ (float)fontSizeForText:(id)text insideRectangle:(CGSize)rectangle;	// 0x1ce175
+ (double)fixedPointDegToRad:(long)rad;	// 0x2f6195
+ (long)radToFixedPointDeg:(double)fixedPointDeg;	// 0x2f61f5
@end

@interface CMShapeUtils (Private)
+ (double)nativeAngleToRad:(long)rad isEscher:(BOOL)escher;	// 0x2f6445
+ (long)radToNativeAngle:(double)nativeAngle isEscher:(BOOL)escher;	// 0x2f6475
+ (double)fixedPointDegToRad:(long)rad;	// 0x2f61b5
+ (long)radToFixedPointDeg:(double)fixedPointDeg;	// 0x2f64ad
+ (double)milliMinutesToRad:(long)rad;	// 0x2f61d5
+ (long)radToMilliMinutes:(double)milliMinutes;	// 0x2f64dd
+ (float)normalizedAngle:(float)angle;	// 0x1f29c1
+ (long)mapFormulaKeywordValue:(int)value geometry:(id)geometry;	// 0x14c9e5
@end
