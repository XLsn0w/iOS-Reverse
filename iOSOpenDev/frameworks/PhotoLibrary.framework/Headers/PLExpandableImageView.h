/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <PhotoLibrary/PLStackableImage.h>
#import <PhotoLibrary/PLExpandableView.h>

@class UIImageView, PLImageView, NSString, PLVideoView, PLManagedAsset;

@interface PLExpandableImageView : PLExpandableView <PLStackableImage> {
	PLImageView *_imageView;	// 144 = 0x90
	int _imageID;	// 148 = 0x94
	CGSize _originalSize;	// 152 = 0x98
	float _originalWidth;	// 160 = 0xa0
	float _originalAngle;	// 164 = 0xa4
	CGPoint _anchorPoint;	// 168 = 0xa8
	float _imageRotationAngle;	// 176 = 0xb0
	float _pinchWidth;	// 180 = 0xb4
	float _pinchAngle;	// 184 = 0xb8
	float _pinchScale;	// 188 = 0xbc
	CGRect _initialExpandingFrame;	// 192 = 0xc0
	CGRect _originalBounds;	// 208 = 0xd0
	float _currentAngle;	// 224 = 0xe0
	CGSize _centerOffset;	// 228 = 0xe4
	PLManagedAsset *_photo;	// 236 = 0xec
	struct {
		unsigned isRotating : 1;
		unsigned didTrack : 1;
		unsigned updateFrame : 1;
		unsigned didLayout : 1;
		unsigned alwaysDoLayout : 1;
		unsigned didComputeCenterOffset : 1;
		unsigned imageIsFullScreen : 1;
	} _exImageFlags;	// 240 = 0xf0
}
@property(readonly, assign, nonatomic) CGRect frameOfImage;	// G=0x73c95; 
@property(readonly, assign, nonatomic) BOOL isBeingManipulated;	// G=0x73e19; 
@property(assign, nonatomic) float transitionProgress;	// G=0x73df9; S=0x73dd9; 
@property(assign, nonatomic, getter=isShadowEnabled) BOOL shadowEnabled;	// G=0x73db5; S=0x73d95; 
@property(readonly, assign, nonatomic) UIImageView *imageView;	// G=0x73c3d; 
@property(retain, nonatomic) PLManagedAsset *photo;	// G=0x73e7d; S=0x73e8d; @synthesize=_photo
@property(assign, nonatomic, getter=borderIsVisible) BOOL borderVisible;	// G=0x73b29; S=0x11c19; 
@property(retain, nonatomic) PLVideoView *videoView;	// G=0x1192d; S=0x73d65; 
@property(readonly, assign, nonatomic) CGSize imageSize;	// G=0x73c4d; 
@property(copy, nonatomic) NSString *name;	// G=0x73c1d; S=0x73bfd; 
@property(retain) id image;	// G=0x1190d; S=0x73b4d; converted property
@property(readonly, assign) float imageRotationAngle;	// G=0x73d85; converted property
+ (float)imageBorderWidth;	// 0x717f1
// declared property setter: - (void)setPhoto:(id)photo;	// 0x73e8d
// declared property getter: - (id)photo;	// 0x73e7d
- (void)renderSnapshotInContext:(CGContextRef)context;	// 0x73e5d
- (void)setTextBadgeString:(id)string;	// 0x73e3d
// declared property getter: - (BOOL)isBeingManipulated;	// 0x73e19
// declared property getter: - (float)transitionProgress;	// 0x73df9
// declared property setter: - (void)setTransitionProgress:(float)progress;	// 0x73dd9
// declared property getter: - (BOOL)isShadowEnabled;	// 0x73db5
// declared property setter: - (void)setShadowEnabled:(BOOL)enabled;	// 0x73d95
// converted property getter: - (float)imageRotationAngle;	// 0x73d85
// declared property setter: - (void)setVideoView:(id)view;	// 0x73d65
// declared property getter: - (id)videoView;	// 0x1192d
// declared property getter: - (CGRect)frameOfImage;	// 0x73c95
// declared property getter: - (CGSize)imageSize;	// 0x73c4d
// declared property getter: - (id)imageView;	// 0x73c3d
// declared property getter: - (id)name;	// 0x73c1d
// declared property setter: - (void)setName:(id)name;	// 0x73bfd
- (void)setPosterImage:(id)image regionOfInterest:(CGRect)interest;	// 0x73b61
// converted property getter: - (id)image;	// 0x1190d
// converted property setter: - (void)setImage:(id)image;	// 0x73b4d
- (void)setImage:(id)image isFullscreen:(BOOL)fullscreen;	// 0x11fe9
// declared property getter: - (BOOL)borderIsVisible;	// 0x73b29
// declared property setter: - (void)setBorderVisible:(BOOL)visible;	// 0x11c19
- (void)setCenter:(CGPoint)center;	// 0x73aa1
- (void)setFrame:(CGRect)frame;	// 0x11599
- (id)_contentView;	// 0x739f9
- (void)finishTransition;	// 0x739a9
- (void)_bounceToPlace:(id)place finished:(id)finished context:(void *)context;	// 0x73891
- (void)_bounceBack:(id)back finished:(id)finished context:(void *)context;	// 0x73725
- (float)completeTrackingPinch:(id)pinch toState:(int)state duration:(double)duration;	// 0x72d4d
- (void)setTransformAndCenterForFrame:(CGRect)frame;	// 0x72cbd
- (CGSize)_newSizeFromSize:(CGSize)size;	// 0x72c05
- (float)continueTrackingPinch:(id)pinch;	// 0x724f9
- (void)_updatePinchWidthAndScaleWithLeftPoint:(CGPoint)leftPoint rightPoint:(CGPoint)point;	// 0x72445
- (void)_updateBorderAlpha;	// 0x723f1
- (float)_borderAlphaForExpansionFraction:(float)expansionFraction;	// 0x723b9
- (void)setSize:(CGSize)size angle:(float)angle;	// 0x721b9
- (void)beginTrackingPinch:(id)pinch;	// 0x71c99
- (void)_setOriginalSize:(CGSize)size;	// 0x71c85
- (CGRect)_snappedExpandedFrame;	// 0x71c49
- (float)_expansionFractionForBorderAlpha:(BOOL)borderAlpha;	// 0x71a5d
- (float)_expansionFraction;	// 0x71a49
- (float)_expandedScale;	// 0x719d1
- (float)_currentScale;	// 0x71961
- (BOOL)pointInside:(CGPoint)inside withEvent:(id)event;	// 0x7185d
- (void)layoutSubviews;	// 0x115f5
- (void)dealloc;	// 0x1f1b9
- (id)initWithFrame:(CGRect)frame;	// 0x71831
- (id)initWithFrame:(CGRect)frame frameStyle:(int)style;	// 0x717f9
- (id)initWithFrame:(CGRect)frame frameStyle:(int)style withBorder:(BOOL)border;	// 0x113f9
@end
