/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <PhotoLibrary/UIScrollViewDelegate.h>
#import <PhotoLibrary/UIGestureRecognizerDelegate.h>
#import <PhotoLibrary/PLPhotoTileViewController.h>
#import <PhotoLibrary/XXUnknownSuperclass.h>

@class UIImageView, UIGestureRecognizer, PLManagedAsset, UIImage, PLExpandableImageView, PLVideoView, PLImageScrollView;
@protocol PLPhotoTileViewControllerDelegate;

@interface PLPhotoTileViewController : XXUnknownSuperclass <UIScrollViewDelegate, UIGestureRecognizerDelegate> {
	UIImage *_image;	// 152 = 0x98
	UIImage *_pendingImage;	// 156 = 0x9c
	UIImage *_unscaledImage;	// 160 = 0xa0
	PLManagedAsset *_modelPhoto;	// 164 = 0xa4
	PLImageScrollView *_scrollView;	// 168 = 0xa8
	PLExpandableImageView *_imageView;	// 172 = 0xac
	PLVideoView *_videoView;	// 176 = 0xb0
	UIImageView *_gradientView;	// 180 = 0xb4
	UIImageView *_hdrBadgeImageView;	// 184 = 0xb8
	UIGestureRecognizer *_singleTapGestureRecognizer;	// 188 = 0xbc
	UIGestureRecognizer *_doubleTapGestureRecognizer;	// 192 = 0xc0
	id<PLPhotoTileViewControllerDelegate> _tileDelegate;	// 196 = 0xc4
	int _imageOrientation;	// 200 = 0xc8
	CGSize _imageSize;	// 204 = 0xcc
	CGRect _tileFrame;	// 212 = 0xd4
	BOOL _zoomToFillInsteadOfToFit;	// 228 = 0xe4
	BOOL _useLessThanMinZoomForZoomedOutTest;	// 229 = 0xe5
	BOOL _allowZoomToFill;	// 230 = 0xe6
	id _orientationDelegate;	// 232 = 0xe8
	float _cropRectZoomScale;	// 236 = 0xec
	CGRect _cropOverlayRect;	// 240 = 0xf0
	CGRect _cropRect;	// 256 = 0x100
	float _maxZoomScale;	// 272 = 0x110
	float _minZoomScale;	// 276 = 0x114
	float _zoomToFillScale;	// 280 = 0x118
	int _mode;	// 284 = 0x11c
	int _lastDisplayedOrientation;	// 288 = 0x120
	BOOL _clientIsTemporarilyWallpaper;	// 292 = 0x124
	BOOL _userDidAdjustWallpaper;	// 293 = 0x125
	float _wallpaperPortraitZoomScale;	// 296 = 0x128
	float _wallpaperLandscapeZoomScale;	// 300 = 0x12c
	float _zoomScaleBeforeZooming;	// 304 = 0x130
	CGRect _cropRectBeforeDragging;	// 308 = 0x134
	BOOL _force1XCroppedImage;	// 324 = 0x144
	BOOL _forceNativeScreenScale;	// 325 = 0x145
	BOOL _centerContentVertically;	// 326 = 0x146
	id _didEndZoomingBlock;	// 328 = 0x148
	unsigned _imageIsThumbnail : 1;	// 332 = 0x14c
	unsigned _isTVOut : 1;	// 332 = 0x14c
	unsigned _zooming : 1;	// 332 = 0x14c
	unsigned _autoZooming : 1;	// 332 = 0x14c
	unsigned _zoomGesturesEnabled : 1;	// 332 = 0x14c
	unsigned _userDidZoom : 1;	// 332 = 0x14c
	unsigned _ignoreZoomChange : 1;	// 332 = 0x14c
	unsigned _tileParentIsPageController : 1;	// 332 = 0x14c
	unsigned _lockedUnderCropOverlay : 1;	// 333 = 0x14d
	unsigned _viewDidAppear : 1;	// 333 = 0x14d
	unsigned _viewWillAppear : 1;	// 333 = 0x14d
	unsigned _didRequestFullSizeImage : 1;	// 333 = 0x14d
	unsigned _useZoomScaleForCropRect : 1;	// 333 = 0x14d
	unsigned _photoShouldBeHDRBadged : 1;	// 333 = 0x14d
	unsigned _hdrBadgeShouldBeVisible : 1;	// 333 = 0x14d
	unsigned _didSetHDRForModelPhoto : 1;	// 333 = 0x14d
}
@property(assign, nonatomic) BOOL force1XCroppedImage;	// G=0x86a09; S=0x86a19; @synthesize=_force1XCroppedImage
@property(assign, nonatomic) BOOL forceNativeScreenScale;	// G=0x869e9; S=0x869f9; @synthesize=_forceNativeScreenScale
@property(assign, nonatomic) BOOL centerContentVertically;	// G=0x86995; S=0x869a5; @synthesize=_centerContentVertically
@property(retain, nonatomic) UIImage *unscaledImage;	// G=0x869b5; S=0x869c5; @synthesize=_unscaledImage
@property(assign, nonatomic) CGRect tileFrame;	// G=0x84589; S=0x10745; 
@property(retain, nonatomic) UIImage *thumbnailImage;	// G=0x8454d; S=0x84575; 
@property(readonly, assign, nonatomic) PLManagedAsset *photo;	// G=0x13339; 
@property(assign) BOOL gesturesEnabled;	// G=0x84991; S=0x849b5; converted property
@property(assign, getter=isTVOut) BOOL tVOut;	// G=0x11e45; S=0x13085; converted property
@property(assign) id tileDelegate;	// G=0x84885; S=0x130ad; converted property
@property(retain) PLVideoView *videoView;	// G=0x134e5; S=0x847bd; converted property
@property(readonly, retain) UIImage *image;	// G=0x21879; converted property
@property(readonly, retain) PLImageScrollView *scrollView;	// G=0x1fa55; converted property
@property(readonly, retain) PLExpandableImageView *imageView;	// G=0x8470d; converted property
@property(readonly, assign) int imageOrientation;	// G=0x8671d; converted property
@property(readonly, assign) float maxZoomScale;	// G=0x86431; converted property
@property(readonly, assign) float minZoomScale;	// G=0x1285d; converted property
@property(readonly, assign) float zoomToFillScale;	// G=0x133f9; converted property
@property(readonly, assign) BOOL userDidAdjustWallpaper;	// G=0x84895; converted property
+ (id)newPhotoTileViewControllerWithFrame:(CGRect)frame modelPhoto:(id)photo mode:(int)mode;	// 0x844b9
+ (id)newPhotoTileViewControllerWithFrame:(CGRect)frame image:(id)image allowZoomToFill:(BOOL)fill mode:(int)mode;	// 0x84439
+ (id)newPhotoTileViewControllerWithFrame:(CGRect)frame imageRef:(CGImageRef)ref imageOrientation:(int)orientation allowZoomToFill:(BOOL)fill mode:(int)mode;	// 0x8438d
+ (CGSize)tvOutTileSize;	// 0x84235
+ (CGSize)tileSize;	// 0x841a5
// declared property setter: - (void)setForce1XCroppedImage:(BOOL)image;	// 0x86a19
// declared property getter: - (BOOL)force1XCroppedImage;	// 0x86a09
// declared property setter: - (void)setForceNativeScreenScale:(BOOL)scale;	// 0x869f9
// declared property getter: - (BOOL)forceNativeScreenScale;	// 0x869e9
// declared property setter: - (void)setUnscaledImage:(id)image;	// 0x869c5
// declared property getter: - (id)unscaledImage;	// 0x869b5
// declared property setter: - (void)setCenterContentVertically:(BOOL)vertically;	// 0x869a5
// declared property getter: - (BOOL)centerContentVertically;	// 0x86995
- (void)setLockedUnderCropOverlay:(BOOL)overlay;	// 0x86949
- (void)_adjustZoomForEnteringMode:(BOOL)enteringMode;	// 0x867d5
- (void)updateAfterCollapse;	// 0x8672d
// converted property getter: - (int)imageOrientation;	// 0x8671d
- (void)setAllowsZoomToFill:(BOOL)fill;	// 0x866ed
- (void)updateZoomScales;	// 0x12215
- (void)_updateZoomScalesForView:(id)view;	// 0x12229
- (void)_setDefaultZoomScale;	// 0x12701
- (void)setOrientationDelegate:(id)delegate;	// 0x1337d
- (CGRect)frameForImageAtDefaultScale;	// 0x86535
- (BOOL)isZoomedOut;	// 0x86491
- (float)currentToDefaultZoomRatio;	// 0x86441
- (float)defaultZoomScale;	// 0x12821
- (float)zoomToFitScale;	// 0x1f589
// converted property getter: - (float)zoomToFillScale;	// 0x133f9
// converted property getter: - (float)maxZoomScale;	// 0x86431
// converted property getter: - (float)minZoomScale;	// 0x1285d
- (float)_calculateZoomScale:(BOOL)scale inView:(id)view;	// 0x12401
- (float)minRotatedScale;	// 0x862c1
- (void)_performDidEndZoomBlock;	// 0x1f931
- (void)_setDidEndZoomingBlock:(id)_set;	// 0x1f631
- (void)zoomToScale:(float)scale completionBlock:(id)block;	// 0x1f599
- (id)dictionaryWithCroppedImageForRect:(CGRect)rect withOptions:(int)options;	// 0x8614d
- (id)newImageWithCropRect:(CGRect)cropRect croppedImageData:(id *)data fullScreenImageData:(id *)data3 fullScreenImage:(CGImageRef *)image imageCropRect:(CGRect *)rect intersectCropWithFullRect:(BOOL)fullRect;	// 0x85c4d
- (void)_handleDoubleTap:(id)tap;	// 0x859dd
- (void)_requestFullSizeImage;	// 0x85991
- (void)_handleSingleTap:(id)tap;	// 0x185d5
- (void)ensureFullSizeImageLoaded;	// 0x17b79
- (void)viewDidAppear:(BOOL)view;	// 0x17241
- (void)viewWillAppear:(BOOL)view;	// 0x16121
- (void)contentViewFrameChanged;	// 0x13529
- (void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void *)context;	// 0x134f5
- (void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;	// 0x85955
- (void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;	// 0x855bd
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;	// 0x16ddd
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;	// 0x17f69
- (id)viewForZoomingInScrollView:(id)scrollView;	// 0x11fb5
- (void)scrollViewDidEndDecelerating:(id)scrollView;	// 0x854f5
- (void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;	// 0x85429
- (void)scrollViewWillBeginDragging:(id)scrollView;	// 0x853a1
- (void)scrollViewDidZoom:(id)scrollView;	// 0x12c7d
- (void)scrollViewDidEndZooming:(id)scrollView withView:(id)view atScale:(float)scale;	// 0x1f751
- (void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;	// 0x1f67d
- (CGSize)scrollView:(id)view contentSizeForZoomScale:(float)zoomScale withProposedSize:(CGSize)proposedSize;	// 0x12a61
- (void)noteParentViewControllerDidDisappear;	// 0x85371
- (void)viewDidDisappear:(BOOL)view;	// 0x1b27d
- (void)viewWillUnload;	// 0x85269
- (void)loadView;	// 0x11d59
- (BOOL)didRequestFullSizeImage;	// 0x85255
- (BOOL)hasFullSizeImage;	// 0x85211
- (void)setFullSizeImage:(id)image;	// 0x17ca1
- (void)refreshTileWithFullScreenImage:(id)fullScreenImage;	// 0x851fd
- (void)_setImage:(id)image isThumbnail:(BOOL)thumbnail;	// 0x10761
- (void)_updateModelPhotoWithImage:(id)image;	// 0x10c09
- (void)_updateGradientImageForOrientation:(int)orientation;	// 0x8502d
- (void)_adjustScrollViewVerticalContentOffset;	// 0x84e91
- (void)_adjustScrollViewContentInsetWithContentSize:(CGSize)contentSize;	// 0x84d51
- (void)_centerImageInScrollView;	// 0x84b6d
- (void)_configureViews;	// 0x10eb5
- (void)setHDRBadgeVisible:(BOOL)visible;	// 0x15ec1
- (void)_showHDRBadgeIfAppropriate;	// 0x11ee5
- (void)_setupHDRBadge;	// 0x84aa5
- (BOOL)photoShouldHaveHDRBadge;	// 0x17f2d
- (void)_repositionHDRBadge;	// 0x849d5
// converted property setter: - (void)setGesturesEnabled:(BOOL)enabled;	// 0x849b5
// converted property getter: - (BOOL)gesturesEnabled;	// 0x84991
- (BOOL)allowsEditing;	// 0x12c4d
- (void)setClientIsWallpaper:(BOOL)wallpaper;	// 0x848a5
- (BOOL)_clientIsWallpaper;	// 0x11eb5
// converted property getter: - (BOOL)userDidAdjustWallpaper;	// 0x84895
// converted property setter: - (void)setTVOut:(BOOL)anOut;	// 0x13085
// converted property getter: - (BOOL)isTVOut;	// 0x11e45
// converted property setter: - (void)setTileDelegate:(id)delegate;	// 0x130ad
// converted property getter: - (id)tileDelegate;	// 0x84885
// converted property setter: - (void)setVideoView:(id)view;	// 0x847bd
// converted property getter: - (id)videoView;	// 0x134e5
// converted property getter: - (id)scrollView;	// 0x1fa55
- (id)newCGImageBackedUIImage;	// 0x8471d
// converted property getter: - (id)image;	// 0x21879
// converted property getter: - (id)imageView;	// 0x8470d
- (id)expandableImageView;	// 0x846fd
- (void)forceZoomingGesturesEnabled;	// 0x846b5
- (void)setZoomingGesturesEnabled:(BOOL)enabled;	// 0x163c1
- (void)setCropOverlayRect:(CGRect)rect forCropRect:(CGRect)cropRect;	// 0x84615
- (void)setZoomScale:(float)scale;	// 0x1286d
- (id)description;	// 0x845ad
// declared property setter: - (void)setTileFrame:(CGRect)frame;	// 0x10745
// declared property getter: - (CGRect)tileFrame;	// 0x84589
// declared property setter: - (void)setThumbnailImage:(id)image;	// 0x84575
// declared property getter: - (id)thumbnailImage;	// 0x8454d
// declared property getter: - (id)photo;	// 0x13339
- (void)_setPhoto:(id)photo;	// 0x12d25
- (BOOL)tileIsOnScreen;	// 0x1b349
- (void)dealloc;	// 0x1ef6d
- (id)initWithPhoto:(id)photo thumbnailImage:(id)image size:(CGSize)size;	// 0x10429
- (id)initForPageController;	// 0x8434d
- (id)initWithPhoto:(id)photo image:(id)image frame:(CGRect)frame isThumbnail:(BOOL)thumbnail imageOrientation:(int)orientation allowZoomToFill:(BOOL)fill mode:(int)mode;	// 0x104a9
- (id)init;	// 0x105d1
@end

@interface PLPhotoTileViewController (PLImagePickerUtils)
- (int)_imageOrientation;	// 0x55a3d
- (id)_newOriginalImageForPickerFromCachedData;	// 0x55949
@end
