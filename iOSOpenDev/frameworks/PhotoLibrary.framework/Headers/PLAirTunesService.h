/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <PhotoLibrary/NSNetServiceDelegate.h>
#import <PhotoLibrary/XXUnknownSuperclass.h>

@class NSDictionary, NSMutableArray, NSNetService, MediaControlClient, MCMediaControlClientRemote, AirPlayRemoteSlideshow, NSString;
@protocol PLAirTunesServicePhotoBrowsingDataSource;

@interface PLAirTunesService : XXUnknownSuperclass <NSNetServiceDelegate> {
	NSNetService *_netService;	// 4 = 0x4
	DNSServiceRef_tRef _dnsService;	// 8 = 0x8
	NSString *_deviceID;	// 12 = 0xc
	id<PLAirTunesServicePhotoBrowsingDataSource> _dataSource;	// 16 = 0x10
	NSMutableArray *_streamedPhotoUuids;	// 20 = 0x14
	MediaControlClient *_mediaControlClient;	// 24 = 0x18
	MCMediaControlClientRemote *_remoteMediaControlClient;	// 28 = 0x1c
	NSString *_ipAddress;	// 32 = 0x20
	BOOL _streamingPhotos;	// 36 = 0x24
	BOOL _streamingRemoteSlideshow;	// 37 = 0x25
	BOOL _streamingLocalSlideShow;	// 38 = 0x26
	BOOL _streamingVideo;	// 39 = 0x27
	AirPlayRemoteSlideshow *_remoteSlideshow;	// 40 = 0x28
	NSDictionary *_remoteSlideshowAvailableFeatures;	// 44 = 0x2c
	NSString *_password;	// 48 = 0x30
	BOOL _requiresPassword;	// 52 = 0x34
	BOOL _validPassword;	// 53 = 0x35
	BOOL _sentPhoto;	// 54 = 0x36
	double _playStartTime;	// 56 = 0x38
	unsigned _features;	// 64 = 0x40
}
@property(assign, nonatomic) unsigned features;	// G=0xc28c5; S=0xc28d5; @synthesize=_features
@property(retain, nonatomic) NSString *password;	// G=0xc2851; S=0xc2861; @synthesize=_password
@property(assign, nonatomic) BOOL validPassword;	// G=0xc2831; S=0xc2841; @synthesize=_validPassword
@property(assign, nonatomic) BOOL requiresPassword;	// G=0xc2811; S=0xc2821; @synthesize=_requiresPassword
@property(retain, nonatomic) NSDictionary *remoteSlideshowAvailableFeatures;	// G=0xc27dd; S=0xc27ed; @synthesize=_remoteSlideshowAvailableFeatures
@property(retain, nonatomic) AirPlayRemoteSlideshow *remoteSlideshow;	// G=0xc27a9; S=0xc27b9; @synthesize=_remoteSlideshow
@property(retain, nonatomic) NSString *ipAddress;	// G=0xbfcb9; S=0xc2785; @synthesize=_ipAddress
@property(assign, nonatomic) id<PLAirTunesServicePhotoBrowsingDataSource> dataSource;	// G=0xc2885; S=0xc2895; @synthesize=_dataSource
@property(assign, nonatomic) BOOL streamingLocalSlideShow;	// G=0xc28a5; S=0xc28b5; @synthesize=_streamingLocalSlideShow
@property(readonly, assign, nonatomic) NSString *deviceID;	// G=0xc2775; @synthesize=_deviceID
@property(readonly, assign, nonatomic) NSNetService *netService;	// G=0xc2765; @synthesize=_netService
+ (void)endNetworkAssertion;	// 0xbf4f1
+ (void)beginNetworkAssertion;	// 0xbf46d
+ (BOOL)canDisplayMedia:(id)media;	// 0xbf429
// declared property setter: - (void)setFeatures:(unsigned)features;	// 0xc28d5
// declared property getter: - (unsigned)features;	// 0xc28c5
// declared property setter: - (void)setStreamingLocalSlideShow:(BOOL)show;	// 0xc28b5
// declared property getter: - (BOOL)streamingLocalSlideShow;	// 0xc28a5
// declared property setter: - (void)setDataSource:(id)source;	// 0xc2895
// declared property getter: - (id)dataSource;	// 0xc2885
// declared property setter: - (void)setPassword:(id)password;	// 0xc2861
// declared property getter: - (id)password;	// 0xc2851
// declared property setter: - (void)setValidPassword:(BOOL)password;	// 0xc2841
// declared property getter: - (BOOL)validPassword;	// 0xc2831
// declared property setter: - (void)setRequiresPassword:(BOOL)password;	// 0xc2821
// declared property getter: - (BOOL)requiresPassword;	// 0xc2811
// declared property setter: - (void)setRemoteSlideshowAvailableFeatures:(id)features;	// 0xc27ed
// declared property getter: - (id)remoteSlideshowAvailableFeatures;	// 0xc27dd
// declared property setter: - (void)setRemoteSlideshow:(id)slideshow;	// 0xc27b9
// declared property getter: - (id)remoteSlideshow;	// 0xc27a9
// declared property setter: - (void)setIpAddress:(id)address;	// 0xc2785
// declared property getter: - (id)deviceID;	// 0xc2775
// declared property getter: - (id)netService;	// 0xc2765
- (id)description;	// 0xc26d5
- (void)getRemoteFeaturesWithCompletionHandler:(id)completionHandler;	// 0xc2521
- (void)stopRemoteSlideshow;	// 0xc24d1
- (void)startRemoteSlideshowWithTheme:(id)theme remoteSlideshowDelegate:(id)delegate;	// 0xc21b5
- (id)remoteLocalizationForSlideshowThemeKey:(id)slideshowThemeKey;	// 0xc20c5
- (id)supportedRemoteSlideshowThemes;	// 0xc1f79
- (BOOL)supportsRemoteSlideshow;	// 0xc1f61
- (void)_setDeviceID:(id)anId;	// 0xc1f1d
- (id)_fixLegacyEvent:(id)event;	// 0xc1e35
- (BOOL)_streaming;	// 0xc1e09
- (void)setVideoPosition:(double)position;	// 0xc1dcd
- (void)getVideoPosition:(id)position;	// 0xc1d91
- (void)setRate:(float)rate;	// 0xc1c59
- (void)playVideo:(id)video startTime:(double)time stateChangedBlock:(id)block;	// 0xc1489
- (void)streamPhoto:(id)photo withTransition:(id)transition;	// 0xc1041
- (void)_streamPhotosAdjacentToPhoto:(id)photo withTransition:(id)transition;	// 0xc0d55
- (void)_streamPhoto:(id)photo withTransition:(id)transition andAction:(id)action;	// 0xc0b1d
- (void)stopStreamingWithCompletionBlock:(id)completionBlock;	// 0xc0879
- (void)stopStreaming;	// 0xc0649
- (void)invalidateStreaming;	// 0xc0585
- (void)_reallySendPhotoData:(id)data forPhotoWithUUID:(id)uuid withTransition:(id)transition andAction:(id)action;	// 0xc0159
- (BOOL)_allowsPhotoCaching;	// 0xc011d
- (BOOL)_supportsPhotoCaching;	// 0xc0109
- (void)validate;	// 0xc00f5
- (void)_validateWithCompletionBlock:(id)completionBlock;	// 0xbfd75
- (void)_invalidatePassword;	// 0xbfd09
- (void *)_keychainAccessibility;	// 0xbfcf9
- (BOOL)isAvailable;	// 0xbfcc9
// declared property getter: - (id)ipAddress;	// 0xbfcb9
- (id)name;	// 0xbfc99
- (void)netService:(id)service didNotResolve:(id)resolve;	// 0xbfc55
- (void)netServiceDidResolveAddress:(id)netService;	// 0xbfaed
- (BOOL)isEqual:(id)equal;	// 0xbfa59
- (unsigned)hash;	// 0xbfa09
- (void)dealloc;	// 0xbf881
- (id)initWithNSNetService:(id)nsnetService;	// 0xbf809
- (void)_resolveWithTimeout:(double)timeout;	// 0xbf5bd
- (void)_cancelResolve;	// 0xbf559
@end
