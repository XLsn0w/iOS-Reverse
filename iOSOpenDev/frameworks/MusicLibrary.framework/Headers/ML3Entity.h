/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import <MusicLibrary/ML3Entity.h>
#import <MusicLibrary/MusicLibrary-Structs.h>
#import <MusicLibrary/XXUnknownSuperclass.h>

@class ML3MusicLibrary;

@interface ML3Entity : XXUnknownSuperclass {
@private
	ML3MusicLibrary *_library;	// 4 = 0x4
	long long _persistentID;	// 8 = 0x8
}
@property(readonly, assign) BOOL existsInLibrary;	// G=0x1c23d; 
@property(readonly, assign) long long persistentID;	// G=0x101c1; @synthesize=_persistentID
@property(assign) ML3MusicLibrary *library;	// G=0xa82d; S=0x1dc21; @synthesize=_library
+ (void)enumeratePersistentIDsInLibrary:(id)library afterRevision:(long long)revision usingBlock:(id)block;	// 0x1da39
+ (int)revisionTrackingCode;	// 0x1da31
+ (id)orderingSQLForProperties:(id)properties directionality:(id)directionality;	// 0x9839
+ (id)indexableSQLForProperties:(id)properties;	// 0x1d909
+ (id)disambiguatedSQLForProperty:(id)property;	// 0x2f11
+ (void)predisambiguateProperties:(id)properties toDictionary:(id)dictionary;	// 0x8785
+ (id)allProperties;	// 0x1d905
+ (id)predisambiguatedProperties;	// 0x2f9d
+ (id)collectionClassesToUpdateBeforeDelete;	// 0x1d901
+ (id)persistentIDColumnForTable:(id)table;	// 0x1d8fd
+ (id)extraTablesToInsert;	// 0xfe99
+ (id)extraTablesToDelete;	// 0x1d8f9
+ (BOOL)deleteFromLibrary:(id)library persistentIDs:(const long long *)ids count:(unsigned)count;	// 0x1d389
+ (BOOL)_deleteRowForPersistentIDs:(const long long *)persistentIDs count:(unsigned)count library:(id)library table:(id)table usingColumn:(id)column;	// 0x1d1c9
+ (BOOL)libraryContentsChangeForProperty:(id)property;	// 0x1d1c5
+ (id)foreignPropertyForProperty:(id)property entityClass:(Class)aClass;	// 0xb7a5
+ (id)foreignColumnForProperty:(id)property;	// 0x1c81d
+ (id)foreignDatabaseTableForProperty:(id)property;	// 0x1c819
+ (id)sectionPropertyForProperty:(id)property;	// 0x1c815
+ (id)defaultOrderingProperties;	// 0x1c811
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0x1c73d
+ (id)newWithDictionary:(id)dictionary inLibrary:(id)library;	// 0xd6ad
+ (id)newWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0xa18d
+ (id)joinClauseForProperty:(id)property;	// 0x2ff5
+ (id)subselectPropertyForProperty:(id)property;	// 0x1c739
+ (id)subselectStatementForProperty:(id)property;	// 0x364d
+ (BOOL)insertionChangesLibraryContents;	// 0x1000d
+ (BOOL)incrementRevisionWithLibrary:(id)library persistentID:(long long)anId deleted:(BOOL)deleted;	// 0xfe9d
+ (id)unsettableProperties;	// 0xfa99
+ (BOOL)insertValues:(id)values intoTable:(id)table persistentID:(long long)anId library:(id)library;	// 0xfabd
// declared property getter: - (long long)persistentID;	// 0x101c1
// declared property setter: - (void)setLibrary:(id)library;	// 0x1dc21
// declared property getter: - (id)library;	// 0xa82d
- (void)incrementRevision;	// 0x1dbc9
- (BOOL)deleteFromLibrary;	// 0x1d8a5
- (void)didChangeValueForProperties:(const id *)properties count:(unsigned)count;	// 0x11029
- (BOOL)setValue:(id)value forProperty:(id)property;	// 0x106fd
- (BOOL)setValuesForPropertiesWithDictionary:(id)dictionary;	// 0x10f05
- (BOOL)setValues:(const id *)values forProperties:(const id *)properties count:(unsigned)count;	// 0x10725
- (id)valueForProperty:(id)property;	// 0xbbb9
- (void)getValues:(id *)values forProperties:(id *)properties count:(unsigned)count;	// 0xa299
- (id)newSelectSQLForProperties:(id *)properties count:(unsigned)count predicate:(id)predicate;	// 0xa419
- (BOOL)matchesPredicate:(id)predicate;	// 0x1c51d
// declared property getter: - (BOOL)existsInLibrary;	// 0x1c23d
- (id)description;	// 0x1c1e1
- (unsigned)hash;	// 0x1c1d1
- (BOOL)isEqual:(id)equal;	// 0x1c14d
- (id)copyWithZone:(NSZone *)zone;	// 0x1c0e9
- (id)copyInLibrary:(id)library;	// 0x1bf61
- (id)initWithDictionary:(id)dictionary inLibrary:(id)library cachedNameOrders:(id)orders;	// 0xe539
- (id)initWithPersistentID:(long long)persistentID inLibrary:(id)library;	// 0xa1bd
@end

@interface ML3Entity (ML3QueryAdditions)
+ (id)directCollectionQueryWithAggregateQuery:(id)aggregateQuery predicate:(id)predicate usingSections:(BOOL)sections;	// 0x2aaf5
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties usingSections:(BOOL)sections;	// 0x8a55
+ (id)queryWithLibrary:(id)library predicate:(id)predicate usingSections:(BOOL)sections;	// 0x2aa79
+ (id)queryWithLibrary:(id)library predicate:(id)predicate orderingProperties:(id)properties;	// 0xa9c1
+ (id)queryWithLibrary:(id)library predicate:(id)predicate;	// 0xbbe5
+ (id)anyInLibrary:(id)library predicate:(id)predicate;	// 0x2969
@end

@interface ML3Entity (ML3AggregateQueryAdditions)
+ (id)aggregateQueryWithUnitQuery:(id)unitQuery foreignPersistentIDProperty:(id)property;	// 0xb355
@end

@interface ML3Entity (ML3EntityReplacerAdditions)
+ (id)replacerWithProperties:(id)properties databaseHandle:(sqlite3 *)handle;	// 0x44989
@end
