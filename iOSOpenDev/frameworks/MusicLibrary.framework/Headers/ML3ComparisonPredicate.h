/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import <MusicLibrary/ML3PropertyPredicate.h>
#import <MusicLibrary/MusicLibrary-Structs.h>

@class NSString;

@interface ML3ComparisonPredicate : ML3PropertyPredicate {
@private
	id _value;	// 8 = 0x8
	NSString *_transformFunction;	// 12 = 0xc
	int _comparison;	// 16 = 0x10
	BOOL _caseInsensitive;	// 20 = 0x14
	BOOL _treatNullAsBlank;	// 21 = 0x15
}
@property(readonly, assign, nonatomic) NSString *operator;	// G=0x3a25; 
@property(copy, nonatomic) NSString *transformFunction;	// G=0x2ca59; S=0x1de1; @synthesize=_transformFunction
@property(assign, nonatomic) BOOL treatNullAsBlank;	// G=0x2ca49; S=0x1dd1; @synthesize=_treatNullAsBlank
@property(assign, nonatomic) BOOL caseInsensitive;	// G=0x2ca39; S=0x1dc1; @synthesize=_caseInsensitive
@property(assign, nonatomic) int comparison;	// G=0x2ca29; S=0x1db1; @synthesize=_comparison
@property(retain, nonatomic) id value;	// G=0x2ca19; S=0x1d8d; @synthesize=_value
+ (id)predicateWithProperty:(id)property equalToValue:(id)value;	// 0x1b25
+ (id)predicateWithProperty:(id)property equalToInteger:(int)integer;	// 0x1ae5
+ (id)predicateWithProperty:(id)property equalToInt64:(long long)int64;	// 0x2c9d1
+ (id)predicateWithProperty:(id)property value:(id)value comparison:(int)comparison transformFunction:(id)function;	// 0x2c969
+ (id)predicateWithProperty:(id)property value:(id)value comparison:(int)comparison caseInsensitive:(BOOL)insensitive treatNullAsBlank:(BOOL)blank;	// 0x2c8fd
+ (id)predicateWithProperty:(id)property value:(id)value comparison:(int)comparison caseInsensitive:(BOOL)insensitive;	// 0x9f59
+ (id)predicateWithProperty:(id)property value:(id)value comparison:(int)comparison;	// 0x88a9
// declared property setter: - (void)setTransformFunction:(id)function;	// 0x1de1
// declared property getter: - (id)transformFunction;	// 0x2ca59
// declared property setter: - (void)setTreatNullAsBlank:(BOOL)blank;	// 0x1dd1
// declared property getter: - (BOOL)treatNullAsBlank;	// 0x2ca49
// declared property setter: - (void)setCaseInsensitive:(BOOL)insensitive;	// 0x1dc1
// declared property getter: - (BOOL)caseInsensitive;	// 0x2ca39
// declared property setter: - (void)setComparison:(int)comparison;	// 0x1db1
// declared property getter: - (int)comparison;	// 0x2ca29
// declared property setter: - (void)setValue:(id)value;	// 0x1d8d
// declared property getter: - (id)value;	// 0x2ca19
- (void)bindToSqlite3Statement:(sqlite3_stmt *)sqlite3Statement bindingIndex:(inout int *)index;	// 0x4d71
- (void)appendSQLToMutableString:(id)mutableString entityClass:(Class)aClass;	// 0x3799
// declared property getter: - (id)operator;	// 0x3a25
- (id)description;	// 0x2c801
- (unsigned)hash;	// 0x2c7b9
- (BOOL)isEqual:(id)equal;	// 0x2c671
- (void)encodeWithCoder:(id)coder;	// 0x2c555
- (id)initWithCoder:(id)coder;	// 0x2c435
- (void)dealloc;	// 0x9aad
- (id)initWithProperty:(id)property value:(id)value comparison:(int)comparison caseInsensitive:(BOOL)insensitive transformFunction:(id)function treatNullAsBlank:(BOOL)blank;	// 0x1b85
@end
