/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

#import <ChatKit/CKConversationProtocol.h>
#import <ChatKit/_CKConversation.h>

@class NSArray, CKService, NSSet, CKSubConversation, NSTimer, NSDate, NSMutableSet;

@interface CKAggregateConversation : _CKConversation <CKConversationProtocol> {
@private
	NSMutableSet *_subConversations;	// 76 = 0x4c
	NSMutableSet *_services;	// 80 = 0x50
	CKSubConversation *_firstConversation;	// 84 = 0x54
	CKService *_userRequestedService;	// 88 = 0x58
	NSTimer *_recalculateDowngradeStateTimer;	// 92 = 0x5c
	int _downgradeState;	// 96 = 0x60
	BOOL _ignoreDowngradeStatusUpdates;	// 100 = 0x64
	BOOL _bulkAddingConversations;	// 101 = 0x65
	NSDate *_cachedDate;	// 104 = 0x68
	NSArray *_cachedMessages;	// 108 = 0x6c
	CKService *_cachedPreferredService;	// 112 = 0x70
}
@property(readonly, assign) NSSet *subConversations;	// G=0x70429; @synthesize=_subConversations
@property(readonly, assign) NSSet *services;	// G=0x70419; @synthesize=_services
@property(readonly, assign, nonatomic) BOOL isStale;	// G=0x73a81; 
@property(readonly, assign) CKSubConversation *preferredConversation;	// G=0x7361d; 
@property(readonly, assign) CKService *preferredService;	// G=0x73519; 
@property(retain) CKService *userRequestedService;	// G=0x70409; S=0x732f9; 
@property(retain) id unsentComposition;	// G=0x73c11; S=0x73c49; converted property
@property(retain) id recipients;	// G=0x72e7d; S=0x72fb5; converted property
@property(retain) id name;	// G=0x72cc5; S=0x72ce5; converted property
- (id)_initWithUpdatesDisabled:(BOOL)updatesDisabled containedConversations:(id)conversations va_list:(void *)list;	// 0x70439
- (id)initWithUpdatesDisabled:(BOOL)updatesDisabled containedConversations:(id)conversations;	// 0x73e65
- (id)initWithContainedConversations:(id)containedConversations;	// 0x73e31
- (void)dealloc;	// 0x73c85
// converted property setter: - (void)setUnsentComposition:(id)composition;	// 0x73c49
// converted property getter: - (id)unsentComposition;	// 0x73c11
- (void)reloadStaleSubconversations;	// 0x73b45
// declared property getter: - (BOOL)isStale;	// 0x73a81
- (id)aggregateConversation;	// 0x70405
- (id)incomingTypingMessage;	// 0x73975
- (void)addSubConversation:(id)conversation;	// 0x7380d
- (void)removeSubConversation:(id)conversation;	// 0x73631
// declared property getter: - (id)preferredConversation;	// 0x7361d
- (void)_setupPreferredServiceChangeHandlers;	// 0x73579
- (BOOL)isDowngraded;	// 0x73549
// declared property getter: - (id)preferredService;	// 0x73519
- (id)_preferredServiceWithCreateConversation:(BOOL)createConversation;	// 0x73361
// declared property getter: - (id)userRequestedService;	// 0x70409
// declared property setter: - (void)setUserRequestedService:(id)service;	// 0x732f9
- (id)subConverationForService:(id)service create:(BOOL)create;	// 0x732e9
- (void)beginBatchUpdates;	// 0x732a1
- (void)endBatchUpdates;	// 0x73259
- (id)service;	// 0x73231
- (id)groupID;	// 0x73209
- (id)groupIDs;	// 0x730d9
- (void *)abRecord;	// 0x730b1
- (int)propertyType;	// 0x73089
- (int)identifier;	// 0x73061
- (id)uniqueIdentifier;	// 0x73049
// converted property setter: - (void)setRecipients:(id)recipients;	// 0x72fb5
- (unsigned)recipientsHash;	// 0x72ec5
- (unsigned)recipientCount;	// 0x72ea5
// converted property getter: - (id)recipients;	// 0x72e7d
- (id)recipient;	// 0x72e55
- (void)updateRecipients:(id)recipients;	// 0x72d9d
// converted property setter: - (void)setName:(id)name;	// 0x72ce5
// converted property getter: - (id)name;	// 0x72cc5
- (void)resetCaches;	// 0x72c01
- (id)date;	// 0x72aa5
- (int)addMessage:(id)message incrementUnreadCount:(BOOL)count;	// 0x729f5
- (void)removeMessage:(id)message;	// 0x7298d
- (void)updateMessage:(id)message;	// 0x72939
- (void)removeAllMessages;	// 0x7285d
- (void)deleteAllMessages;	// 0x72781
- (void)deleteAllMessagesAndRemoveGroup;	// 0x726c9
- (void)loadLastMessage;	// 0x725ed
- (void)loadAllMessages;	// 0x72511
- (void)loadMoreMessages;	// 0x72411
- (void)setLimitToLoad:(int)load;	// 0x7232d
- (BOOL)moreMessagesToLoad;	// 0x72225
- (id)messages;	// 0x71f25
- (id)latestMessage;	// 0x71ec9
- (id)latestIncomingMessage;	// 0x71e59
- (void)markAllMessagesAsRead;	// 0x71da1
- (void)resetPendingMessages;	// 0x71ce9
- (id)pendingMessages;	// 0x71bdd
- (int)unreadCount;	// 0x71b21
- (BOOL)hasUnreadMessages;	// 0x71a5d
- (BOOL)isEmpty;	// 0x719a9
- (BOOL)isPlaceholder;	// 0x71875
- (void)addPlaceholderMessageIfNeededWithDate:(id)date;	// 0x717bd
- (id)placeholderMessage;	// 0x716b9
- (BOOL)containsConversation:(id)conversation;	// 0x71691
- (id)description;	// 0x71629
- (id)shortDescription;	// 0x715a5
- (void)_notifyConversationAdded;	// 0x71565
- (void)_invalidateDowngradeState;	// 0x71555
- (void)_invalidateCaches;	// 0x71501
- (void)_invalidatePreferredServiceCache;	// 0x714d5
- (id)_subConversationForService:(id)service create:(BOOL)create;	// 0x71235
- (id)_preferredConversationCreate:(BOOL)create;	// 0x711fd
- (id)preferredConversationCreate:(BOOL)create;	// 0x711ed
- (id)_bestExistingConversation;	// 0x711bd
- (void)_updateDowngradeState:(int)state checkAgainInterval:(double)interval;	// 0x70fd1
- (void)_calculateDowngradeStateTimerFired;	// 0x70fa5
- (void)_handlePreferredServiceChangedNotification:(id)notification;	// 0x70e55
- (void)_calculateDowngradeState;	// 0x70b39
- (void)subConversationMarkedAsRead;	// 0x70ac5
- (void)_postChangeUpdate:(BOOL)update;	// 0x709b1
- (void)subConversationDidChange:(BOOL)subConversation;	// 0x7097d
- (void)subConversationDowngradeStateDidChange:(id)subConversationDowngradeState;	// 0x70925
- (id)outgoingTypingMessage;	// 0x70865
- (id)_comparableObjectsFromEntityArray:(id)entityArray;	// 0x7077d
- (BOOL)isAggregatableWithConversation:(id)conversation;	// 0x7062d
- (int)compareByDateDescending:(id)descending;	// 0x70579
// declared property getter: - (id)services;	// 0x70419
// declared property getter: - (id)subConversations;	// 0x70429
@end
