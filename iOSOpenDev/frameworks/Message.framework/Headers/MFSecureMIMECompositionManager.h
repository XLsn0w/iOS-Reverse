/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import <Message/Message-Structs.h>
#import <Message/XXUnknownSuperclass.h>

@class NSMutableSet, MFError, NSLock, NSSet, MailAccount, NSMutableDictionary, NSString;
@protocol MFSecureMIMECompositionManagerDelegate;

@interface MFSecureMIMECompositionManager : XXUnknownSuperclass {
	id<MFSecureMIMECompositionManagerDelegate> _delegate;	// 4 = 0x4
	NSLock *_lock;	// 8 = 0x8
	dispatch_queue_s *_queue;	// 12 = 0xc
	MailAccount *_sendingAccount;	// 16 = 0x10
	NSString *_sendingAddress;	// 20 = 0x14
	SecIdentity *_signingIdentity;	// 24 = 0x18
	MFError *_signingIdentityError;	// 28 = 0x1c
	SecIdentity *_encryptionIdentity;	// 32 = 0x20
	MFError *_encryptionIdentityError;	// 36 = 0x24
	NSMutableSet *_recipients;	// 40 = 0x28
	NSMutableDictionary *_errorsByRecipient;	// 44 = 0x2c
	NSMutableDictionary *_certificatesByRecipient;	// 48 = 0x30
	int _signingPolicy;	// 52 = 0x34
	int _encryptionPolicy;	// 56 = 0x38
	int _signingStatus;	// 60 = 0x3c
	int _encryptionStatus;	// 64 = 0x40
	unsigned _encryptionStatusSemaphore;	// 68 = 0x44
	unsigned _signingStatusSemaphore;	// 72 = 0x48
	BOOL _invalidated;	// 76 = 0x4c
}
@property(readonly, assign) NSSet *recipients;	// G=0x82af9; 
@property(readonly, assign) int encryptionStatus;	// G=0x20f7d; 
@property(readonly, assign) int signingStatus;	// G=0x82915; 
@property(readonly, assign) int encryptionPolicy;	// G=0x20fc9; 
@property(readonly, assign) int signingPolicy;	// G=0x82645; 
@property(readonly, assign) MailAccount *sendingAccount;	// G=0x82635; 
@property(copy) NSString *sendingAddress;	// G=0x827cd; S=0x20b39; 
@property(assign) id<MFSecureMIMECompositionManagerDelegate> delegate;	// G=0x82759; S=0x20aed; 
+ (SecIdentity *)copySigningIdentityForAccount:(id)account sendingAddress:(id)address error:(id *)error;	// 0x83071
+ (SecIdentity *)copyEncryptionIdentityForAccount:(id)account sendingAddress:(id)address error:(id *)error;	// 0x82f55
+ (id)copyEncryptionCertificatesForAccount:(id)account recipientAddress:(id)address error:(id *)error;	// 0x82bb5
- (id)init;	// 0x82701
- (id)initWithSigningPolicy:(int)signingPolicy encryptionPolicy:(int)policy;	// 0x82721
- (id)initWithSendingAccount:(id)sendingAccount signingPolicy:(int)policy encryptionPolicy:(int)policy3;	// 0x208c9
- (void)dealloc;	// 0x211ed
- (void)addRecipients:(id)recipients;	// 0x20dad
- (void)removeRecipients:(id)recipients;	// 0x83d0d
- (void)invalidate;	// 0x211a1
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x20aed
// declared property getter: - (id)delegate;	// 0x82759
// declared property setter: - (void)setSendingAddress:(id)address;	// 0x20b39
// declared property getter: - (id)sendingAddress;	// 0x827cd
// declared property getter: - (id)sendingAccount;	// 0x82635
// declared property getter: - (int)signingPolicy;	// 0x82645
// declared property getter: - (int)encryptionPolicy;	// 0x20fc9
- (void)_determineSigningStatusWithSendingAddress:(id)sendingAddress;	// 0x83b79
- (void)_notifyDelegateSigningStatusDidChange:(int)_notifyDelegateSigningStatus identity:(SecIdentity *)identity error:(id)error;	// 0x82819
- (BOOL)_updateSigningStatus_nts;	// 0x209e1
- (void)_setSigningIdentityError_nts:(id)nts;	// 0x828cd
// declared property getter: - (int)signingStatus;	// 0x82915
- (void)_determineEncryptionStatusWithSendingAddress:(id)sendingAddress;	// 0x8393d
- (void)_determineEncryptionStatusWithNewRecipients:(id)newRecipients;	// 0x8341d
- (BOOL)_updateEncryptionStatus_nts;	// 0x20a49
- (void)_setEncryptionIdentityError_nts:(id)nts;	// 0x82961
- (void)_notifyDelegateEncryptionStatusDidChange:(int)_notifyDelegateEncryptionStatus certsByRecipient:(id)recipient errorsByRecipient:(id)recipient3 identity:(SecIdentity *)identity error:(id)error;	// 0x829a9
// declared property getter: - (int)encryptionStatus;	// 0x20f7d
// declared property getter: - (id)recipients;	// 0x82af9
- (id)compositionSpecification;	// 0x8318d
- (BOOL)shouldAllowSend;	// 0x82b65
- (BOOL)_shouldSign_nts;	// 0x82655
- (BOOL)_shouldEncrypt_nts;	// 0x82681
- (BOOL)_shouldAllowSend_nts;	// 0x826ad
@end
