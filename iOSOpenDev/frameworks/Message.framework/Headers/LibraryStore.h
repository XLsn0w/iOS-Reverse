/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import <Message/Message-Structs.h>
#import <Message/MailMessageStore.h>

@class NSMutableSet, NSDate, MessageCriterion, MessageLibrary;

@interface LibraryStore : MailMessageStore {
	MessageLibrary *_library;	// 80 = 0x50
	NSDate *_earliestReceivedDate;	// 84 = 0x54
	MessageCriterion *_criterion;	// 88 = 0x58
	double _lastUpdated;	// 92 = 0x5c
	unsigned _openOptions;	// 100 = 0x64
	NSMutableSet *_memberMessageIDs;	// 104 = 0x68
	unsigned _messageAvailabilityCount;	// 108 = 0x6c
	BOOL _mailboxUnreadCountUpdatePending;	// 112 = 0x70
	unsigned _serverMessageCount;	// 116 = 0x74
	unsigned _serverUnreadCount;	// 120 = 0x78
}
@property(retain, nonatomic) NSDate *earliestReceivedDate;	// G=0x42f49; S=0x167ad; @synthesize=_earliestReceivedDate
@property(retain) MessageLibrary *library;	// G=0x131d1; S=0x9d31; converted property
@property(readonly, retain) MessageCriterion *criterion;	// G=0x17c75; converted property
+ (void)initialize;	// 0x8ae5
+ (id)_storeCacheMapTable;	// 0x43085
+ (unsigned)defaultLoadOptions;	// 0x15add
+ (id)storeWithCriterion:(id)criterion;	// 0x4303d
+ (id)storeWithMailbox:(id)mailbox;	// 0x42ff5
+ (id)sharedInstance;	// 0x11079
+ (id)sharedInstanceIfExists;	// 0x11121
+ (BOOL)createEmptyStoreForPath:(id)path;	// 0x42f91
+ (BOOL)storeAtPathIsWritable:(id)pathIsWritable;	// 0x42f59
- (id)initWithCriterion:(id)criterion mailbox:(id)mailbox readOnly:(BOOL)only;	// 0x9a05
- (id)initWithCriterion:(id)criterion;	// 0x454d9
- (id)initWithMailboxUid:(id)mailboxUid readOnly:(BOOL)only;	// 0x8ba1
- (id)initWithMailbox:(id)mailbox;	// 0x454c5
// converted property setter: - (void)setLibrary:(id)library;	// 0x9d31
// converted property getter: - (id)library;	// 0x131d1
- (id)mailbox;	// 0x42f19
- (void)_updateMailboxUnreadCount;	// 0x45439
- (void)addCountsForMessages:(id)messages shouldUpdateUnreadCount:(BOOL)count;	// 0x452c9
- (BOOL)shouldCancel;	// 0x42f2d
- (void)_addInvocationToQueue:(id)queue;	// 0x1a8b5
- (void)libraryFinishedSendingMessages;	// 0x45235
- (void)openAsynchronouslyWithOptions:(unsigned)options;	// 0x45205
- (void)openSynchronously;	// 0xfb8d
- (unsigned)totalCount;	// 0x451c5
- (unsigned)nonDeletedCountIncludingServerSearch:(BOOL)search andThreadSearch:(BOOL)search2;	// 0x15ebd
- (id)copyOfMessagesInRange:(NSRange)range options:(unsigned)options generation:(unsigned *)generation;	// 0x17965
- (id)copyOfMessageInfos;	// 0xfdf9
- (CFSetRef)copyLibraryIDsWithoutConversationHashes;	// 0xf879
- (unsigned)locationOfMessage:(id)message;	// 0x45119
- (id)messageWithLibraryID:(unsigned)libraryID;	// 0x10449
- (id)copyOfMessagesInRange:(NSRange)range options:(unsigned)options;	// 0x17941
- (id)copyOfAllMessagesWithOptions:(unsigned)options;	// 0x17879
- (id)copyOfAllMessages;	// 0x450fd
- (id)copyOfAllMessagesForBodyLoadingFromRowID:(unsigned)rowID limit:(unsigned)limit;	// 0x44f81
- (id)mutableCopyOfAllMessages;	// 0x44f49
- (id)copyMessagesMatchingText:(id)text options:(unsigned)options;	// 0x44cd1
- (id)copyMessagesMatchingCriterion:(id)criterion options:(unsigned)options;	// 0x1ee45
- (id)copyMessagesWithRemoteIDs:(id)remoteIDs options:(unsigned)options;	// 0x44c45
- (id)serverSearchResults;	// 0x44be1
- (void)willFetchMessages;	// 0x165b9
- (id)filterMessagesByMembership:(id)membership;	// 0x1a9fd
- (void)handleMessagesAdded:(id)added earliestReceivedDate:(id)date;	// 0x44ab1
- (void)messagesWereAdded:(id)added forIncrementalLoading:(BOOL)incrementalLoading earliestReceivedDate:(id)date;	// 0x44979
- (void)_handleFlagsChangedForMessages:(id)messages flags:(id)flags oldFlagsByMessage:(id)message;	// 0x1ab6d
- (void)handleMessageFlagsChanged:(id)changed;	// 0x1a939
- (void)handleMessagesCompacted:(id)compacted;	// 0x4478d
- (void)dealloc;	// 0x44705
- (id)messageForMessageID:(id)messageID options:(unsigned)options;	// 0x44699
- (id)_fetchHeaderDataForMessage:(id)message downloadIfNecessary:(BOOL)necessary;	// 0x44675
- (id)_fetchBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available downloadIfNecessary:(BOOL)necessary partial:(BOOL *)partial;	// 0x44641
- (id)_fetchFullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available downloadIfNecessary:(BOOL)necessary;	// 0x42f31
- (id)_fetchDataForMimePart:(id)mimePart range:(NSRange)range isComplete:(BOOL *)complete;	// 0x42f35
- (id)dataForMimePart:(id)mimePart inRange:(NSRange)range isComplete:(BOOL *)complete downloadIfNecessary:(BOOL)necessary didDownload:(BOOL *)download;	// 0x1b749
- (void)setData:(id)data forMimePart:(id)mimePart isComplete:(BOOL)complete;	// 0x44579
- (id)_copyDataFromMimePart:(id)mimePart threshold:(unsigned)threshold downloadIfNecessary:(BOOL)necessary;	// 0x440a1
- (id)fullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available isComplete:(BOOL *)complete downloadIfNecessary:(BOOL)necessary usePartDatas:(BOOL)datas;	// 0x1bdc5
- (id)fullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available isComplete:(BOOL *)complete downloadIfNecessary:(BOOL)necessary;	// 0x44075
- (id)bodyDataForMessage:(id)message isComplete:(BOOL *)complete isPartial:(BOOL *)partial downloadIfNecessary:(BOOL)necessary;	// 0x43db5
- (unsigned)indexOfMessage:(id)message;	// 0x43da1
- (void)deleteMessages:(id)messages moveToTrash:(BOOL)trash;	// 0x438b9
- (void)deleteMessagesOlderThanNumberOfDays:(int)days compact:(BOOL)compact;	// 0x437dd
- (id)setFlagsLocallyFromDictionary:(id)dictionary forMessages:(id)messages;	// 0x437b1
- (id)setFlagsFromDictionary:(id)dictionary forMessages:(id)messages;	// 0x437a1
- (void)setNumberOfAttachments:(unsigned)attachments isSigned:(BOOL)aSigned isEncrypted:(BOOL)encrypted forMessage:(id)message;	// 0x19ed9
- (BOOL)allowsAppend;	// 0x43781
- (int)appendMessages:(id)messages unsuccessfulOnes:(id)ones newMessageIDs:(id)ids newMessages:(id)messages4 flagsToSet:(id)set;	// 0x4364d
- (BOOL)canCompact;	// 0x435f5
- (void)doCompact;	// 0x4358d
- (void)compactMessages:(id)messages;	// 0x43549
- (id)dataPathForMessage:(id)message part:(id)part;	// 0x1c131
- (void)writeUpdatedMessageDataToDisk;	// 0x42f39
- (void)updateMetadata;	// 0x42f3d
- (void)updateUserInfoToLatestValues;	// 0xfcd5
- (void)_setNeedsAutosave;	// 0x42f41
// converted property getter: - (id)criterion;	// 0x17c75
- (id)URLString;	// 0xf8dd
- (unsigned)unreadCount;	// 0x43521
- (void)_flushAllMessageData;	// 0x117e1
- (void)_rebuildTableOfContentsSynchronously;	// 0x432d1
- (void)forceResync;	// 0x42f45
- (void)_flushAllCachesLocking:(BOOL)locking;	// 0x11921
- (id)_cachedBodyForMessage:(id)message valueIfNotPresent:(id)present;	// 0x19589
- (id)_cachedHeadersForMessage:(id)message valueIfNotPresent:(id)present;	// 0x19cb9
- (id)_cachedBodyDataForMessage:(id)message valueIfNotPresent:(id)present;	// 0x1d009
- (id)_cachedBodyDataContainerForMessage:(id)message valueIfNotPresent:(id)present;	// 0x195a9
- (id)_cachedHeaderDataForMessage:(id)message valueIfNotPresent:(id)present;	// 0x19c29
- (void)purgeMessages:(id)messages;	// 0x432ad
- (void)purgeMessagesBeyondLimit:(unsigned)limit keepingMessage:(id)message;	// 0x43171
- (BOOL)hasMessageForAccount:(id)account;	// 0x16f61
- (void)messagesAdded:(id)added;	// 0x43105
- (void)messageFlagsChanged:(id)changed;	// 0x1a801
- (void)messagesCompacted:(id)compacted;	// 0x430b1
- (BOOL)hasCompleteDataForMimePart:(id)mimePart;	// 0x1cfbd
// declared property getter: - (id)earliestReceivedDate;	// 0x42f49
// declared property setter: - (void)setEarliestReceivedDate:(id)date;	// 0x167ad
@end
