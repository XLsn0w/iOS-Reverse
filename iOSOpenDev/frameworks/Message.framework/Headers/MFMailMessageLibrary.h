/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/Message
 */

#import <Message/Message-Structs.h>
#import <Message/MessageLibrary.h>

@class MFWeakSet, NSSet, NSTimer, NSMutableSet, NSDate, NSString;
@protocol MFLibraryMigrationHandler, MFMailboxPathProvider;

@interface MFMailMessageLibrary : MessageLibrary {
	int _availability;	// 8 = 0x8
	NSDate *_lastUpdateDate;	// 12 = 0xc
	NSTimer *_commitTimer;	// 16 = 0x10
	double _beginTransactionTime;	// 20 = 0x14
	sqlite3 *_writerDB;	// 28 = 0x1c
	CFDictionaryRef _mailboxCache;	// 32 = 0x20
	NSMutableSet *_cachedDatabases;	// 36 = 0x24
	CFDictionaryRef _statementCachesByDB;	// 40 = 0x28
	double _dateDatabaseBecameLocked;	// 44 = 0x2c
	opaque_pthread_mutex_t _dbLock;	// 52 = 0x34
	opaque_pthread_mutex_t _seqNumbersLock;	// 96 = 0x60
	opaque_pthread_mutex_t _priorityLock;	// 140 = 0x8c
	dispatch_queue_s *_writingQueue;	// 184 = 0xb8
	BOOL _outstandingWritesExist;	// 188 = 0xbc
	BOOL _writerDBIsBeingUsedAsReader;	// 189 = 0xbd
	void *_ICUSearchContext;	// 192 = 0xc0
	void *_CPSearchContext;	// 196 = 0xc4
	id<MFMailboxPathProvider> _mailboxPathProvider;	// 200 = 0xc8
	/*function-pointer*/ void *resetHandler;	// 204 = 0xcc
	/*function-pointer*/ void *_busyHandler;	// 208 = 0xd0
	void *_busyHandlerContext;	// 212 = 0xd4
	MFWeakSet *_accounts;	// 216 = 0xd8
	NSString *_activeAccountClause;	// 220 = 0xdc
	id<MFLibraryMigrationHandler> _migrationHandler;	// 224 = 0xe0
	unsigned _attached : 1;	// 228 = 0xe4
	NSSet *_messagesToUpdateThreadingInfo;	// 232 = 0xe8
}
@property(readonly, assign, nonatomic) int availability;	// G=0x4b669; @synthesize=_availability
@property(assign) int threadPriority;	// G=0xc595; S=0x4bd11; converted property
@property(readonly, assign) BOOL outstandingWritesExist;	// G=0xf085; converted property
+ (id)defaultInstance;	// 0x4109
+ (unsigned long)priorityKey;	// 0x19559
+ (void)initialize;	// 0x3eed
- (id)initWithPath:(id)path;	// 0x41f1
- (void)dealloc;	// 0x5744d
- (void)registerForMobileKeyBagNotifications;	// 0x440d
- (void)deleteDatabaseAtPath:(id)path;	// 0x573dd
- (void)renameDatabaseAtPath:(id)path;	// 0x57295
- (void)renameOrRemoveDatabase;	// 0x4bae5
- (void)queueCommitOnMainThread;	// 0x1d6c1
- (void)scheduleCommitOnMainThread;	// 0x1d08d
- (void)queueCommitForCurrentThread;	// 0x1a389
- (void)rescheduleCommit;	// 0x4bb95
- (void)maybeCommitTransaction;	// 0x21309
- (void)synchronouslyCommitTransaction;	// 0x57225
- (void)commit;	// 0x4bbc1
- (void)setFlags:(unsigned long long)flags forMessage:(id)message;	// 0x57145
- (void)setFlagsForMessages:(id)messages mask:(unsigned long long)mask;	// 0x56f51
- (id)setFlagsFromDictionary:(id)dictionary forMessages:(id)messages;	// 0x56f2d
- (void)setNumberOfAttachments:(unsigned)attachments isSigned:(BOOL)aSigned isEncrypted:(BOOL)encrypted forMessage:(id)message;	// 0x19f11
- (void)setMessage:(id)message isPartial:(BOOL)partial;	// 0x56ee5
- (BOOL)initializeDatabase:(sqlite3 *)database;	// 0x56e8d
- (void)_invalidateActiveAccountsClause;	// 0x4bbd1
- (BOOL)_writeEmlxFile:(id)file withBodyData:(id)bodyData protectionClass:(int)aClass;	// 0x56d35
- (void)notifyConversation:(long long)conversation hasMergedIntoConversation:(long long)conversation2;	// 0x56c19
- (void)notifyMessage:(unsigned)message hasConversationID:(long long)anId;	// 0x56b01
- (id)referencesFromHeaders:(id)headers;	// 0x56a15
- (id)addThreadingInfoBySubjectForMessageID:(unsigned)messageID nonPrefixedSubject:(id)subject messageIDsBySubject:(id)subject3 usingDatabase:(sqlite3 *)database toReferences:(id)references withinMailbox:(int)mailbox;	// 0x5672d
- (long long)addReferencesForMessage:(id)message libraryID:(unsigned)anId messageIDHash:(long long)hash withSubject:(id)subject withReferences:(id)references usingDatabase:(sqlite3 *)database otherSubjectIDMappings:(id)mappings usingMailbox:(int)mailbox notify:(BOOL)notify;	// 0x56101
- (id)addMessages:(id)messages withMailbox:(id)mailbox fetchBodies:(BOOL)bodies newMessagesByOldMessage:(id)message remoteIDs:(id)ids setFlags:(unsigned long long)flags clearFlags:(unsigned long long)flags7 messageFlagsForMessages:(id)messages8 copyFiles:(BOOL)files addPOPUIDs:(BOOL)popuids dataSectionsByMessage:(id)message11;	// 0x5440d
- (void)updateRecipientsForMessage:(id)message fromHeaders:(id)headers;	// 0x54135
- (void)updateThreadingInfoForMessage:(id)message fromHeaders:(id)headers;	// 0x53ee1
// converted property setter: - (void)setThreadPriority:(int)priority;	// 0x4bd11
// converted property getter: - (int)threadPriority;	// 0xc595
- (unsigned)updateSequenceNumber;	// 0x53eb1
- (unsigned)accessSequenceNumber;	// 0x53e81
- (void)_rebuildActiveAccountsClause;	// 0x53bc5
- (void)setBusyHandler:(/*function-pointer*/ void *)handler context:(void *)context;	// 0x53b91
- (void)iterateStatement:(sqlite3_stmt *)statement db:(sqlite3 *)db withProgressMonitor:(id)progressMonitor andRowHandler:(/*function-pointer*/ void *)handler context:(void *)context;	// 0x15dbd
- (void)sendMessagesForStatement:(sqlite3_stmt *)statement db:(sqlite3 *)db to:(id)to options:(unsigned)options timestamp:(unsigned long long)timestamp;	// 0x15c25
- (void)sendMessagesMatchingQuery:(const char *)query to:(id)to options:(unsigned)options;	// 0x15aed
- (id)messagesMatchingQuery:(const char *)query options:(unsigned)options;	// 0x4bd89
- (id)messagesForMailbox:(id)mailbox olderThanNumberOfDays:(int)days;	// 0x131e1
- (id)serverSearchResultMessagesForMailbox:(id)mailbox;	// 0x4be2d
- (id)messagesNeedingSyncConfirmationForMailbox:(id)mailbox;	// 0x4bfbd
- (id)dateOfOldestNonSearchResultMessageInMailbox:(id)mailbox;	// 0x16611
- (id)copyMessageInfosForMailbox:(id)mailbox;	// 0xfe5d
- (CFSetRef)copyLibraryIDsWithoutConversationHashesForMailbox:(id)mailbox;	// 0xf905
- (id)messagesWithSummariesForMailbox:(id)mailbox range:(NSRange)range;	// 0x539b5
- (id)messagesWithoutSummariesForMailbox:(id)mailbox;	// 0x53811
- (id)messagesWithSummariesForMailbox:(id)mailbox fromRowID:(unsigned)rowID limit:(unsigned)limit;	// 0x53635
- (id)messagesWithoutSummariesForMailbox:(id)mailbox fromRowID:(unsigned)rowID limit:(unsigned)limit;	// 0x53455
- (unsigned)integerForQuery:(id)query withTextArgument:(id)textArgument;	// 0xc17d
- (unsigned)unreadCountForMailbox:(id)mailbox;	// 0xc161
- (unsigned)deletedCountForMailbox:(id)mailbox;	// 0x4c14d
- (unsigned)nonDeletedCountForMailbox:(id)mailbox includeServerSearchResults:(BOOL)results includeThreadSearchResults:(BOOL)results3;	// 0xf465
- (unsigned)nonDeletedCountForMailbox:(id)mailbox;	// 0xf445
- (unsigned)totalCountForMailbox:(id)mailbox;	// 0x4c169
- (id)oldestMessageInMailbox:(id)mailbox;	// 0x532f5
- (id)messageWithRemoteID:(id)remoteID inRemoteMailbox:(id)remoteMailbox;	// 0x53185
- (id)copyMessagesWithRemoteIDs:(id)remoteIDs options:(unsigned)options inRemoteMailbox:(id)remoteMailbox;	// 0x52ee1
- (unsigned)maximumRemoteIDForMailbox:(id)mailbox;	// 0x52de9
- (unsigned)minimumRemoteIDForMailbox:(id)mailbox;	// 0x52ced
- (id)sequenceIdentifierForMailbox:(id)mailbox;	// 0x52c05
- (void)setSequenceIdentifier:(id)identifier forMailbox:(id)mailbox;	// 0x52ae5
- (id)sequenceIdentifierForMessagesWithRemoteIDs:(id)remoteIDs inMailbox:(id)mailbox;	// 0x528c9
- (void)setSequenceIdentifier:(id)identifier forMessageWithLibraryID:(unsigned)libraryID;	// 0x527f9
- (void)setSequenceIdentifier:(id)identifier forMessagesWithRemoteIDs:(id)remoteIDs inMailbox:(id)mailbox;	// 0x525ed
- (id)getDetailsForMessagesWithRemoteIDInRange:(NSRange)range fromMailbox:(id)mailbox;	// 0x52321
- (id)getDetailsForAllMessagesFromMailbox:(id)mailbox;	// 0x4c185
- (id)messageWithMessageID:(id)messageID options:(unsigned)options inMailbox:(id)mailbox;	// 0x522c1
- (id)messagesWithMessageIDHeader:(id)messageIDHeader;	// 0x4c1a9
- (id)messageWithLibraryID:(unsigned)libraryID options:(unsigned)options inMailbox:(id)mailbox;	// 0x104b5
- (int)mailboxLocationOfMessageID:(unsigned)messageID usingDatabase:(sqlite3 *)database;	// 0x52241
- (id)conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:(unsigned)libraryID messageIDHash:(long long)hash;	// 0x51fa5
- (id)copyMessageInfosOfMessagesInSameThreadAsMessage:(id)sameThreadAsMessage onlyWithinMailbox:(BOOL)mailbox;	// 0x51d49
- (CFDictionaryRef)_copyReferenceHashesWithoutMessagesForMessageWithConversation:(id)conversation;	// 0x51bed
- (id)_getReferencesForHashesWithOwners:(CFDictionaryRef)owners;	// 0x51b91
- (int)countOfMessagesMissingFromThreadContainingMessage:(id)threadContainingMessage;	// 0x51a35
- (int)loadMoreMessagesForThreadContainingMessage:(id)threadContainingMessage hasNoMoreMessages:(BOOL *)messages;	// 0x51925
- (id)stringForQuery:(id)query monitor:(id)monitor;	// 0x5175d
- (id)stringForQuery:(id)query;	// 0x4c235
- (id)urlForMailboxID:(unsigned)mailboxID;	// 0x18b8d
- (unsigned)mailboxIDForURLString:(id)urlstring;	// 0x102d1
- (id)pathForMailboxURL:(id)mailboxURL;	// 0x1bcbd
- (id)mailboxURLForMessage:(id)message;	// 0x18b49
- (id)mailboxUidForMessage:(id)message;	// 0x18b0d
- (id)remoteStoreForMessage:(id)message;	// 0x4c249
- (id)accountForMessage:(id)message;	// 0x4c285
- (BOOL)shouldCancel;	// 0x4b641
- (void)messagesWereCompacted:(id)compacted mailboxes:(id)mailboxes;	// 0x51701
- (void)compactMessages:(id)messages permanently:(BOOL)permanently;	// 0x512a1
- (void)compactMailbox:(id)mailbox;	// 0x50fa1
- (BOOL)renameMailboxes:(id)mailboxes to:(id)to;	// 0x50d91
- (void)deleteMailboxes:(id)mailboxes;	// 0x50b99
- (void)removeAllMessagesFromMailbox:(id)mailbox removeMailbox:(BOOL)mailbox2 andNotify:(BOOL)notify;	// 0x5089d
- (id)messageWithMessageID:(id)messageID inMailbox:(id)mailbox;	// 0x4c3bd
- (id)dataPathForMessage:(id)message type:(int)type;	// 0x5081d
- (id)dataPathForMessage:(id)message;	// 0x4c515
- (id)attachmentsDirectoryForLibraryID:(unsigned)libraryID mailboxID:(unsigned)anId;	// 0x507a5
- (id)dataPathForMessage:(id)message part:(id)part;	// 0x1c15d
- (id)dataConsumerForMessage:(id)message part:(id)part;	// 0x4c529
- (id)dataConsumerForMessage:(id)message part:(id)part incomplete:(BOOL)incomplete;	// 0x4cedd
- (id)dataConsumerForMessage:(id)message isPartial:(BOOL)partial;	// 0x4cf3d
- (id)dataConsumerForMessage:(id)message;	// 0x4cf99
- (void)setData:(id)data forMessage:(id)message isPartial:(BOOL)partial;	// 0x4cff1
- (BOOL)_setMessageData:(id)data libraryID:(unsigned)anId part:(id)part partial:(BOOL)partial complete:(BOOL)complete;	// 0x501ed
- (void)_setMessageDataString:(id)string forKey:(id)key forMessage:(id)message;	// 0x4d039
- (void)setSummary:(id)summary forMessage:(id)message;	// 0x4d085
- (void)updateMessage:(id)message withMetadata:(id)metadata;	// 0x50191
- (id)metadataForMessage:(id)message key:(id)key;	// 0x50015
- (id)loadMeetingDataForMessage:(id)message;	// 0x4fef5
- (id)loadMeetingExternalIDForMessage:(id)message;	// 0x4fde9
- (id)bodyDataAtPath:(id)path headerData:(id *)data;	// 0x4fd6d
- (id)headerDataAtPath:(id)path;	// 0x4fcb9
- (id)bodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available isComplete:(BOOL *)complete;	// 0x19765
- (id)bodyDataForMessage:(id)message;	// 0x4d0e1
- (id)headerDataForMessage:(id)message;	// 0x4fc35
- (id)fullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available;	// 0x1c0ad
- (id)dataForMimePart:(id)mimePart isComplete:(BOOL *)complete;	// 0x1b9dd
- (BOOL)hasCompleteDataForMimePart:(id)mimePart;	// 0x4faa1
- (BOOL)isMessageContentsLocallyAvailable:(id)available;	// 0x4f945
- (id)queryForCriterion:(id)criterion options:(unsigned)options baseTable:(unsigned)table isSubquery:(BOOL)subquery range:(NSRange)range;	// 0x13545
- (id)queryForCriterion:(id)criterion options:(unsigned)options baseTable:(unsigned)table isSubquery:(BOOL)subquery;	// 0x13515
- (id)queryForCriterion:(id)criterion options:(unsigned)options baseTable:(unsigned)table;	// 0x134f1
- (id)queryForCriterion:(id)criterion options:(unsigned)options range:(NSRange)range;	// 0x17dc1
- (id)queryForCriterion:(id)criterion options:(unsigned)options;	// 0x4d0f5
- (void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options range:(NSRange)range;	// 0x17d29
- (void)sendMessagesMatchingCriterion:(id)criterion to:(id)to options:(unsigned)options;	// 0x1f041
- (void)iterateMessagesMatchingCriterion:(id)criterion withResultHandler:(id)resultHandler options:(unsigned)options withMonitor:(id)monitor;	// 0x4f7a9
- (id)messagesMatchingCriterion:(id)criterion options:(unsigned)options range:(NSRange)range;	// 0x17c9d
- (id)messagesMatchingCriterion:(id)criterion options:(unsigned)options;	// 0x1efbd
- (id)filterContiguousMessages:(id)messages forCriterion:(id)criterion options:(unsigned)options;	// 0x4d121
- (int)createLibraryIDForAccount:(id)account;	// 0x4f6cd
- (int)libraryIDForAccount:(id)account;	// 0x4f5f1
- (void)deleteAccount:(id)account;	// 0x4f52d
- (void)appendOfflineCacheOperation:(id)operation forAccount:(int)account lastTemporaryID:(unsigned)anId;	// 0x4f3e1
- (void)markOfflineCacheOperationAsComplete:(id)complete;	// 0x4f2d9
- (id)offlineCacheOperationsForAccount:(int)account lastTemporaryID:(unsigned *)anId;	// 0x4f001
- (void)appendOfflineCacheReplayData:(id)data forAccountID:(int)accountID;	// 0x4eee5
- (void)consumeOfflineCacheReplayDataForAccount:(int)account usingBlock:(id)block;	// 0x4ed9d
- (void)deleteOfflineCacheDataForAccount:(int)account;	// 0x4ecc1
- (void)setDatabasePath:(id)path;	// 0x4d349
- (id)defaultDatabasePath;	// 0x4ec89
- (BOOL)isBusy;	// 0x4ec59
- (void)setBusyTimeoutInterval:(double)interval;	// 0x4b645
- (void)cleanOldDatabases;	// 0x4eb41
- (void)closeDatabaseConnections;	// 0x4ea95
- (void)deletePOPUID:(id)popuid inMailbox:(id)mailbox;	// 0x4e9d1
- (id)UIDsToDeleteInMailbox:(id)mailbox;	// 0x4e9c1
- (id)deletedUIDsInMailbox:(id)mailbox;	// 0x4e9b1
- (id)allUIDsInMailbox:(id)mailbox;	// 0x4e9a1
- (id)hiddenPOPUIDsInMailbox:(id)mailbox;	// 0x4e991
- (void)unlockDB:(sqlite3 *)db;	// 0xee3d
- (void)closeDB:(sqlite3 *)db;	// 0x4e931
- (void)checkInDB:(sqlite3 *)db;	// 0xf0a9
- (void)setMigrationHandler:(id)handler;	// 0x4b659
- (sqlite3 *)_getWriterDBWithRetryCount:(int)retryCount;	// 0xc655
- (sqlite3 *)setupWriterDB;	// 0xc609
- (BOOL)cleanupProtectedTables:(sqlite3 *)tables checkForInconsistencies:(BOOL)inconsistencies;	// 0xe03d
- (void)_reconcileJournal:(sqlite3 *)journal;	// 0xdbe9
- (int)attachProtectedDatabase:(sqlite3 *)database;	// 0xda31
- (int)detachProtectedDatabase:(sqlite3 *)database;	// 0x4e839
- (void)handleKeybagLock;	// 0x4e73d
- (void)handleKeybagUnlock;	// 0x4e371
- (sqlite3 *)openNewHandle;	// 0xd5bd
// converted property getter: - (BOOL)outstandingWritesExist;	// 0xf085
- (sqlite3 *)getWriterDB;	// 0xc265
- (sqlite3_stmt *)preparedStatement:(sqlite3 *)statement pattern:(id)pattern;	// 0xeac1
- (int)handleSqliteError:(sqlite3 *)error format:(id)format;	// 0xec01
- (void)lockDBForWriting;	// 0xc44d
- (void)_yieldDBToOtherProcess;	// 0x4e2f1
- (void)setMailAccounts:(id)accounts;	// 0x4e1c9
- (unsigned)locationOfMessageID:(long long)messageID inMailbox:(id)mailbox;	// 0x4e0b5
- (void)setResetHandler:(/*function-pointer*/ void *)handler;	// 0x4455
- (void)setMailboxPathProvider:(id)provider;	// 0x4d409
- (id)allMailboxURLStrings;	// 0x181cd
- (void)populateThreadingInfoForMessage:(id)message withLibraryID:(unsigned)libraryID andMailboxID:(int)anId withHeaders:(id)headers andMessageIDSubjectMapping:(id)mapping inDatabase:(sqlite3 *)database;	// 0x4ded1
- (void)populateAddressListInfoForLibraryID:(unsigned)libraryID withHeaders:(id)headers inDatabase:(sqlite3 *)database;	// 0x4dd21
- (id)populateExternalIDForLibraryID:(unsigned)libraryID inDatabase:(sqlite3 *)database;	// 0x4dc69
- (void)migrateExternalFilesForMessage:(id)message withLibraryID:(unsigned)libraryID andMailboxID:(int)anId externalID:(id)anId4 listingsByDirectory:(id)directory;	// 0x4d9dd
- (void)populateInfo:(unsigned)info fromMessageDataForAllMessages:(sqlite3 *)allMessages;	// 0x4d471
// declared property getter: - (int)availability;	// 0x4b669
@end
