/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/Message.framework/MailServices/IMAP.framework/IMAP
 */

#import <IMAP/IMAP-Structs.h>
#import <IMAP/XXUnknownSuperclass.h>

@class MFIMAPCommandPipeline, IMAPConnection, IMAPMailboxSyncEngine, NSLock, NSArray, MFIMAPDownloadCache, NSString;

@interface LibraryIMAPStore : XXUnknownSuperclass {
	unsigned _supportsCustomPermanentFlags : 1;	// 124 = 0x7c
	unsigned _supportsJunkFlag : 1;	// 124 = 0x7c
	unsigned _supportsDollarJunkFlag : 1;	// 124 = 0x7c
	unsigned _supportsNotJunkFlag : 1;	// 124 = 0x7c
	unsigned _supportsDollarNotJunkFlag : 1;	// 124 = 0x7c
	unsigned _supportsForwardedFlag : 1;	// 124 = 0x7c
	unsigned _supportsDollarForwardedFlag : 1;	// 124 = 0x7c
	unsigned _updatingCache : 1;	// 124 = 0x7c
	unsigned _updateMetadata : 1;	// 125 = 0x7d
	unsigned _readyToDealloc : 1;	// 125 = 0x7d
	unsigned _didSynchronizeOldMessages : 1;	// 125 = 0x7d
	unsigned _recentsExist : 1;	// 125 = 0x7d
	unsigned _settingServerCount : 1;	// 125 = 0x7d
	unsigned _reserved : 16;	// 125 = 0x7d
	NSString *_mailboxName;	// 128 = 0x80
	MFIMAPDownloadCache *_downloadCache;	// 132 = 0x84
	MFIMAPCommandPipeline *_fetchPipeline;	// 136 = 0x88
	IMAPMailboxSyncEngine *_syncEngine;	// 140 = 0x8c
	unsigned _serverDeletedCount;	// 144 = 0x90
	unsigned _serverUidNext;	// 148 = 0x94
	unsigned long long _highestModSequence;	// 152 = 0x98
	BOOL _seenHigherModSequence;	// 160 = 0xa0
	NSString *_selectedUID;	// 164 = 0xa4
	unsigned _currentFetchUid;	// 168 = 0xa8
	NSString *_relativePath;	// 172 = 0xac
	NSArray *_additionalSynchronizationSearchArguments;	// 176 = 0xb0
	NSArray *_additionalFetchHeaders;	// 180 = 0xb4
	id _downloadDelegate;	// 184 = 0xb8
	IMAPConnection *_cachedConnection;	// 188 = 0xbc
	NSLock *_cachedConnectionLock;	// 192 = 0xc0
}
@property(assign) unsigned serverMessageCount;	// G=0x1bc59; S=0x1eb05; converted property
@property(readonly, retain) NSString *mailboxName;	// G=0x230e9; converted property
@property(readonly, retain) MFIMAPDownloadCache *downloadCache;	// G=0x1bc25; converted property
@property(readonly, retain) MFIMAPCommandPipeline *fetchPipeline;	// G=0x1bc15; converted property
@property(readonly, retain) NSString *relativePath;	// G=0x1fed5; converted property
+ (void)setHandlerForTemporaryUidToRemoteIDMapping:(id)remoteIDMapping;	// 0x1fea1
+ (id)copyRemoteIDForTemporaryUid:(unsigned long)temporaryUid;	// 0x1fe6d
- (id)initWithMailboxUid:(id)mailboxUid readOnly:(BOOL)only;	// 0x1fc95
- (void)dealloc;	// 0x243b5
- (void)focusedMessageDidChange:(id)focusedMessage;	// 0x242d9
- (int)_fetchMessagesWithArguments:(id)arguments idRange:(id)range onConnection:(id)connection synchronize:(BOOL)synchronize limit:(unsigned)limit topUIDToCompact:(unsigned)compact topKnownUID:(unsigned)uid success:(BOOL *)success examinedRange:(NSRange *)range9 fetchableUIDsFound:(unsigned *)found preserveUID:(unsigned *)uid11;	// 0x23ab5
- (void)updateDeletedCountWithNotDeletedCount:(unsigned)notDeletedCount;	// 0x1bf4d
- (void)updateDeletedCount;	// 0x1c15d
- (BOOL)_shouldContinueToPreservedUID:(unsigned)preservedUID;	// 0x23a6d
- (void)setAdditionalFetchHeaders:(id)headers;	// 0x23a21
- (void)setAdditionalSynchronizationSearchArguments:(id)arguments;	// 0x239d5
- (id)_searchArgumentsForSynchronize;	// 0x23961
- (int)fetchNumMessages:(unsigned)messages preservingUID:(id)uid fetchType:(int)type synchronize:(BOOL)synchronize compact:(BOOL)compact;	// 0x237d9
- (int)syncMessagesInIMAPRange:(NSRange)imaprange withConnection:(id)connection compactingExpungedMessagesToUid:(unsigned)uid;	// 0x2350d
- (BOOL)canFetchSearchResults;	// 0x1c1f5
- (void)_fetchMessagesMatchingCriterion:(id)criterion limit:(unsigned)limit handler:(id)handler;	// 0x23375
- (int)fetchMessagesMatchingCriterion:(id)criterion limit:(unsigned)limit;	// 0x232ed
- (id)remoteIDsMatchingCriterion:(id)criterion limit:(unsigned)limit;	// 0x23241
- (BOOL)canFetchMessageIDs;	// 0x1c52d
- (int)fetchMessagesWithMessageIDs:(id)messageIDs andSetFlags:(unsigned long long)flags;	// 0x23191
- (BOOL)canRebuild;	// 0x2312d
- (void)removeAllLocalMessages;	// 0x1cb2d
// converted property getter: - (id)mailboxName;	// 0x230e9
- (void)setMailboxUidValidity:(unsigned)validity;	// 0x230a5
- (BOOL)canCompact;	// 0x23019
- (void)doCompact;	// 0x22ef5
- (void)deleteMessagesOlderThanNumberOfDays:(int)days compact:(BOOL)compact;	// 0x1cbc9
- (BOOL)allowsAppend;	// 0x1bbe9
- (void)_addOfflineTransferMessages:(id)messages;	// 0x1ce39
- (BOOL)_doUidCopy:(XXStruct_l_z_yC *)copy toStore:(id)store newMessages:(id)messages;	// 0x22ac5
- (int)_doAppend:(XXStruct_l_z_yC *)append;	// 0x22695
- (int)appendMessages:(id)messages unsuccessfulOnes:(id)ones newMessageIDs:(id)ids newMessages:(id)messages4 flagsToSet:(id)set customIMAPFlagsToSet:(id)set6;	// 0x1d05d
- (int)appendMessages:(id)messages unsuccessfulOnes:(id)ones newMessageIDs:(id)ids newMessages:(id)messages4 flagsToSet:(id)set;	// 0x1d279
- (id)newDictionaryForLocalFlags:(unsigned long long)localFlags serverFlags:(unsigned long long)flags existingDictionary:(id)dictionary;	// 0x1d2ad
- (void)_synchronouslySetFlags:(id)flags clearFlags:(id)flags2 forMessages:(id)messages originalChanges:(id)changes;	// 0x223ed
- (void)_setFlagsFromDictionary:(id)dictionary forMessages:(id)messages;	// 0x21fa5
- (void)addFlagChanges:(id)changes forMessages:(id)messages;	// 0x1d851
- (id)setFlagsFromDictionary:(id)dictionary forMessages:(id)messages;	// 0x21c8d
- (id)willSetFlagsFromDictionary:(id)dictionary forMessages:(id)messages;	// 0x21bdd
- (void)setFlagsCancelled:(id)cancelled forMessages:(id)messages;	// 0x1d901
- (BOOL)setPreferredEncoding:(unsigned long)encoding forMessage:(id)message;	// 0x21aa1
- (id)_cachedBodyForMessage:(id)message valueIfNotPresent:(id)present;	// 0x21a25
- (id)_cachedHeadersForMessage:(id)message valueIfNotPresent:(id)present;	// 0x219a9
- (id)_cachedHeaderDataForMessage:(id)message valueIfNotPresent:(id)present;	// 0x2192d
- (id)_dataForMessage:(id)message readHeadersOnly:(BOOL)only;	// 0x217d1
- (id)_fetchDataForMimePart:(id)mimePart range:(NSRange)range isComplete:(BOOL *)complete;	// 0x21515
- (id)_fetchFullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available downloadIfNecessary:(BOOL)necessary;	// 0x21331
- (id)_downloadForMessageBodyData:(id)messageBodyData;	// 0x1dec5
- (id)_performBodyDataDownload:(id)download usingConnection:(id)connection isPartial:(BOOL *)partial;	// 0x1df39
- (BOOL)shouldRetryEmptyBodyDownloadForMessage:(id)message;	// 0x1bc09
- (id)_fetchBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available downloadIfNecessary:(BOOL)necessary partial:(BOOL *)partial;	// 0x2110d
- (id)_fetchHeaderDataForMessage:(id)message downloadIfNecessary:(BOOL)necessary;	// 0x20f41
- (BOOL)performOperationRequiringConnection:(BOOL)connection withOptions:(int)options operation:(id)operation;	// 0x20c39
- (void)reselectMailbox;	// 0x20b6d
- (void)willRemoveDelegation:(id)delegation;	// 0x1e12d
- (BOOL)_changedFlagsForMessage:(id)message fetchResponse:(id)response newFlags:(unsigned long long *)flags;	// 0x1e18d
- (void)_updateServerUnreadCount:(unsigned)count;	// 0x1e239
- (void)connection:(id)connection didReceiveResponse:(id)response forCommand:(XXStruct_rpKdCA *)command;	// 0x1e26d
- (id)_uidsForMessages:(id)messages;	// 0x20ad5
- (BOOL)connection:(id)connection shouldHandleUntaggedResponse:(id)response forCommand:(XXStruct_rpKdCA *)command;	// 0x20769
- (void)connectionDidDisconnect:(id)connection;	// 0x1bc0d
- (void)_retrieveNewMessagesForCheckingNewMail:(BOOL)checkingNewMail;	// 0x1bc11
- (void)forceResync;	// 0x1e7ed
- (BOOL)hasValidCacheFileForMessage:(id)message;	// 0x206bd
- (void)setUid:(unsigned long)uid forMessageWithTemporaryUid:(unsigned long)temporaryUid;	// 0x2056d
- (id)addMessages:(id)messages newMessagesByOldMessage:(id)message;	// 0x1e801
- (id)deletedMessages;	// 0x1e939
- (void)_handleFlagsChangedForMessages:(id)messages flags:(id)flags oldFlagsByMessage:(id)message;	// 0x203c1
- (void)_setFlagsForMessages:(id)messages mask:(unsigned long long)mask;	// 0x2019d
- (void)_setFlagsForMessages:(id)messages;	// 0x1ff45
// converted property getter: - (id)fetchPipeline;	// 0x1bc15
// converted property getter: - (id)downloadCache;	// 0x1bc25
- (id)offlineCache;	// 0x1ea4d
- (id)offlineCacheIfOffline;	// 0x1ea75
- (BOOL)canPerformOfflineAppend;	// 0x1bc35
- (void)close;	// 0x1bc39
- (id)messageForRemoteID:(id)remoteID;	// 0x1ea9d
- (BOOL)hasMoreMessages:(unsigned)messages;	// 0x1bc3d
// converted property setter: - (void)setServerMessageCount:(unsigned)count;	// 0x1eb05
// converted property getter: - (unsigned)serverMessageCount;	// 0x1bc59
- (unsigned)serverUnreadOnlyOnServerCount;	// 0x1bc81
- (unsigned)serverUnreadCount;	// 0x1ec99
- (void)setHighestModSequence:(unsigned long long)sequence;	// 0x1bc95
// converted property getter: - (id)relativePath;	// 0x1fed5
- (id)sequenceIdentifierForUIDs:(id)uids;	// 0x1ecc1
- (void)setSequenceIdentifier:(id)identifier forUIDs:(id)uids;	// 0x1ed15
- (void)setDownloadDelegate:(id)delegate;	// 0x1ed6d
- (void)connection:(id)connection didBeginBodyLoad:(id)load;	// 0x1ee21
- (void)connection:(id)connection didLoadMoreBodyData:(id)data;	// 0x1ee71
- (void)connection:(id)connection didFinishLoadingBodyData:(id)data;	// 0x1eec1
@end
