/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/VisualVoicemail.framework/VisualVoicemail
 */

#import <VisualVoicemail/VisualVoicemail-Structs.h>
#import <VisualVoicemail/VVService.h>
#import <Foundation/NSObject.h>

@class NSRecursiveLock, NSError, NSString, NSTimer;

@interface VVService : NSObject {
	NSRecursiveLock *_lock;	// 4 = 0x4
	unsigned _capabilities;	// 8 = 0x8
	int _mailboxUsage;	// 12 = 0xc
	double _trashCompactionAge;	// 16 = 0x10
	unsigned _unreadCount;	// 24 = 0x18
	unsigned _trashedCount;	// 28 = 0x1c
	NSError *_passwordError;	// 32 = 0x20
	NSError *_activationError;	// 36 = 0x24
	NSString *_password;	// 40 = 0x28
	NSString *_passwordMailboxName;	// 44 = 0x2c
	CFArrayRef _retryIntervals;	// 48 = 0x30
	NSTimer *_retryTimer;	// 52 = 0x34
	NSTimer *_trashCompactionTimer;	// 56 = 0x38
	NSTimer *_notificationFallbackTimer;	// 60 = 0x3c
	CFDateRef _notificationFallbackWakeDate;	// 64 = 0x40
	CFDateRef _nextRetryWakeDate;	// 68 = 0x44
	CFDateRef _nextTrashCompactionWakeDate;	// 72 = 0x48
	int _retryIntervalIndex;	// 76 = 0x4c
	unsigned _pmNotifier;	// 80 = 0x50
	IONotificationPortRef _pmNotifierPort;	// 84 = 0x54
	unsigned _pmRootPort;	// 88 = 0x58
	CFRunLoopSourceRef _pmRunLoopSource;	// 92 = 0x5c
	id _carrierParameters;	// 96 = 0x60
	Class _notificationInterpreter;	// 100 = 0x64
	struct {
		unsigned offline : 1;
		unsigned subscribed : 1;
		unsigned initialSetupRequired : 1;
		unsigned fakeInitialSetup : 1;
		unsigned launchedWithFakeInitialSetup : 1;
		unsigned mwiState : 1;
		unsigned notificationFallbackEnabled : 1;
		unsigned capabilitiesLoaded : 1;
	} _serviceFlags;	// 104 = 0x68
}
@property(assign, getter=isSubscribed) BOOL subscribed;	// G=0xe1d; S=0x3ca9; converted property
@property(assign) BOOL mailboxRequiresSetup;	// G=0xe35; S=0x3acd; converted property
@property(assign) int mailboxUsage;	// G=0x3a4d; S=0x3915; converted property
@property(assign) unsigned unreadCount;	// G=0xe4d; S=0x3841; converted property
@property(assign) unsigned trashedCount;	// G=0xe5d; S=0x10a9; converted property
@property(assign, getter=isOnline) BOOL online;	// G=0xe71; S=0x366d; converted property
@property(assign, getter=isMessageWaiting) BOOL messageWaiting;	// G=0xeb5; S=0x3001; converted property
@property(retain) NSString *password;	// G=0x14ed; S=0x2901; converted property
@property(retain) id provisionalPassword;	// G=0x2881; S=0x28c9; converted property
@property(readonly, assign) unsigned capabilities;	// G=0xf65; converted property
@property(readonly, retain) NSError *activationError;	// G=0xea1; converted property
+ (void)initialize;	// 0x1bfd
+ (void)_handleSIMChange;	// 0x1ae9
+ (id)sharedService;	// 0x1935
+ (BOOL)sharedServiceIsSubscribed;	// 0x18a9
+ (void)_setInsomniaState:(BOOL)state;	// 0x1871
+ (void)_suppressInsomniaState;	// 0x1851
+ (void)_resetInsomniaState;	// 0x1825
+ (void)setInsomniaEnabled:(BOOL)enabled;	// 0x17d1
- (id)init;	// 0x41fd
- (void)dealloc;	// 0x40ad
// converted property getter: - (unsigned)capabilities;	// 0xf65
// converted property getter: - (BOOL)isSubscribed;	// 0xe1d
// converted property setter: - (void)setSubscribed:(BOOL)subscribed;	// 0x3ca9
- (void)kill;	// 0x3c4d
- (id)mailboxName;	// 0xe31
// converted property getter: - (BOOL)mailboxRequiresSetup;	// 0xe35
// converted property setter: - (void)setMailboxRequiresSetup:(BOOL)setup;	// 0x3acd
- (BOOL)sharedSubscriptionRequiresSetup;	// 0xe49
// converted property getter: - (int)mailboxUsage;	// 0x3a4d
// converted property setter: - (void)setMailboxUsage:(int)usage;	// 0x3915
// converted property getter: - (unsigned)unreadCount;	// 0xe4d
// converted property setter: - (void)setUnreadCount:(unsigned)count;	// 0x3841
// converted property getter: - (unsigned)trashedCount;	// 0xe5d
// converted property setter: - (void)setTrashedCount:(unsigned)count;	// 0x10a9
- (void)updateCountsForChangedFlags:(int)changedFlags currentRecordFlags:(int)flags;	// 0x1149
- (void)resetCounts;	// 0x37dd
- (void)removeAllRecords;	// 0x37a5
- (void)removeAllNonDetachedRecords;	// 0x36e5
- (void)updateLoggingSettings;	// 0xe6d
// converted property getter: - (BOOL)isOnline;	// 0xe71
- (void)_setOnline:(BOOL)online fallbackMode:(BOOL)mode;	// 0x1231
// converted property setter: - (void)setOnline:(BOOL)online;	// 0x366d
- (CFStringRef)connectionServiceType;	// 0xe8d
- (BOOL)_isOfflineDueToRoamingWithDataStatusDict:(CFDictionaryRef)dataStatusDict;	// 0x35a1
- (BOOL)isOfflineDueToRoaming;	// 0x3571
- (void)_updateOnlineStatusWithDataStatusDict:(CFDictionaryRef)dataStatusDict;	// 0x34bd
- (void)handleDataContextDeactivated;	// 0xe9d
- (void)_handleCallStatusChange:(CFDictionaryRef)change;	// 0x3495
- (void)_setActivationError:(id)error;	// 0x1319
- (void)_contextActivationFailed:(id)failed;	// 0x1401
- (void)_contextActivationSucceeded:(id)succeeded;	// 0x14a9
// converted property getter: - (id)activationError;	// 0xea1
- (void)clearActivationError;	// 0x14d9
- (void)cancelNotificationFallback;	// 0x3399
- (void)_deliverFallbackNotification;	// 0x331d
- (void)_enterFallbackMode:(id)mode;	// 0x325d
- (void)_scheduleFallbackTimerIfNecessary;	// 0x30dd
- (BOOL)isInSync;	// 0xeb1
// converted property getter: - (BOOL)isMessageWaiting;	// 0xeb5
// converted property setter: - (void)setMessageWaiting:(BOOL)waiting;	// 0x3001
- (void)_reactToIndicator;	// 0x2fc5
- (void)_cancelIndicatorAction;	// 0x2f69
- (Class)notificationInterpreterClass;	// 0x2e81
- (void)handleNotification:(id)notification isMWI:(BOOL)mwi;	// 0xec9
- (BOOL)respectsMWINotifications;	// 0xecd
- (void)handleIndicatorNotification:(CFDictionaryRef)notification;	// 0x2bbd
// converted property getter: - (id)password;	// 0x14ed
- (id)passwordIgnoringSubscription:(BOOL)subscription;	// 0x2a9d
// converted property setter: - (void)setPassword:(id)password;	// 0x2901
// converted property setter: - (void)setProvisionalPassword:(id)password;	// 0x28c9
// converted property getter: - (id)provisionalPassword;	// 0x2881
- (void)handlePasswordRequestCancellation;	// 0xed1
- (void)displayPasswordRequestIfNecessary;	// 0x1501
- (void)handlePasswordNotificationResponse:(CFUserNotificationRef)response flags:(unsigned long)flags;	// 0x27c1
- (void)cancelPasswordRequest;	// 0x15e9
- (int)maximumGreetingDuration;	// 0xed5
- (int)maximumRecordedNameDuration;	// 0xed9
- (int)minimumPasswordLength;	// 0xedd
- (int)maximumPasswordLength;	// 0xee1
- (BOOL)passwordChangeRequiresEnteringOldPassword;	// 0xee5
- (int)mailboxGreetingType;	// 0xee9
- (id)carrierParameterValueForKey:(id)key;	// 0x162d
- (BOOL)doesClientManageTrashCompaction;	// 0xeed
- (BOOL)shouldScheduleAutoTrashOnMailboxUsageChange;	// 0xef1
- (BOOL)taskOfTypeExists:(int)typeExists;	// 0xef5
- (void)progressiveDataLengthsForRecord:(void *)record expected:(unsigned *)expected current:(unsigned *)current;	// 0xef9
- (BOOL)dataForRecordPending:(void *)recordPending progressiveLoadInProgress:(BOOL *)progress;	// 0xf0d
- (BOOL)headerChangesPending;	// 0xf11
- (BOOL)greetingFetchExistsProgressiveLoadInProgress:(BOOL *)progress;	// 0xf15
- (void)synchronize:(BOOL)synchronize;	// 0xf19
- (void)retrieveDataForRecord:(void *)record;	// 0xf1d
- (void)clearRemoteUIDsForDetachedMessages;	// 0x277d
- (void)changePassword:(id)password fromPassword:(id)password2;	// 0xf21
- (void)retrieveGreeting;	// 0xf25
- (BOOL)greetingAvailable;	// 0xf29
- (void)setGreetingType:(int)type withData:(id)data duration:(unsigned)duration;	// 0x2715
- (void)moveRecordToTrash:(void *)trash;	// 0x2701
- (void)moveRecordFromTrash:(void *)trash;	// 0x26e1
- (void)reportError:(id)error;	// 0x25c1
- (void)_registerForPowerEventsIfNecessary;	// 0x2521
- (void)_deregisterForPowerEventsIfNecessary;	// 0x2431
- (void)cancelDelayedSynchronize;	// 0x2381
- (void)resetDelayedSynchronizationAttemptCount;	// 0xf2d
- (void)_attemptDelayedSynchronize;	// 0x2335
- (CFArrayRef)_retryIntervals;	// 0x2191
- (void)scheduleDelayedSynchronize;	// 0x2015
- (void)scheduleAutomatedTrashCompaction;	// 0x16d5
- (void)_scheduleAutomatedTrashCompaction;	// 0x1dd9
- (void)cancelAutomatedTrashCompaction;	// 0x1739
- (void)_cancelAutomatedTrashCompaction;	// 0x1d39
- (void)_attemptScheduledTrashCompaction;	// 0x1cd1
@end

@interface VVService (TrashCompaction)
- (double)trashCompactionAge;	// 0x5cd9
- (BOOL)shouldTrashCompactRecord:(void *)record;	// 0x5ded
- (BOOL)doTrashCompaction;	// 0x5e6d
@end
