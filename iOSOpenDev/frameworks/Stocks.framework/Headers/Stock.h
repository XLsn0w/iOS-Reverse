/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/Stocks.framework/Stocks
 */

#import <Foundation/NSLocale.h>

@class NSString, NSURL, UIView, StockChartData;

@interface Stock : NSLocale {
	NSString *symbol;	// 4 = 0x4
	NSString *companyName;	// 8 = 0x8
	NSString *shortCompanyName;	// 12 = 0xc
	NSString *exchange;	// 16 = 0x10
	NSString *realtimeTimestamp;	// 20 = 0x14
	NSString *realtimePrice;	// 24 = 0x18
	NSString *realtimeChange;	// 28 = 0x1c
	NSString *nonRealtimePrice;	// 32 = 0x20
	NSString *nonRealtimeChange;	// 36 = 0x24
	NSString *open;	// 40 = 0x28
	NSString *high;	// 44 = 0x2c
	NSString *low;	// 48 = 0x30
	NSString *yearHigh;	// 52 = 0x34
	NSString *yearLow;	// 56 = 0x38
	NSString *volume;	// 60 = 0x3c
	NSString *averageVolume;	// 64 = 0x40
	NSString *marketcap;	// 68 = 0x44
	NSString *peRatio;	// 72 = 0x48
	NSString *dividendYield;	// 76 = 0x4c
	NSURL *infoURL;	// 80 = 0x50
	BOOL _marketIsOpen;	// 84 = 0x54
	unsigned pricePrecision;	// 88 = 0x58
	BOOL usesAlternativeDataSource;	// 92 = 0x5c
	double timeQuoteLastUpdated;	// 96 = 0x60
	double timeMetadataLastUpdated;	// 104 = 0x68
	StockChartData *_chartDataArray[7];	// 112 = 0x70
	UIView *_rowView;	// 140 = 0x8c
	int _rowViewDataType;	// 144 = 0x90
}
@property(retain, nonatomic) NSString *symbol;	// G=0x208d; S=0x6f59; @synthesize
@property(retain, nonatomic) NSString *companyName;	// G=0x207d; S=0x6f81; @synthesize
@property(retain, nonatomic) NSString *shortCompanyName;	// G=0x206d; S=0x6fa9; @synthesize
@property(retain, nonatomic) NSString *exchange;	// G=0x205d; S=0x6fd1; @synthesize
@property(retain, nonatomic) NSString *realtimeTimestamp;	// G=0x204d; S=0x6ff9; @synthesize
@property(retain, nonatomic) NSString *realtimePrice;	// G=0x203d; S=0x7021; @synthesize
@property(retain, nonatomic) NSString *realtimeChange;	// G=0x202d; S=0x7049; @synthesize
@property(retain, nonatomic) NSString *nonRealtimePrice;	// G=0x201d; S=0x7071; @synthesize
@property(retain, nonatomic) NSString *nonRealtimeChange;	// G=0x200d; S=0x7099; @synthesize
@property(retain, nonatomic) NSString *open;	// G=0x1ffd; S=0x70c1; @synthesize
@property(retain, nonatomic) NSString *high;	// G=0x1fed; S=0x70e9; @synthesize
@property(retain, nonatomic) NSString *low;	// G=0x1fdd; S=0x7111; @synthesize
@property(retain, nonatomic) NSString *yearHigh;	// G=0x1fcd; S=0x7139; @synthesize
@property(retain, nonatomic) NSString *yearLow;	// G=0x1fbd; S=0x7161; @synthesize
@property(retain, nonatomic) NSString *volume;	// G=0x1fad; S=0x7189; @synthesize
@property(retain, nonatomic) NSString *averageVolume;	// G=0x1f9d; S=0x71b1; @synthesize
@property(retain, nonatomic) NSString *marketcap;	// G=0x1f8d; S=0x71d9; @synthesize
@property(retain, nonatomic) NSString *peRatio;	// G=0x1f7d; S=0x7201; @synthesize
@property(retain, nonatomic) NSString *dividendYield;	// G=0x1f6d; S=0x7229; @synthesize
@property(retain, nonatomic) NSURL *infoURL;	// G=0x1f5d; S=0x7251; @synthesize
@property(readonly, assign) unsigned pricePrecision;	// G=0x1f4d; @synthesize
@property(assign, nonatomic) BOOL usesAlternativeDataSource;	// G=0x1f2d; S=0x1f3d; @synthesize
@property(assign, nonatomic) int rowViewDataType;	// G=0x1f0d; S=0x1f1d; @synthesize=_rowViewDataType
@property(assign, nonatomic) double timeQuoteLastUpdated;	// G=0x1ee1; S=0x1ef9; @synthesize
@property(assign, nonatomic) double timeMetadataLastUpdated;	// G=0x1eb5; S=0x1ecd; @synthesize
@property(readonly, assign, nonatomic) NSString *change;	// G=0x80e5; 
@property(readonly, assign, nonatomic) NSString *price;	// G=0x8139; 
@property(readonly, assign) BOOL marketIsOpen;	// G=0x1e95; converted property
@property(readonly, retain) UIView *rowView;	// G=0x1ea5; converted property
+ (void)initialize;	// 0x6f05
+ (id)urlForStock:(id)stock;	// 0x6e8d
+ (id)stockForURL:(id)url;	// 0x6ce9
+ (id)formattedStringForNumber:(id)number fractionDigits:(unsigned)digits percentStyle:(BOOL)style groupingSeparators:(BOOL)separators;	// 0x6b89
+ (id)formattedStringForNumber:(id)number fractionDigits:(unsigned)digits percentStyle:(BOOL)style;	// 0x6b59
+ (id)formattedStringForString:(id)string fractionDigits:(unsigned)digits percentStyle:(BOOL)style;	// 0x6abd
+ (BOOL)localeUsesASCIIDigits;	// 0x69f1
+ (void)resetLocale;	// 0x6999
+ (id)BlankValueString;	// 0x6945
+ (id)postfixCharacterForEngineeringMagnitude:(unsigned)engineeringMagnitude;	// 0x68e1
+ (id)localizedMagnitudeAbbreviatedStringWithString:(id)string fractionDigits:(unsigned)digits;	// 0x6779
+ (id)localizedMagnitudeAbbreviatedStringWithString:(id)string;	// 0x66e1
+ (id)_localeStocks;	// 0x4f25
+ (id)_defaultStockDictionaries;	// 0x4b39
+ (void)startObservers;	// 0x4a81
+ (void)stopObservers;	// 0x49f1
+ (void)_loadStocksFromDefaults;	// 0x3e59
+ (void)handleSyncedDataChanged:(id)changed;	// 0x3979
+ (id)makeSyncableStockListFromList:(id)list;	// 0x35c9
+ (BOOL)setLocalStockListFromSyncableStockList:(id)syncableStockList;	// 0x329d
+ (id)listStocks;	// 0x3265
+ (void)setListStocks:(id)stocks;	// 0x322d
+ (void)flushStocks;	// 0x31cd
+ (void)_createGTStocksArrays;	// 0x3075
+ (id)gtDataSourceStocks;	// 0x303d
+ (id)nonGTDataSourceStocks;	// 0x3005
+ (id)stockWithSymbol:(id)symbol;	// 0x2f31
+ (void)addStock:(id)stock;	// 0x2e1d
+ (void)removeStock:(id)stock;	// 0x2d45
+ (void)moveStockFromIndex:(int)index toIndex:(int)index2;	// 0x2c71
+ (void)RemoveChartDataFromLRU:(id)lru;	// 0x2c15
+ (void)DeleteChartData:(id)data;	// 0x2ba9
+ (void)UpdateChartDataInLRU:(id)lru;	// 0x2b15
+ (void)clearCachedChartData;	// 0x2ab9
+ (void)clearCachedChartDataImageSets;	// 0x2a91
+ (BOOL)anyPriceIsRealtime;	// 0x29e1
+ (BOOL)anyMarketOpenWithRealtimePrice;	// 0x2909
+ (BOOL)anyMarketOpen;	// 0x2859
+ (void)clearCachedRowViews;	// 0x27b1
+ (id)_potentiallyAbsentKeys;	// 0x26d5
+ (void)saveChanges;	// 0x2351
+ (void)_checkForAddedStocks;	// 0x20e9
- (void)resetLocale;	// 0x209d
- (id)description;	// 0x8e91
- (id)initWithDictionary:(id)dictionary;	// 0x8829
- (void)dealloc;	// 0x8631
- (id)archiveDictionary;	// 0x818d
// declared property getter: - (id)price;	// 0x8139
// declared property getter: - (id)change;	// 0x80e5
- (id)formattedPrice;	// 0x8055
- (BOOL)priceIsRealtime;	// 0x7ffd
- (BOOL)changeIsNegative;	// 0x7fa9
- (BOOL)changeIsZero;	// 0x7f15
- (BOOL)isIndex;	// 0x7ec9
- (id)formattedChangePercent:(BOOL)percent;	// 0x7e41
- (float)changeFloatPercent:(BOOL)percent;	// 0x7ddd
// converted property getter: - (BOOL)marketIsOpen;	// 0x1e95
- (id)listName;	// 0x7cd5
- (id)chartDataForInterval:(int)interval;	// 0x7c41
- (void)setChartData:(id)data forInterval:(int)interval;	// 0x7bb1
- (void)clearCachedGraphImageSets;	// 0x7b5d
- (void)setRowView:(id)view withDataType:(int)dataType;	// 0x7ac1
- (void)clearRowView;	// 0x7a7d
// converted property getter: - (id)rowView;	// 0x1ea5
- (void)updateQuoteWithDictionary:(id)dictionary forTime:(double)time;	// 0x7871
- (void)updateMetadataWithDictionary:(id)dictionary forTime:(double)time;	// 0x7351
- (void)_updatePricePrecision;	// 0x7279
// declared property getter: - (double)timeMetadataLastUpdated;	// 0x1eb5
// declared property setter: - (void)setTimeMetadataLastUpdated:(double)updated;	// 0x1ecd
// declared property getter: - (double)timeQuoteLastUpdated;	// 0x1ee1
// declared property setter: - (void)setTimeQuoteLastUpdated:(double)updated;	// 0x1ef9
// declared property getter: - (int)rowViewDataType;	// 0x1f0d
// declared property setter: - (void)setRowViewDataType:(int)type;	// 0x1f1d
// declared property getter: - (BOOL)usesAlternativeDataSource;	// 0x1f2d
// declared property setter: - (void)setUsesAlternativeDataSource:(BOOL)source;	// 0x1f3d
// declared property getter: - (unsigned)pricePrecision;	// 0x1f4d
// declared property getter: - (id)infoURL;	// 0x1f5d
// declared property setter: - (void)setInfoURL:(id)url;	// 0x7251
// declared property getter: - (id)dividendYield;	// 0x1f6d
// declared property setter: - (void)setDividendYield:(id)yield;	// 0x7229
// declared property getter: - (id)peRatio;	// 0x1f7d
// declared property setter: - (void)setPeRatio:(id)ratio;	// 0x7201
// declared property getter: - (id)marketcap;	// 0x1f8d
// declared property setter: - (void)setMarketcap:(id)marketcap;	// 0x71d9
// declared property getter: - (id)averageVolume;	// 0x1f9d
// declared property setter: - (void)setAverageVolume:(id)volume;	// 0x71b1
// declared property getter: - (id)volume;	// 0x1fad
// declared property setter: - (void)setVolume:(id)volume;	// 0x7189
// declared property getter: - (id)yearLow;	// 0x1fbd
// declared property setter: - (void)setYearLow:(id)low;	// 0x7161
// declared property getter: - (id)yearHigh;	// 0x1fcd
// declared property setter: - (void)setYearHigh:(id)high;	// 0x7139
// declared property getter: - (id)low;	// 0x1fdd
// declared property setter: - (void)setLow:(id)low;	// 0x7111
// declared property getter: - (id)high;	// 0x1fed
// declared property setter: - (void)setHigh:(id)high;	// 0x70e9
// declared property getter: - (id)open;	// 0x1ffd
// declared property setter: - (void)setOpen:(id)open;	// 0x70c1
// declared property getter: - (id)nonRealtimeChange;	// 0x200d
// declared property setter: - (void)setNonRealtimeChange:(id)change;	// 0x7099
// declared property getter: - (id)nonRealtimePrice;	// 0x201d
// declared property setter: - (void)setNonRealtimePrice:(id)price;	// 0x7071
// declared property getter: - (id)realtimeChange;	// 0x202d
// declared property setter: - (void)setRealtimeChange:(id)change;	// 0x7049
// declared property getter: - (id)realtimePrice;	// 0x203d
// declared property setter: - (void)setRealtimePrice:(id)price;	// 0x7021
// declared property getter: - (id)realtimeTimestamp;	// 0x204d
// declared property setter: - (void)setRealtimeTimestamp:(id)timestamp;	// 0x6ff9
// declared property getter: - (id)exchange;	// 0x205d
// declared property setter: - (void)setExchange:(id)exchange;	// 0x6fd1
// declared property getter: - (id)shortCompanyName;	// 0x206d
// declared property setter: - (void)setShortCompanyName:(id)name;	// 0x6fa9
// declared property getter: - (id)companyName;	// 0x207d
// declared property setter: - (void)setCompanyName:(id)name;	// 0x6f81
// declared property getter: - (id)symbol;	// 0x208d
// declared property setter: - (void)setSymbol:(id)symbol;	// 0x6f59
@end

