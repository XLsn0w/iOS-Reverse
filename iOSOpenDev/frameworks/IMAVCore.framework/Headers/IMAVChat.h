/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore
 */

#import <IMAVCore/IMSystemMonitorListener.h>
#import <IMAVCore/XXUnknownSuperclass.h>
#import <IMAVCore/IMAVChat.h>
#import <IMAVCore/IMAVCore-Structs.h>

@class IMAccount, NSArray, NSData, NSMutableDictionary, NSString, NSDictionary, IMHandle, NSMutableArray, NSTimer, NSNumber, NSDate, IMAVChatParticipant, NSError, IMPair, IMAVChatFeature;
@protocol IMAVChatTheaterDelegate, IMAVChatDelegate;

@interface IMAVChat : XXUnknownSuperclass <IMSystemMonitorListener> {
	NSString *_GUID;	// 4 = 0x4
	NSString *_conferenceID;	// 8 = 0x8
	NSMutableArray *_participants;	// 12 = 0xc
	IMHandle *_initiator;	// 16 = 0x10
	IMAVChatParticipant *_localParticipant;	// 20 = 0x14
	NSNumber *_natType;	// 24 = 0x18
	NSMutableDictionary *_extraServerContext;	// 28 = 0x1c
	NSDictionary *_errorDict;	// 32 = 0x20
	NSDate *_dateCreated;	// 36 = 0x24
	NSDate *_dateStartedConnecting;	// 40 = 0x28
	NSDate *_dateConnected;	// 44 = 0x2c
	NSDate *_dateEnded;	// 48 = 0x30
	NSString *_participantNames;	// 52 = 0x34
	NSData *_connectData;	// 56 = 0x38
	NSDictionary *_callerProperties;	// 60 = 0x3c
	NSMutableDictionary *_unknownPartyStates;	// 64 = 0x40
	dispatch_queue_s *_queue;	// 68 = 0x44
	NSTimer *_firstFrameTimeoutTimer;	// 72 = 0x48
	NSTimer *_inviteTimeoutTimer;	// 76 = 0x4c
	NSTimer *_connectionTimeoutTimer;	// 80 = 0x50
	NSTimer *_breakBeforeMakeTimeoutTimer;	// 84 = 0x54
	NSTimer *_screenSaverBlockingTimer;	// 88 = 0x58
	id _conferenceController;	// 92 = 0x5c
	id _delegate;	// 96 = 0x60
	id _theaterDelegate;	// 100 = 0x64
	int _callID;	// 104 = 0x68
	unsigned _sessionID;	// 108 = 0x6c
	unsigned _addStatus;	// 112 = 0x70
	NSError *_error;	// 116 = 0x74
	int _addableParticipants;	// 120 = 0x78
	unsigned _localState;	// 124 = 0x7c
	unsigned _lastPostedState;	// 128 = 0x80
	IMPair *_pendingPreemptiveRelayInitate;	// 132 = 0x84
	NSString *_callStatisticsGUID;	// 136 = 0x88
	CGSize _portraitAspectRatios;	// 140 = 0x8c
	CGSize _landscapeAspectRatios;	// 148 = 0x94
	double _connectionTimeoutTime;	// 156 = 0x9c
	double _invitationTimeoutTime;	// 164 = 0xa4
	BOOL _hasGatheredInfo;	// 172 = 0xac
	BOOL _hasReceivedFirstFrame;	// 173 = 0xad
	BOOL _silentConference;	// 174 = 0xae
	BOOL _isListening;	// 175 = 0xaf
	BOOL _isCounterProposalConnect;	// 176 = 0xb0
	BOOL _hasPendingAccept;	// 177 = 0xb1
	BOOL _hasPendingInit;	// 178 = 0xb2
	BOOL _isTerminating;	// 179 = 0xb3
	BOOL _needToSendEndConferenceNotification;	// 180 = 0xb4
	BOOL _Q8IrisOpen;	// 181 = 0xb5
	BOOL _usingCoercedIDs;	// 182 = 0xb6
	BOOL _suppressBeginChat;	// 183 = 0xb7
	BOOL _isCaller;	// 184 = 0xb8
	BOOL _isVideo;	// 185 = 0xb9
	BOOL _dataOut;	// 186 = 0xba
	BOOL _dataIn;	// 187 = 0xbb
	BOOL _didRemoteMute;	// 188 = 0xbc
	BOOL _didRemotePause;	// 189 = 0xbd
	BOOL _remoteNetworkStall;	// 190 = 0xbe
	BOOL _participantOrderFinal;	// 191 = 0xbf
	int _connectionType;	// 192 = 0xc0
	BOOL _localCell;	// 196 = 0xc4
	BOOL _remoteCell;	// 197 = 0xc5
	BOOL _needsVideoRestart;	// 198 = 0xc6
	BOOL _needsAudioRestart;	// 199 = 0xc7
	int _ardRole;	// 200 = 0xc8
	IMAVChatFeature *_recorder;	// 204 = 0xcc
	IMAVChatFeature *_auxVideo;	// 208 = 0xd0
	IMAVChatFeature *_ard;	// 212 = 0xd4
}
@property(readonly, assign, nonatomic) NSDate *dateEnded;	// G=0x15cb1; @synthesize=_dateEnded
@property(readonly, assign, nonatomic) NSDate *dateConnected;	// G=0x15c91; @synthesize=_dateConnected
@property(readonly, assign, nonatomic) NSDate *dateCreated;	// G=0x15ca1; @synthesize=_dateCreated
@property(assign, nonatomic, setter=_setConnectionType:) int _connectionType;	// G=0x15a85; S=0x15a95; @synthesize
@property(readonly, assign, nonatomic) BOOL canUseRelay;	// @dynamic
@property(readonly, assign, nonatomic) BOOL isOneWay;	// G=0x14d45; 
@property(readonly, assign, nonatomic) BOOL isVideo;	// G=0x14d71; 
@property(readonly, assign, nonatomic) BOOL isCaller;	// G=0x15bed; @synthesize=_isCaller
@property(readonly, assign, nonatomic) dispatch_queue_s *_queue;	// G=0x15a75; @synthesize
@property(assign, nonatomic, setter=_setNeedsVideoRestart:) BOOL _needsVideoRestart;	// G=0x15bad; S=0x15bbd; @synthesize
@property(assign, nonatomic, setter=_setNeedsAudioRestart:) BOOL _needsAudioRestart;	// G=0x15b8d; S=0x15b9d; @synthesize
@property(assign, nonatomic, setter=_setRemoteCell:) BOOL _remoteCell;	// G=0x15b6d; S=0x15b7d; @synthesize
@property(assign, nonatomic, setter=_setLocalCell:) BOOL _localCell;	// G=0x15b4d; S=0x15b5d; @synthesize
@property(retain, nonatomic, setter=_setNatType:) NSNumber *_natType;	// G=0x15b19; S=0x15b29; @synthesize
@property(assign, setter=setConferenceSilent:) BOOL isConferenceSilent;	// G=0x15bcd; S=0x15bdd; @synthesize=_silentConference
@property(assign, nonatomic, setter=_setConferenceController:) id _conferenceController;	// G=0x15c71; S=0x15c81; @synthesize
@property(retain, nonatomic, setter=_setCallStatisticsGUID:) NSString *_callStatisticsGUID;	// G=0x15aa5; S=0x15ab5; @synthesize
@property(readonly, assign) NSDictionary *_extraServerContext;	// G=0x15d11; @synthesize
@property(readonly, assign, nonatomic) NSString *participantNames;	// G=0x142ed; 
@property(readonly, assign, nonatomic) int numActiveParticipants;	// @dynamic
@property(readonly, assign, nonatomic) unsigned addStatus;	// G=0x15cd1; @synthesize=_addStatus
@property(readonly, assign, nonatomic) int addableParticipants;	// G=0x15cc1; @synthesize=_addableParticipants
@property(assign, nonatomic) id<IMAVChatTheaterDelegate> theaterDelegate;	// G=0x14b55; S=0x14a39; 
@property(readonly, assign, nonatomic) BOOL isAOLInterop;	// G=0x14d81; 
@property(retain, nonatomic, setter=_setCallerProperties:) NSDictionary *callerProperties;	// G=0x15af9; S=0x14b65; @synthesize=_callerProperties
@property(readonly, assign, nonatomic) BOOL isQ8IrisOpen;	// G=0x15ad9; @synthesize=_Q8IrisOpen
@property(readonly, assign, nonatomic) BOOL dataIn;	// G=0x15c0d; @synthesize=_dataIn
@property(readonly, assign, nonatomic) BOOL dataOut;	// G=0x15bfd; @synthesize=_dataOut
@property(readonly, assign, nonatomic) NSDictionary *vcErrorReport;	// G=0x14da5; 
@property(readonly, assign, nonatomic) NSDictionary *errorDictionary;	// G=0x157a9; 
@property(readonly, assign, nonatomic) unsigned endedReason;	// G=0x14fd1; 
@property(readonly, assign, nonatomic) int endedError;	// G=0x14fb1; 
@property(readonly, assign, nonatomic) BOOL isStateFinal;	// @dynamic
@property(readonly, assign, nonatomic) BOOL isActive;	// @dynamic
@property(readonly, assign, nonatomic) unsigned state;	// G=0x15ce1; @synthesize=_localState
@property(readonly, assign, nonatomic) NSArray *remoteParticipants;	// @dynamic
@property(readonly, assign, nonatomic) NSArray *participants;	// G=0x15d01; @synthesize=_participants
@property(readonly, assign, nonatomic) IMAVChatParticipant *localParticipant;	// G=0x15cf1; @synthesize=_localParticipant
@property(readonly, assign, nonatomic) IMAVChatParticipant *initiatorParticipant;	// @dynamic
@property(readonly, assign, nonatomic) IMAccount *account;	// G=0x14d25; 
@property(readonly, assign, nonatomic) IMHandle *otherIMHandle;	// G=0x14ccd; 
@property(readonly, assign, nonatomic) IMHandle *initiatorIMHandle;	// G=0x15b09; @synthesize=_initiator
@property(retain, nonatomic) NSString *GUID;	// G=0x15c3d; S=0x15c4d; @synthesize=_GUID
@property(assign, nonatomic) id<IMAVChatDelegate> delegate;	// G=0x14a29; S=0x148f5; 
@property(retain, nonatomic) NSString *conferenceID;	// G=0x15c2d; @synthesize=_conferenceID
@property(assign, nonatomic) int callID;	// G=0x15c1d; S=0x14e1d; @synthesize=_callID
@property(readonly, assign, nonatomic) unsigned sessionID;	// G=0x15ae9; @synthesize=_sessionID
@property(readonly, retain) NSError *error;	// G=0x1518d; converted property
+ (int)systemSupportsNewOutgoingConferenceTo:(id)to isVideo:(BOOL)video isARD:(BOOL)ard;	// 0xe3b9
+ (int)systemSupportsNewOutgoingConferenceTo:(id)to isVideo:(BOOL)video;	// 0xe395
+ (id)allowedClassesForArchives;	// 0xc649
// declared property getter: - (id)_extraServerContext;	// 0x15d11
// declared property getter: - (id)participants;	// 0x15d01
// declared property getter: - (id)localParticipant;	// 0x15cf1
// declared property getter: - (unsigned)state;	// 0x15ce1
// declared property getter: - (unsigned)addStatus;	// 0x15cd1
// declared property getter: - (int)addableParticipants;	// 0x15cc1
// declared property getter: - (id)dateEnded;	// 0x15cb1
// declared property getter: - (id)dateCreated;	// 0x15ca1
// declared property getter: - (id)dateConnected;	// 0x15c91
// declared property setter: - (void)_setConferenceController:(id)controller;	// 0x15c81
// declared property getter: - (id)_conferenceController;	// 0x15c71
// declared property setter: - (void)setGUID:(id)guid;	// 0x15c4d
// declared property getter: - (id)GUID;	// 0x15c3d
// declared property getter: - (id)conferenceID;	// 0x15c2d
// declared property getter: - (int)callID;	// 0x15c1d
// declared property getter: - (BOOL)dataIn;	// 0x15c0d
// declared property getter: - (BOOL)dataOut;	// 0x15bfd
// declared property getter: - (BOOL)isCaller;	// 0x15bed
// declared property setter: - (void)setConferenceSilent:(BOOL)silent;	// 0x15bdd
// declared property getter: - (BOOL)isConferenceSilent;	// 0x15bcd
// declared property setter: - (void)_setNeedsVideoRestart:(BOOL)restart;	// 0x15bbd
// declared property getter: - (BOOL)_needsVideoRestart;	// 0x15bad
// declared property setter: - (void)_setNeedsAudioRestart:(BOOL)restart;	// 0x15b9d
// declared property getter: - (BOOL)_needsAudioRestart;	// 0x15b8d
// declared property setter: - (void)_setRemoteCell:(BOOL)cell;	// 0x15b7d
// declared property getter: - (BOOL)_remoteCell;	// 0x15b6d
// declared property setter: - (void)_setLocalCell:(BOOL)cell;	// 0x15b5d
// declared property getter: - (BOOL)_localCell;	// 0x15b4d
// declared property setter: - (void)_setNatType:(id)type;	// 0x15b29
// declared property getter: - (id)_natType;	// 0x15b19
// declared property getter: - (id)initiatorIMHandle;	// 0x15b09
// declared property getter: - (id)callerProperties;	// 0x15af9
// declared property getter: - (unsigned)sessionID;	// 0x15ae9
// declared property getter: - (BOOL)isQ8IrisOpen;	// 0x15ad9
// declared property setter: - (void)_setCallStatisticsGUID:(id)guid;	// 0x15ab5
// declared property getter: - (id)_callStatisticsGUID;	// 0x15aa5
// declared property setter: - (void)_setConnectionType:(int)type;	// 0x15a95
// declared property getter: - (int)_connectionType;	// 0x15a85
// declared property getter: - (dispatch_queue_s *)_queue;	// 0x15a75
- (void)_noteFirstFrame;	// 0x15a61
- (void)_postNotificationName:(id)name participant:(id)participant userInfo:(id)info;	// 0x15971
- (void)_postNotificationName:(id)name userInfo:(id)info;	// 0x1588d
- (void)_reportError:(id)error;	// 0x15815
- (void)_setErrorDictionary:(id)dictionary;	// 0x157d1
// declared property getter: - (id)errorDictionary;	// 0x157a9
- (void)_handleAVError:(id)error;	// 0x1519d
// converted property getter: - (id)error;	// 0x1518d
- (void)_setCreationDate;	// 0x14ff1
// declared property getter: - (unsigned)endedReason;	// 0x14fd1
// declared property getter: - (int)endedError;	// 0x14fb1
// declared property setter: - (void)setCallID:(int)anId;	// 0x14e1d
- (void)_setConferenceID:(id)anId;	// 0x14da9
// declared property getter: - (id)vcErrorReport;	// 0x14da5
// declared property getter: - (BOOL)isAOLInterop;	// 0x14d81
// declared property getter: - (BOOL)isVideo;	// 0x14d71
// declared property getter: - (BOOL)isOneWay;	// 0x14d45
// declared property getter: - (id)account;	// 0x14d25
// declared property getter: - (id)otherIMHandle;	// 0x14ccd
// declared property setter: - (void)_setCallerProperties:(id)properties;	// 0x14b65
// declared property getter: - (id)theaterDelegate;	// 0x14b55
// declared property setter: - (void)setTheaterDelegate:(id)delegate;	// 0x14a39
// declared property getter: - (id)delegate;	// 0x14a29
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x148f5
- (id)participantMatchingIMHandle:(id)handle;	// 0x14845
- (id)vcPartyIDForIMHandle:(id)imhandle;	// 0x145b9
- (id)participantWithID:(id)anId;	// 0x14495
// declared property getter: - (id)participantNames;	// 0x142ed
- (void)invalidateParticipantNames;	// 0x142c1
- (void)handleVideoConferenceNotification:(id)notification;	// 0x14189
- (void)_participantsChanged:(id)changed;	// 0x1411d
- (void)_inviteeInfoChanged:(id)changed;	// 0x1409d
- (void)_initiatorInfoChanged:(id)changed;	// 0x14035
- (void)_imHandleStatusChanged:(id)changed;	// 0x13ee1
- (void)_subscribeToVCNotifications;	// 0x13edd
- (void)handleGenericAVMessageFromParticipant:(id)participant type:(unsigned)type userInfo:(id)info;	// 0x13b19
- (void)_VCCounterProposal:(id)proposal;	// 0x13919
- (void)_responseToVCInvite:(id)vcinvite;	// 0x12b1d
- (void)_counterPropose:(id)propose;	// 0x12a49
- (BOOL)_checkVCResponseDict:(id)dict;	// 0x1244d
- (void)_threadedPrepareConnectionForInvitedParty:(id)invitedParty;	// 0x123a9
- (void)_mainThreadFinishPrepareConnectionForInvitedParty:(id)invitedParty;	// 0x122bd
- (void)_prepareConnectionForParticipant:(id)participant;	// 0x12131
- (void)_connectTo:(id)to withData:(id)data;	// 0x12061
- (void)_setStateDisconnected;	// 0x11f05
- (void)sendARDFileTransferAuthorization:(id)authorization to:(id)to;	// 0x11d3d
- (void)declineInvitation;	// 0x11c6d
- (void)declineInvitationWithResponse:(unsigned)response;	// 0x11b19
- (void)acceptInvitation;	// 0x113c1
- (void)invite:(id)invite;	// 0x10fcd
- (void)_sendVCUpdateTo:(id)to skipConnected:(BOOL)connected;	// 0x10ee9
- (void)cancelInvitation;	// 0x10ed5
- (void)_cancelInvitationWithReason:(unsigned)reason error:(int)error;	// 0x10ded
- (void)inviteAll;	// 0x10a81
- (id)inviteesInfoAsPlist:(BOOL)plist account:(id)account;	// 0x107b9
- (void)endChatWithReason:(unsigned)reason error:(int)error;	// 0x10671
- (void)_endChatWithReason:(unsigned)reason andError:(int)error;	// 0xfd61
- (void)endChatWithError:(int)error;	// 0xfb69
- (void)endChatWithReason:(unsigned)reason;	// 0xf9d1
- (void)endChat;	// 0xf5b5
- (void)beginChat;	// 0xf3c9
- (id)description;	// 0xf1f1
- (void)dealloc;	// 0xe9b9
- (id)initOutgoingTo:(id)to isVideo:(BOOL)video;	// 0xe995
- (id)initOutgoingTo:(id)to isVideo:(BOOL)video ARDRole:(int)role;	// 0xe709
- (id)initIncomingFrom:(id)from isVideo:(BOOL)video callerProperties:(id)properties;	// 0xda11
- (id)_initWith:(id)with invitedBy:(id)by ARDRole:(int)role sessionID:(unsigned)anId video:(BOOL)video extraProperties:(id)properties;	// 0xcabd
- (void)_determineDataIn;	// 0xc9bd
- (id)initPersistentAVChatWith:(id)with invitedBy:(id)by ARDRole:(int)role sessionID:(unsigned)anId video:(BOOL)video;	// 0xc6f9
@end

@interface IMAVChat (IMAVChatVideoLayers)
@property(assign, nonatomic) void *localVideoBackLayer;	// G=0x28351; S=0x28385; 
@property(assign, nonatomic) void *localVideoLayer;	// G=0x282e5; S=0x28319; 
// declared property setter: - (void)setLocalVideoBackLayer:(void *)layer;	// 0x28385
// declared property getter: - (void *)localVideoBackLayer;	// 0x28351
// declared property setter: - (void)setLocalVideoLayer:(void *)layer;	// 0x28319
// declared property getter: - (void *)localVideoLayer;	// 0x282e5
@end

@interface IMAVChat (IMAVChatCameraAdditions)
@property(assign, nonatomic) BOOL lockCamera;	// G=0x288c9; S=0x28901; 
@property(assign, nonatomic) unsigned cameraType;	// G=0x286dd; S=0x28715; 
@property(assign, nonatomic) unsigned cameraOrientation;	// G=0x287d1; S=0x28809; 
- (void)setLocalAspectRatio:(CGSize)ratio cameraOrientation:(unsigned)orientation cameraType:(unsigned)type;	// 0x2896d
- (CGSize)localAspectRatioForCameraOrientation:(unsigned)cameraOrientation cameraType:(unsigned)type;	// 0x2893d
// declared property setter: - (void)setLockCamera:(BOOL)camera;	// 0x28901
// declared property getter: - (BOOL)lockCamera;	// 0x288c9
// declared property setter: - (void)setCameraOrientation:(unsigned)orientation;	// 0x28809
// declared property getter: - (unsigned)cameraOrientation;	// 0x287d1
// declared property setter: - (void)setCameraType:(unsigned)type;	// 0x28715
// declared property getter: - (unsigned)cameraType;	// 0x286dd
- (void)_postParticipantMediaChangeNotification:(id)notification cameraChanged:(BOOL)changed orientationChanged:(BOOL)changed3 aspectChanged:(BOOL)changed4 cameraWillSwitch:(BOOL)camera camera:(unsigned)camera6 orientation:(unsigned)orientation aspect:(CGSize)aspect;	// 0x28491
- (BOOL)stopPreview;	// 0x2845d
- (BOOL)startPreviewWithError:(id *)error;	// 0x28425
- (BOOL)closeCamera;	// 0x283f1
- (BOOL)openCamera;	// 0x283bd
@end

@interface IMAVChat (Logging_Private)
@property(assign, nonatomic, setter=_setConnectionType:) int _connectionType;	// @dynamic
@property(retain, nonatomic, setter=_setCallStatisticsGUID:) NSString *_callStatisticsGUID;	// @dynamic
- (id)_callLoggingOutput;	// 0x29a19
@end

@interface IMAVChat (IMAVChatTimeouts)
@property(assign, nonatomic) double connectionTimeoutTime;	// G=0x2a1b1; S=0x2a1cd; 
@property(assign, nonatomic) double invitationTimeoutTime;	// G=0x2a131; S=0x2a14d; 
+ (void)setDefaultConnectionTimeoutTime:(double)time;	// 0x2a11d
+ (double)defaultConnectionTimeoutTime;	// 0x2a109
+ (void)setDefaultInvitationTimeoutTime:(double)time;	// 0x2a0f5
+ (double)defaultInvitationTimeoutTime;	// 0x2a0e1
- (void)_blockScreenSaver:(id)saver;	// 0x2a225
// declared property setter: - (void)setConnectionTimeoutTime:(double)time;	// 0x2a1cd
// declared property getter: - (double)connectionTimeoutTime;	// 0x2a1b1
// declared property setter: - (void)setInvitationTimeoutTime:(double)time;	// 0x2a14d
// declared property getter: - (double)invitationTimeoutTime;	// 0x2a131
@end

@interface IMAVChat (IMAVChatTimers_Private)
- (void)_breakBeforeMakeTimer:(id)timer;	// 0x2b571
- (void)_setBreakBeforeMakeTimer;	// 0x2b1a1
- (void)_clearBreakBeforeMakeTimer;	// 0x2b0d5
- (void)_firstFrameTimeout:(id)timeout;	// 0x2ac71
- (void)_setFirstFrameTimeoutTimer;	// 0x2ab11
- (void)_clearFirstFrameTimeoutTimer;	// 0x2aa45
- (void)_setScreenSaverBlockingTimer;	// 0x2a9d1
- (void)_clearScreenSaverBlockingTimer;	// 0x2a991
- (void)_invitationTimeout:(id)timeout;	// 0x2a7d9
- (void)_setInvitationTimeoutTimer;	// 0x2a699
- (void)_clearInvitationTimeoutTimer;	// 0x2a5cd
- (void)_connectionTimeout:(id)timeout;	// 0x2a441
- (void)_setConnectionTimeoutTimer;	// 0x2a301
- (void)_clearConnectionTimeoutTimer;	// 0x2a235
@end

@interface IMAVChat (VCInterface)
- (void)auxVideoEndedForPersonWithID:(id)anId;	// 0x2e6ed
- (void)auxVideoBeganForPersonWithID:(id)anId;	// 0x2e6e9
- (void)conferencePersonWithID:(id)anId approvedAuxVideo:(BOOL)video;	// 0x2e6e5
- (BOOL)shouldConferenceAcceptAuxVideoFromUser:(id)user;	// 0x2e6e1
- (void)_vccInitDidFinish;	// 0x2e4c9
- (void)startVCOnMainThread:(id)thread;	// 0x2e3b5
- (void)_noteConferenceConnected:(id)connected;	// 0x2e381
- (void)connectProc:(id)proc;	// 0x2e37d
- (void)_configureVCCRecv;	// 0x2e379
- (void)_configureVCC;	// 0x2e375
- (void)conferencePersonWithID:(id)anId sendRelayCancel:(id)cancel;	// 0x2e109
- (void)conferencePersonWithID:(id)anId sendRelayUpdate:(id)update;	// 0x2de9d
- (void)conferencePersonWithID:(id)anId sendRelayRequest:(id)request;	// 0x2dc31
- (BOOL)shouldConferenceAcceptIncomingRequestFromUser:(id)user onLocalSubnetOnly:(BOOL *)only;	// 0x2d815
- (void)conferenceHasTimedOut;	// 0x2d6f1
- (void)conferenceHasVideoError;	// 0x2d575
- (void)conferencePersonWithID:(id)anId hasInfoForNoPackets:(id)noPackets;	// 0x2d311
- (void)conferencePersonWithID:(id)anId hasInfoForInsufficientBandwidth:(id)insufficientBandwidth;	// 0x2d035
- (void)conferencePersonWithID:(id)anId didStall:(BOOL)stall;	// 0x2cd01
- (void)conferencePersonWithID:(id)anId didPause:(BOOL)pause;	// 0x2c8fd
- (void)conferencePersonWithID:(id)anId didMute:(BOOL)mute;	// 0x2c4f9
- (void)conferencePersonWithID:(id)anId didCancel:(BOOL)cancel;	// 0x2c291
- (void)conferencePersonWithID:(id)anId didConnect:(BOOL)connect;	// 0x2be71
- (void)conferenceHungUpByPersonWithID:(id)anId;	// 0x2bc11
- (void)conferencePersonWithID:(id)anId completedWithInfo:(id)info;	// 0x2bad9
- (void)_unknownParty:(id)party muteOrPause:(unsigned)pause didChange:(BOOL)change;	// 0x2b93d
- (void)_unknownParty:(id)party didConnect:(BOOL)connect;	// 0x2b799
@end

@interface IMAVChat (IMAVChatActions_Private)
@end

@interface IMAVChat (IMAVChatAudioAdditions)
@property(readonly, assign, nonatomic) BOOL didRemoteMute;	// G=0x2eabd; 
@property(assign, nonatomic) BOOL isSendingAudio;	// G=0x2ead1; S=0x2eb09; 
@property(readonly, assign, nonatomic) BOOL isChatMute;	// G=0x2ea25; 
@property(assign, nonatomic, setter=setRemoteMute:) BOOL isRemoteMute;	// G=0x2e9b5; S=0x2e961; 
@property(assign, nonatomic, setter=setMute:) BOOL isMute;	// G=0x2e8f1; S=0x2e6f1; 
@property(assign, nonatomic) float audioVolume;	// G=0x2eb7d; S=0x2ebb5; 
// declared property setter: - (void)setAudioVolume:(float)volume;	// 0x2ebb5
// declared property getter: - (float)audioVolume;	// 0x2eb7d
- (void)toggleSendingAudio;	// 0x2eb45
// declared property setter: - (void)setIsSendingAudio:(BOOL)audio;	// 0x2eb09
// declared property getter: - (BOOL)isSendingAudio;	// 0x2ead1
// declared property getter: - (BOOL)didRemoteMute;	// 0x2eabd
- (void)toggleChatMute;	// 0x2ea71
// declared property getter: - (BOOL)isChatMute;	// 0x2ea25
- (void)toggleRemoteMute;	// 0x2e9ed
// declared property getter: - (BOOL)isRemoteMute;	// 0x2e9b5
// declared property setter: - (void)setRemoteMute:(BOOL)mute;	// 0x2e961
- (void)toggleMute;	// 0x2e929
// declared property getter: - (BOOL)isMute;	// 0x2e8f1
// declared property setter: - (void)setMute:(BOOL)mute;	// 0x2e6f1
@end

@interface IMAVChat (IMAVChatVideoAdditions)
@property(readonly, assign, nonatomic) BOOL didRemotePause;	// G=0x2efed; 
@property(assign, nonatomic) BOOL allowsVideo;	// G=0x2f075; S=0x2f0ad; 
@property(assign, nonatomic) BOOL isSendingVideo;	// G=0x2f001; S=0x2f039; 
@property(readonly, assign, nonatomic) BOOL hasReceivedFirstFrame;	// G=0x2ec0d; 
@property(readonly, assign, nonatomic) BOOL isChatPaused;	// G=0x2ef55; 
@property(assign, nonatomic, setter=setRemotePaused:) BOOL isRemotePaused;	// G=0x2eee5; S=0x2ee91; 
@property(assign, nonatomic, setter=setPaused:) BOOL isPaused;	// G=0x2ee21; S=0x2ec21; 
- (BOOL)isRemoteNetworkStalled;	// 0x2f149
- (BOOL)isLocalNetworkStalled;	// 0x2f121
- (void)toggleSendingVideo;	// 0x2f0e9
// declared property setter: - (void)setAllowsVideo:(BOOL)video;	// 0x2f0ad
// declared property getter: - (BOOL)allowsVideo;	// 0x2f075
// declared property setter: - (void)setIsSendingVideo:(BOOL)video;	// 0x2f039
// declared property getter: - (BOOL)isSendingVideo;	// 0x2f001
// declared property getter: - (BOOL)didRemotePause;	// 0x2efed
- (void)toggleChatPaused;	// 0x2efa1
// declared property getter: - (BOOL)isChatPaused;	// 0x2ef55
- (void)toggleRemotePaused;	// 0x2ef1d
// declared property getter: - (BOOL)isRemotePaused;	// 0x2eee5
// declared property setter: - (void)setRemotePaused:(BOOL)paused;	// 0x2ee91
- (void)togglePaused;	// 0x2ee59
// declared property getter: - (BOOL)isPaused;	// 0x2ee21
// declared property setter: - (void)setPaused:(BOOL)paused;	// 0x2ec21
// declared property getter: - (BOOL)hasReceivedFirstFrame;	// 0x2ec0d
@end

@interface IMAVChat (RelayAdditions)
- (int)_initialRelayStatus;	// 0x2f779
- (BOOL)canUseRelay;	// 0x2f6e1
- (void)_relayPropose:(id)propose;	// 0x2f5f5
- (void)_handleRelayCancel:(id)cancel fromParticipant:(id)participant;	// 0x2f4b1
- (void)_handleRelayUpdate:(id)update fromParticipant:(id)participant;	// 0x2f345
- (void)_handleRelayInitate:(id)initate fromParticipant:(id)participant;	// 0x2f15d
@end

@interface IMAVChat (AVChatInfo)
+ (void)getVideoStillForIMHandle:(id)imhandle data:(id *)data result:(unsigned *)result;	// 0x2fb51
+ (id)currentAVChatInfo;	// 0x2fb29
+ (void)_sendUpdate;	// 0x2f7f9
+ (void)_doSendUpdate;	// 0x2f79d
- (id)_currentAVChatInfo;	// 0x2f83d
@end

@interface IMAVChat (StateMachine)
+ (BOOL)isStateActive:(unsigned)active;	// 0x2fc75
+ (BOOL)isStateFinal:(unsigned)final;	// 0x2fc69
- (void)systemWillShutdown;	// 0x322a1
- (void)systemApplicationDidResumeForEventsOnly;	// 0x321e9
- (void)systemApplicationDidResume;	// 0x32131
- (void)systemApplicationDidSuspend;	// 0x3208d
- (void)systemApplicationWillEnterForeground;	// 0x31fd5
- (void)systemApplicationDidEnterBackground;	// 0x31f31
- (void)systemApplicationDidBecomeActive;	// 0x31e79
- (void)_resumeVideoState;	// 0x31d7d
- (void)_resumeAudioState;	// 0x31c81
- (void)_saveVideoRestartState;	// 0x31b69
- (void)_saveAudioRestartState;	// 0x31a51
- (void)notifySystemVC:(BOOL)vc;	// 0x315fd
- (void)systemDidFastUserSwitchOut;	// 0x315c9
- (void)_postStateToDelegateIfNecessary;	// 0x30d49
- (void)participant:(id)participant changedFromState:(unsigned)state toState:(unsigned)state3;	// 0x2ff55
- (void)_setActiveConference;	// 0x2fd01
- (BOOL)isActive;	// 0x2fcc5
- (BOOL)isStateFinal;	// 0x2fc89
@end

@interface IMAVChat (Participants)
@property(readonly, assign, nonatomic) BOOL _allParticipantsUsingICE;	// G=0x347f1; 
+ (int)maxRemoteParticipantsVideo:(BOOL)video;	// 0x32345
- (void)finalizeOrderWithVideoFrom:(id)from;	// 0x35a9d
- (id)orderedRemotePartyIDs;	// 0x357cd
- (void)removeParticipantWithID:(id)anId;	// 0x354f5
- (BOOL)canAddIMHandle:(id)handle;	// 0x35491
- (unsigned)addStatusForIMHandle:(id)imhandle asVideo:(BOOL)video ardRole:(int)role;	// 0x3526d
- (id)stringForAddStatus;	// 0x3524d
- (id)stringForAddStatus:(unsigned)addStatus;	// 0x34e5d
- (id)_participantMatchingVCPartyID:(id)anId;	// 0x34d65
- (void)_refreshAddableParticipants;	// 0x348c1
// declared property getter: - (BOOL)_allParticipantsUsingICE;	// 0x347f1
- (int)numActiveParticipants;	// 0x34739
- (id)remoteParticipants;	// 0x346d5
- (id)initiatorParticipant;	// 0x345bd
- (BOOL)_participantsCheckOut;	// 0x33f95
- (void)_noteInviteDeliveredForParticipant:(id)participant;	// 0x33f11
- (void)_initParticipantsWithNuggets:(id)nuggets;	// 0x33c75
- (void)_initParticipantsWithIMHandles:(id)imhandles;	// 0x33875
- (BOOL)_imHandlesRequireCoercedIDs:(id)ids;	// 0x3370d
- (void)_updateParticipantsWithData:(id)data;	// 0x32d89
- (id)participantsNotInNuggets:(id)nuggets;	// 0x32bfd
- (void)_finalizeParticipantOrder:(id)order andNotify:(BOOL)notify;	// 0x32a59
- (BOOL)_moveVCPartyID:(id)anId toIndex:(unsigned)index inCount:(unsigned)count;	// 0x32975
- (void)_insertRemoteParticipant:(id)participant atIndex:(unsigned)index;	// 0x327f9
- (void)_noteStatusChangesForParticipant:(id)participant;	// 0x3277d
- (void)_updateIMHandleInBuddyList:(id)buddyList;	// 0x326b5
- (void)_peerID:(id)anId changedTo:(id)to;	// 0x32351
@end

@interface IMAVChat (Lookup_Private)
+ (id)avChatWithMatchingIMHandles:(id)matchingIMHandles video:(BOOL)video ARDRole:(int)role;	// 0x37069
+ (id)avChatWaitingForReplyFromIMHandle:(id)imhandle orConferenceID:(id)anId;	// 0x36f61
+ (id)avChatInvitedByIMHandle:(id)handle orConferenceID:(id)anId;	// 0x36e59
+ (BOOL)isIMHandleInActiveConference:(id)activeConference;	// 0x36d01
+ (BOOL)_anyOfTheseParticipants:(id)theseParticipants matchAnyOfTheseIMHandles:(id)theseIMHandles;	// 0x36bc9
+ (id)bestGuessAVChatWithIMHandle:(id)imhandle conferenceID:(id)anId sessionID:(unsigned)anId3 properties:(id)properties;	// 0x36295
+ (id)chatsWithIMAVChatState:(unsigned)imavchatState;	// 0x3616d
+ (id)connectedChats;	// 0x36159
+ (id)connectingChats;	// 0x36145
+ (id)outgoingInvitations;	// 0x36131
+ (id)incomingInvitations;	// 0x3611d
+ (id)avChatWithConferenceID:(id)conferenceID;	// 0x36031
+ (id)nonFinalChat;	// 0x35f5d
+ (id)activeChat;	// 0x35e5d
+ (id)connectedChat;	// 0x35e21
+ (id)chatList;	// 0x35ded
+ (id)chatWithSessionID:(unsigned)sessionID;	// 0x35d19
+ (id)_avChatArray;	// 0x35ce5
@end
