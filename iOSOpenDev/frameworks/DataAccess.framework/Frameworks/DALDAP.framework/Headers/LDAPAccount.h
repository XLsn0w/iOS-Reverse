/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DALDAP.framework/DALDAP
 */

#import <DALDAP/XXUnknownSuperclass.h>
#import <DALDAP/DALDAP-Structs.h>

@class LDAPTaskManager, NSMutableSet;

@interface LDAPAccount : XXUnknownSuperclass {
	LDAPTaskManager *_taskManager;	// 64 = 0x40
	NSMutableSet *_searchTaskSet;	// 68 = 0x44
	dispatch_queue_s *_backgroundQueue;	// 72 = 0x48
	BOOL _isShuttingDown;	// 76 = 0x4c
}
@property(assign, setter=setLDAPAccountVersion:) int ldapAccountVersion;	// G=0x281d; S=0x2851; 
@property(assign, setter=setLDAPDidAutodiscovery:) BOOL ldapDidAutodiscovery;	// G=0x2b21; S=0x2b45; 
@property(readonly, assign) dispatch_queue_s *backgroundQueue;	// G=0x2e75; @synthesize=_backgroundQueue
@property(assign) int authType;	// G=0x2ae9; S=0x2b05; converted property
@property(assign) BOOL useSSL;	// G=0x2a45; S=0x2a65; converted property
@property(assign) int port;	// G=0x29c5; S=0x29e1; converted property
@property(retain) id host;	// G=0x292d; S=0x2949; converted property
@property(retain) id username;	// G=0x2895; S=0x28b1; converted property
@property(readonly, retain) LDAPTaskManager *taskManager;	// G=0xec5; converted property
+ (id)displayedShortAccountTypeString;	// 0x1e39
+ (id)displayedAccountTypeString;	// 0x1e2d
+ (id)defaultProperties;	// 0x1395
+ (id)supportedDataclasses;	// 0x1375
+ (Class)daemonClass;	// 0x1359
+ (Class)clientClass;	// 0x133d
+ (Class)accountClass;	// 0x1321
// declared property getter: - (dispatch_queue_s *)backgroundQueue;	// 0x2e75
- (id)localizedInvalidPasswordMessage;	// 0x2dc5
- (id)localizedIdenticalAccountFailureMessage;	// 0x2d4d
- (BOOL)isEqualToAccount:(id)account;	// 0x2b65
- (BOOL)isLDAPAccount;	// 0x2b61
// declared property setter: - (void)setLDAPDidAutodiscovery:(BOOL)autodiscovery;	// 0x2b45
// declared property getter: - (BOOL)ldapDidAutodiscovery;	// 0x2b21
// converted property setter: - (void)setAuthType:(int)type;	// 0x2b05
// converted property getter: - (int)authType;	// 0x2ae9
- (id)searchSettings;	// 0x2acd
// converted property setter: - (void)setUseSSL:(BOOL)ssl;	// 0x2a65
// converted property getter: - (BOOL)useSSL;	// 0x2a45
// converted property setter: - (void)setPort:(int)port;	// 0x29e1
// converted property getter: - (int)port;	// 0x29c5
// converted property setter: - (void)setHost:(id)host;	// 0x2949
// converted property getter: - (id)host;	// 0x292d
// converted property setter: - (void)setUsername:(id)username;	// 0x28b1
// converted property getter: - (id)username;	// 0x2895
// declared property setter: - (void)setLDAPAccountVersion:(int)version;	// 0x2851
// declared property getter: - (int)ldapAccountVersion;	// 0x281d
- (BOOL)supportsDADataclass:(int)dataclass;	// 0x2811
- (id)connectionURL;	// 0x27e1
- (id)connectionURLWithSSL:(BOOL)ssl;	// 0x2749
- (BOOL)resetCertWarnings;	// 0x272d
- (BOOL)accountNeedsUpgrade;	// 0x2639
- (BOOL)upgradeAccount;	// 0x25b1
- (BOOL)_upgradeSelfFromVersion:(int)version superClassUpgraded:(BOOL)upgraded;	// 0x21e5
- (id)_oldURLsForKeychain;	// 0x1ead
- (void)removeSearchSettings:(id)settings;	// 0x1e81
- (void)addSearchSettings:(id)settings;	// 0x1e55
- (id)displayName;	// 0x1e45
- (void)ldapGetDefaultSearchBaseTask:(id)task completedWithStatus:(int)status error:(id)error defaultSearchBase:(id)base;	// 0x1c45
- (void)checkValidityWithConsumer:(id)consumer;	// 0x1ba9
- (void)ldapSearchTask:(id)task finishedWithError:(id)error foundItems:(id)items;	// 0x19f5
- (void)performSearchQuery:(id)query;	// 0x173d
- (void)cancelAllSearchQueries;	// 0x1661
- (void)cancelSearchQuery:(id)query;	// 0x1519
- (void)saveAccountSettings;	// 0x14c9
- (int)keychainAccessibilityType;	// 0x14c5
- (void)dealloc;	// 0x1295
- (id)propertiesToSave;	// 0x113d
- (id)initWithProperties:(id)properties;	// 0xed5
// converted property getter: - (id)taskManager;	// 0xec5
@end
