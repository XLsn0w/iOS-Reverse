/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
 */

#import <DACalDAV/CoreDAVAccountInfoProvider.h>
#import <DACalDAV/CalDAVPrincipal.h>
#import <DACalDAV/XXUnknownSuperclass.h>

@class MobileCalDAVAccount, NSString, NSSet, NSMutableDictionary, NSURL, NSDictionary, NSNumber, NSDateComponents, CalDAVRefreshContext;
@protocol CalDAVAccount, CoreDAVTaskManager;

@interface MobileCalDAVPrincipal : XXUnknownSuperclass <CoreDAVAccountInfoProvider, CalDAVPrincipal> {
	NSString *_uid;	// 4 = 0x4
	MobileCalDAVAccount *_account;	// 8 = 0x8
	NSSet *_calendarUserAddresses;	// 12 = 0xc
	NSMutableDictionary *_calendarUserAddressesPerCalendar;	// 16 = 0x10
	NSURL *_preferredCalendarUserAddress;	// 20 = 0x14
	NSString *_fullName;	// 24 = 0x18
	NSURL *_calendarHomeURL;	// 28 = 0x1c
	NSURL *_principalURL;	// 32 = 0x20
	NSURL *_defaultCalendarURL;	// 36 = 0x24
	NSURL *_notificationCollectionURL;	// 40 = 0x28
	NSString *_notificationCollectionCTag;	// 44 = 0x2c
	NSURL *_inboxURL;	// 48 = 0x30
	NSString *_inboxCTag;	// 52 = 0x34
	NSURL *_outboxURL;	// 56 = 0x38
	NSURL *_dropBoxURL;	// 60 = 0x3c
	NSString *_notificationURLString;	// 64 = 0x40
	NSDictionary *_pushTransports;	// 68 = 0x44
	NSString *_calendarHomePushKey;	// 72 = 0x48
	NSString *_XMPPServer;	// 76 = 0x4c
	NSNumber *_quotaFreeBytes;	// 80 = 0x50
	BOOL _isDelegate;	// 84 = 0x54
	BOOL _isWritable;	// 85 = 0x55
	BOOL _isEnabled;	// 86 = 0x56
	BOOL _isExpandPropertyReportSupported;	// 87 = 0x57
	BOOL _supportsFreebusy;	// 88 = 0x58
	BOOL _shouldUpdatePushDelegate;	// 89 = 0x59
	BOOL _isDirty;	// 90 = 0x5a
	BOOL _calendarsAreDirty;	// 91 = 0x5b
	int _calendarChangeIndex;	// 92 = 0x5c
}
@property(readonly, assign) NSSet *deletedCalendarURLs;	// G=0xa761; 
@property(readonly, assign) NSDateComponents *todoFilterEndDate;	// G=0xa64d; 
@property(readonly, assign) NSDateComponents *todoFilterStartDate;	// G=0xa5f1; 
@property(readonly, assign) NSDateComponents *eventFilterEndDate;	// G=0xa57d; 
@property(readonly, assign) NSDateComponents *eventFilterStartDate;	// G=0xa521; 
@property(readonly, assign) BOOL isEnabledForTodos;	// G=0xa265; 
@property(readonly, assign) BOOL isEnabledForEvents;	// G=0xa209; 
@property(readonly, assign) BOOL isMergeSync;	// G=0xa1e5; 
@property(readonly, assign) id<CoreDAVTaskManager> taskManager;	// G=0xb6c9; 
@property(assign) BOOL calendarsAreDirty;	// G=0xaf59; S=0xae9d; @synthesize=_calendarsAreDirty
@property(assign) BOOL isDirty;	// G=0xbcb9; S=0xbcc9; @synthesize=_isDirty
@property(assign) BOOL shouldUpdatePushDelegate;	// G=0xbc99; S=0xbca9; @synthesize=_shouldUpdatePushDelegate
@property(readonly, assign) NSSet *pushKeys;	// G=0xb1dd; 
@property(readonly, assign) NSString *APSEnv;	// G=0xb0e9; 
@property(readonly, assign) NSURL *APSSubscriptionURL;	// G=0xb069; 
@property(readonly, assign) NSString *APSTopic;	// G=0xb025; 
@property(readonly, assign) NSSet *calendars;	// G=0xa741; 
@property(readonly, assign) CalDAVRefreshContext *refreshContext;	// G=0xa721; 
@property(readonly, assign) BOOL supportsExtendedCalendarQuery;	// G=0xa2c1; 
@property(assign) BOOL supportsFreebusy;	// G=0xa6d9; S=0xa6e9; 
@property(assign) BOOL isExpandPropertyReportSupported;	// G=0xa691; S=0xa6a1; 
@property(assign) BOOL isEnabled;	// G=0xa19d; S=0xa1ad; 
@property(assign) BOOL isWritable;	// G=0xa155; S=0xa165; 
@property(assign) BOOL isDelegate;	// G=0xa10d; S=0xa11d; 
@property(retain) NSNumber *quotaFreeBytes;	// G=0xa09d; S=0xa0ad; 
@property(retain) NSString *XMPPServer;	// G=0xa019; S=0xa029; 
@property(retain) NSString *calendarHomePushKey;	// G=0x9f95; S=0x9fa5; 
@property(retain) NSDictionary *pushTransports;	// G=0x9ef5; S=0x9f05; 
@property(retain) NSString *notificationURLString;	// G=0x9e61; S=0x9e71; 
@property(retain) NSURL *dropBoxURL;	// G=0x9db9; S=0x9dd9; 
@property(retain) NSURL *outboxURL;	// G=0x9d11; S=0x9d31; 
@property(retain) NSString *inboxCTag;	// G=0x9c8d; S=0x9c9d; 
@property(retain) NSURL *inboxURL;	// G=0x9be5; S=0x9c05; 
@property(retain) NSString *notificationCollectionCTag;	// G=0x9b61; S=0x9b71; 
@property(retain) NSURL *notificationCollectionURL;	// G=0x9ab9; S=0x9ad9; 
@property(retain) NSURL *defaultCalendarURL;	// G=0x9a11; S=0x9a31; 
@property(retain) NSURL *principalURL;	// G=0x9969; S=0x9989; 
@property(retain) NSURL *calendarHomeURL;	// G=0x98c1; S=0x98e1; 
@property(retain) NSString *fullName;	// G=0x983d; S=0x984d; 
@property(readonly, assign) NSURL *preferredCalendarUserAddress;	// G=0xb459; 
@property(retain) NSSet *calendarUserAddresses;	// G=0x9795; S=0x97a5; 
@property(readonly, assign) id<CalDAVAccount> account;	// G=0x948d; 
@property(readonly, assign) NSString *uid;	// G=0xbc89; @synthesize=_uid
+ (id)_preferredCalendarUserAddressFromAddresses:(id)addresses;	// 0xb2dd
+ (BOOL)compareAddressURL:(id)url localString:(id)string;	// 0x7cc5
// declared property setter: - (void)setIsDirty:(BOOL)dirty;	// 0xbcc9
// declared property getter: - (BOOL)isDirty;	// 0xbcb9
// declared property setter: - (void)setShouldUpdatePushDelegate:(BOOL)updatePushDelegate;	// 0xbca9
// declared property getter: - (BOOL)shouldUpdatePushDelegate;	// 0xbc99
// declared property getter: - (id)uid;	// 0xbc89
- (void)noteTimeSpentInNetworking:(double)networking;	// 0xbc49
- (void)noteFailedProtocolRequest;	// 0xbc11
- (void)noteFailedNetworkRequest;	// 0xbbd9
- (void)noteSuccessfulRequestWithNumDownloadedElements:(int)numDownloadedElements;	// 0xbb9d
- (BOOL)shouldUseOpportunisticSockets;	// 0xbb79
- (BOOL)shouldCompressRequests;	// 0xbb45
- (BOOL)shouldSendClientInfoHeaderForURL:(id)url;	// 0xbae1
- (BOOL)shouldHandleHTTPCookiesForURL:(id)url;	// 0xbadd
- (BOOL)shouldFailAllTasks;	// 0xbad9
- (BOOL)handleCertificateError:(id)error;	// 0xbad5
- (BOOL)handleTrustChallenge:(id)challenge;	// 0xbaad
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(id)completionBlock;	// 0xba0d
- (id)additionalHeaderValues;	// 0xb995
- (id)userAgentHeader;	// 0xb89d
- (id)serverComplianceClasses;	// 0xb899
- (id)accountID;	// 0xb879
- (id)identityPersist;	// 0xb859
- (id)password;	// 0xb839
- (id)user;	// 0xb819
- (id)serverRoot;	// 0xb815
- (void)noteHomeSetOnDifferentHost:(id)host;	// 0xb749
- (int)port;	// 0xb729
- (id)host;	// 0xb709
- (id)scheme;	// 0xb6e9
// declared property getter: - (id)taskManager;	// 0xb6c9
- (BOOL)calendarUserAddressIsEquivalentToURL:(id)url;	// 0xb5e5
- (BOOL)hasCalendarUserAddress:(id)address;	// 0xb4d5
// declared property getter: - (id)preferredCalendarUserAddress;	// 0xb459
// declared property getter: - (id)pushKeys;	// 0xb1dd
// declared property getter: - (id)APSEnv;	// 0xb0e9
// declared property getter: - (id)APSSubscriptionURL;	// 0xb069
// declared property getter: - (id)APSTopic;	// 0xb025
// declared property getter: - (BOOL)calendarsAreDirty;	// 0xaf59
// declared property setter: - (void)setCalendarsAreDirty:(BOOL)dirty;	// 0xae9d
- (void)setCalendarUserAddresses:(id)addresses forCalendar:(id)calendar;	// 0xadf9
- (id)calendarUserAddressesForCalendar:(id)calendar;	// 0xadbd
- (void)removeCalendar:(id)calendar;	// 0xad8d
- (id)defaultTodoCalendarTitle;	// 0xad81
- (id)defaultEventCalendarTitle;	// 0xad75
- (id)calendarOfType:(int)type atURL:(id)url withOptions:(id)options;	// 0xabc9
- (BOOL)clearCalendarChanges;	// 0xab75
- (void)prepareCalendarsForSyncWithCompletionBlock:(id)completionBlock;	// 0xa879
// declared property getter: - (id)deletedCalendarURLs;	// 0xa761
// declared property getter: - (id)calendars;	// 0xa741
// declared property getter: - (id)refreshContext;	// 0xa721
// declared property setter: - (void)setSupportsFreebusy:(BOOL)freebusy;	// 0xa6e9
// declared property getter: - (BOOL)supportsFreebusy;	// 0xa6d9
// declared property setter: - (void)setIsExpandPropertyReportSupported:(BOOL)supported;	// 0xa6a1
// declared property getter: - (BOOL)isExpandPropertyReportSupported;	// 0xa691
// declared property getter: - (id)todoFilterEndDate;	// 0xa64d
// declared property getter: - (id)todoFilterStartDate;	// 0xa5f1
// declared property getter: - (id)eventFilterEndDate;	// 0xa57d
// declared property getter: - (id)eventFilterStartDate;	// 0xa521
- (id)_startDateFromDaysToSync:(int)sync;	// 0xa3f5
- (id)_sharedSyncEndDate;	// 0xa2f5
// declared property getter: - (BOOL)supportsExtendedCalendarQuery;	// 0xa2c1
// declared property getter: - (BOOL)isEnabledForTodos;	// 0xa265
// declared property getter: - (BOOL)isEnabledForEvents;	// 0xa209
// declared property getter: - (BOOL)isMergeSync;	// 0xa1e5
// declared property setter: - (void)setIsEnabled:(BOOL)enabled;	// 0xa1ad
// declared property getter: - (BOOL)isEnabled;	// 0xa19d
// declared property setter: - (void)setIsWritable:(BOOL)writable;	// 0xa165
// declared property getter: - (BOOL)isWritable;	// 0xa155
// declared property setter: - (void)setIsDelegate:(BOOL)delegate;	// 0xa11d
// declared property getter: - (BOOL)isDelegate;	// 0xa10d
// declared property setter: - (void)setQuotaFreeBytes:(id)bytes;	// 0xa0ad
// declared property getter: - (id)quotaFreeBytes;	// 0xa09d
// declared property setter: - (void)setXMPPServer:(id)server;	// 0xa029
// declared property getter: - (id)XMPPServer;	// 0xa019
// declared property setter: - (void)setCalendarHomePushKey:(id)key;	// 0x9fa5
// declared property getter: - (id)calendarHomePushKey;	// 0x9f95
// declared property setter: - (void)setPushTransports:(id)transports;	// 0x9f05
// declared property getter: - (id)pushTransports;	// 0x9ef5
// declared property setter: - (void)setNotificationURLString:(id)string;	// 0x9e71
// declared property getter: - (id)notificationURLString;	// 0x9e61
// declared property setter: - (void)setDropBoxURL:(id)url;	// 0x9dd9
// declared property getter: - (id)dropBoxURL;	// 0x9db9
// declared property setter: - (void)setOutboxURL:(id)url;	// 0x9d31
// declared property getter: - (id)outboxURL;	// 0x9d11
// declared property setter: - (void)setInboxCTag:(id)tag;	// 0x9c9d
// declared property getter: - (id)inboxCTag;	// 0x9c8d
// declared property setter: - (void)setInboxURL:(id)url;	// 0x9c05
// declared property getter: - (id)inboxURL;	// 0x9be5
// declared property setter: - (void)setNotificationCollectionCTag:(id)tag;	// 0x9b71
// declared property getter: - (id)notificationCollectionCTag;	// 0x9b61
// declared property setter: - (void)setNotificationCollectionURL:(id)url;	// 0x9ad9
// declared property getter: - (id)notificationCollectionURL;	// 0x9ab9
// declared property setter: - (void)setDefaultCalendarURL:(id)url;	// 0x9a31
// declared property getter: - (id)defaultCalendarURL;	// 0x9a11
// declared property setter: - (void)setPrincipalURL:(id)url;	// 0x9989
// declared property getter: - (id)principalURL;	// 0x9969
// declared property setter: - (void)setCalendarHomeURL:(id)url;	// 0x98e1
// declared property getter: - (id)calendarHomeURL;	// 0x98c1
// declared property setter: - (void)setFullName:(id)name;	// 0x984d
// declared property getter: - (id)fullName;	// 0x983d
// declared property setter: - (void)setCalendarUserAddresses:(id)addresses;	// 0x97a5
// declared property getter: - (id)calendarUserAddresses;	// 0x9795
- (BOOL)_userAddressSet:(id)set isEqualToSet:(id)set2;	// 0x94ad
- (void)setAccount:(id)account;	// 0x949d
// declared property getter: - (id)account;	// 0x948d
- (id)_addUsernameIfNeeded:(id)needed;	// 0x942d
- (id)configuration;	// 0x8ae9
- (id)initWithConfiguration:(id)configuration account:(id)account;	// 0x8075
- (void)dealloc;	// 0x7eb1
- (id)init;	// 0x7e9d
@end
