/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/ScreenReaderOutputServer.framework/ScreenReaderOutputServer
 */

#import <ScreenReaderOutputServer/ScreenReaderOutputServer-Structs.h>
#import <ScreenReaderOutputServer/XXUnknownSuperclass.h>

@class NSString, NSMutableString, SCROBrailleEventDispatcher, NSMutableArray, NSLock, SCROBrailleLine, NSData;
@protocol SCROBrailleDriverProtocol, SCROBrailleDisplayDelegate, SCROIOElementProtocol;

@interface SCROBrailleDisplay : XXUnknownSuperclass {
	NSLock *_contentLock;	// 4 = 0x4
	id<SCROBrailleDisplayDelegate> _delegate;	// 8 = 0x8
	id<SCROBrailleDriverProtocol> _brailleDriver;	// 12 = 0xc
	id<SCROIOElementProtocol> _ioElement;	// 16 = 0x10
	SCROBrailleLine *_brailleLine;	// 20 = 0x14
	int _contractionMode;	// 24 = 0x18
	BOOL _showEightDot;	// 28 = 0x1c
	BOOL _shouldBatchUpdates;	// 29 = 0x1d
	BOOL _needsUpdating;	// 30 = 0x1e
	NSString *_driverIdentifier;	// 32 = 0x20
	NSString *_driverModelIdentifier;	// 36 = 0x24
	int _mainSize;	// 40 = 0x28
	int _statusSize;	// 44 = 0x2c
	BOOL _postsKeyboardEvents;	// 48 = 0x30
	int _brailleInputMode;	// 52 = 0x34
	struct {
		NSData *realData;
		NSData *virtualData;
		NSData *aggregatedData;
		int virtualAlignment;
		int masterStatusCellIndex;
	} _status;	// 56 = 0x38
	SCROBrailleEventDispatcher *_eventDispatcher;	// 76 = 0x4c
	CFRunLoopRef _runLoop;	// 80 = 0x50
	CFRunLoopTimerRef _inputEventTimer;	// 84 = 0x54
	CFRunLoopTimerRef _blinkerEventTimer;	// 88 = 0x58
	BOOL _blinkingEnabled;	// 92 = 0x5c
	BOOL _inputEnabled;	// 93 = 0x5d
	struct {
		double quietSince;
		double busySince;
		double nextWillMemorizeNotificationTime;
		double memorizeNextKeyImmediatelyTimeout;
		BOOL prepareToMemorizeNextKey;
		BOOL requestPrepareToMemorizeNextKey;
		BOOL memorizeNextKeyImmediately;
		BOOL willMemorizeNow;
		BOOL isQuiet;
		BOOL newDown;
		CFArrayRef currentChord;
		CFSetRef downKeys;
		unsigned routerEvent;
		int routerIndex;
		int routerToken;
		id appToken;
		int routerLocation;
		BOOL currentBrailleChordContainsSpacebar;
		BOOL spacebarIsDown;
		BOOL skipBrailleKeyboardKeyTranslation;
		CFArrayRef currentBrailleChord;
		CFSetRef downBrailleDots;
		unsigned currentBrailleModifiers;
		unsigned downBrailleModifiers;
		NSMutableString *brailleString;
		NSMutableArray *brailleStringModifiers;
		double lastBrailleChordPosted;
		double brailleCharExponentialMovingAverage;
		double brailleTranslationTimeout;
	} _input;	// 96 = 0x60
	BOOL _isValid;	// 216 = 0xd8
	BOOL _delegateWantsDisplayCallback;	// 217 = 0xd9
	BOOL _delegateWantsPanningCallbacks;	// 218 = 0xda
}
@property(assign, nonatomic) BOOL delegateWantsDisplayCallback;	// G=0x56d5; S=0x5bd5; @synthesize=_delegateWantsDisplayCallback
@property(assign, nonatomic) BOOL delegateWantsPanningCallbacks;	// G=0x56b5; S=0x56c5; @synthesize=_delegateWantsPanningCallbacks
@property(retain) id aggregatedStatus;	// G=0xa355; S=0x59f1; converted property
@property(assign) int virtualStatusAlignment;	// G=0x5ac1; S=0x5a45; converted property
@property(assign) long masterStatusCellIndex;	// G=0x5b89; S=0x5b0d; converted property
@property(readonly, retain) NSString *driverIdentifier;	// G=0xa841; converted property
@property(readonly, retain) NSString *driverModelIdentifier;	// G=0xa7d5; converted property
@property(readonly, assign) int mainSize;	// G=0x5801; converted property
@property(readonly, assign) int statusSize;	// G=0x584d; converted property
@property(readonly, assign) BOOL isValid;	// G=0x5725; converted property
+ (BOOL)brailleDriverClassIsValid:(Class)valid;	// 0x6465
+ (id)displayWithIOElement:(id)ioelement driverIdentifier:(id)identifier delegate:(id)delegate;	// 0x62c9
- (id)_initWithDriver:(id)driver driverIdentifier:(id)identifier ioElement:(id)element delegate:(id)delegate;	// 0xb4a9
- (void)_delayedDisplayLoad;	// 0x56e5
- (void)_runThread;	// 0xaea5
- (void)dealloc;	// 0xaca5
- (void)invalidate;	// 0xaa19
// converted property getter: - (BOOL)isValid;	// 0x5725
- (BOOL)isLoaded;	// 0xa8ad
// converted property getter: - (id)driverIdentifier;	// 0xa841
// converted property getter: - (id)driverModelIdentifier;	// 0xa7d5
- (id)lineDescriptor;	// 0x5771
- (id)ioElement;	// 0x55c9
- (long)token;	// 0x57e1
// converted property getter: - (int)mainSize;	// 0x5801
// converted property getter: - (int)statusSize;	// 0x584d
- (id)configuration;	// 0xa4a5
- (void)beginUpdates;	// 0x5899
- (void)endUpdates;	// 0x58fd
- (void)setBrailleFormatter:(id)formatter;	// 0x5961
- (id)realStatus;	// 0xa439
- (id)virtualStatus;	// 0xa3cd
// converted property setter: - (void)setAggregatedStatus:(id)status;	// 0x59f1
// converted property getter: - (id)aggregatedStatus;	// 0xa355
// converted property setter: - (void)setVirtualStatusAlignment:(int)alignment;	// 0x5a45
// converted property getter: - (int)virtualStatusAlignment;	// 0x5ac1
// converted property setter: - (void)setMasterStatusCellIndex:(long)index;	// 0x5b0d
// converted property getter: - (long)masterStatusCellIndex;	// 0x5b89
// declared property setter: - (void)setDelegateWantsDisplayCallback:(BOOL)callback;	// 0x5bd5
- (void)setStatusAttributesWithMasterCellIndex:(long)masterCellIndex virtualAlignment:(int)alignment;	// 0x5c51
- (void)simulateKeypress:(id)keypress;	// 0x5cf1
- (void)panLeft;	// 0x5d45
- (void)panRight;	// 0x5d95
- (void)setPrepareToMemorizeNextKey:(BOOL)memorizeNextKey immediate:(BOOL)immediate;	// 0x5de5
- (int)tokenForRouterIndex:(int)routerIndex location:(int *)location appToken:(id *)token;	// 0xa1d1
- (void)handleEvent:(id)event;	// 0x9fa1
- (void)_unloadHandler;	// 0x5e85
- (id)_statusStringWithDictionary:(id)dictionary;	// 0x5ec1
- (void)_setBrailleFormatterHandler:(id)handler;	// 0x9d59
- (void)_statusDisplayHandler:(id)handler;	// 0x9a95
- (void)_aggregatedStatusHandler:(id)handler;	// 0x96d1
- (void)_setDelegateWantsDisplayCallbackHandler:(id)handler;	// 0x967d
- (void)_simulateKeypressHandler:(id)handler;	// 0x952d
- (void)_bulkStatusAttributesHandler:(id)handler;	// 0x9305
- (void)_setBatchUpdates:(id)updates;	// 0x9295
- (void)_updateDisplay;	// 0x904d
- (void)_configurationChangeHandler;	// 0x899d
- (void)_translateBrailleStringAndPostEvent;	// 0x8951
- (void)_appendTranslatedBrailleStringEventsToArray:(CFArrayRef *)array;	// 0x851d
- (void)_processKeyEvents:(id)events;	// 0x7751
- (void)_panHandler:(id)handler;	// 0x7355
- (BOOL)_hasPressedBrailleKeys;	// 0x55d9
- (BOOL)_isMemorizingKeys;	// 0x5611
- (void)_stopMemorization;	// 0x5645
- (BOOL)_hasKeyChord;	// 0x5675
- (BOOL)_hasBrailleChord;	// 0x5691
- (id)_newBrailleKeyForCurrentBrailleChord;	// 0x71e9
- (id)_newBrailleKeyForCurrentKeyChord;	// 0x70b1
- (void)_inputEventHandler;	// 0x6999
- (void)_blinkerEventHandler;	// 0x67e9
- (void)_unloadNotification:(id)notification;	// 0x67bd
- (void)_delayedUnloadNotification;	// 0x676d
- (void)_configurationChangeNotification:(id)notification;	// 0x6741
- (void)_delayedConfigurationChangeNotification;	// 0x66f1
- (void)_sleepNotification:(id)notification;	// 0x668d
- (void)_delayedSleepNotification:(id)notification;	// 0x6639
// declared property getter: - (BOOL)delegateWantsPanningCallbacks;	// 0x56b5
// declared property setter: - (void)setDelegateWantsPanningCallbacks:(BOOL)callbacks;	// 0x56c5
// declared property getter: - (BOOL)delegateWantsDisplayCallback;	// 0x56d5
@end
