/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

typedef struct Action Action;

typedef struct ActionFinder ActionFinder;

typedef struct StateSpec {
	/*function-pointer*/ void **_field1;
	char *_field2;
	int _field3;
	int _field4;
	Action *_field5;
	/*function-pointer*/ void *_field6;
	/*function-pointer*/ void *_field7;
	/*function-pointer*/ void *_field8;
	ActionFinder *_field9;
} StateSpec;

template<>
struct ObjcSharedPtr<GQDWrapPoint>;

typedef struct _Vector_impl {
	ObjcSharedPtr<GQDWrapPoint> *_field1;
	ObjcSharedPtr<GQDWrapPoint> *_field2;
	ObjcSharedPtr<GQDWrapPoint> *_field3;
} Vector_impl;

template<>
struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>,std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > {
	Vector_impl _field1;
};

typedef struct _Rb_tree_node_base {
	int _M_color;
	struct Rb_tree_node_base *_M_parent;
	struct Rb_tree_node_base *_M_left;
	struct Rb_tree_node_base *_M_right;
} Rb_tree_node_base;

template<>
struct _Rb_tree_impl<GQUtility::NSObjectComparator<GQDWrapPoint>,false> {
	NSObjectComparator<GQDWrapPoint> _M_key_compare;
	Rb_tree_node_base _M_header;
	unsigned _M_node_count;
};

template<>
struct _Rb_tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>,GQUtility::ObjcSharedPtr<GQDWrapPoint>,std::_Identity<GQUtility::ObjcSharedPtr<GQDWrapPoint> >,GQUtility::NSObjectComparator<GQDWrapPoint>,std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > {
	_Rb_tree_impl<GQUtility::NSObjectComparator<GQDWrapPoint>,false> _M_impl;
};

template<>
struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>,GQUtility::NSObjectComparator<GQDWrapPoint>,std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > {
	_Rb_tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>,GQUtility::ObjcSharedPtr<GQDWrapPoint>,std::_Identity<GQUtility::ObjcSharedPtr<GQDWrapPoint> >,GQUtility::NSObjectComparator<GQDWrapPoint>,std::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint> > > _field1;
};

typedef struct _xmlTextReader xmlTextReader;

typedef struct _xmlDoc xmlDoc;
typedef struct _xmlNs {
	struct xmlNs *_field1;
	int _field2;
	char *_field3;
	char *_field4;
	void *_field5;
	xmlDoc *_field6;
} xmlNs;

typedef struct _xmlDtd xmlDtd;
typedef struct _xmlDict xmlDict;
typedef struct _xmlNode xmlNode;
struct _xmlDoc {
	void *_field1;
	int _field2;
	char *_field3;
	struct xmlNode *_field4;
	struct xmlNode *_field5;
	struct xmlNode *_field6;
	struct xmlNode *_field7;
	struct xmlNode *_field8;
	struct xmlDoc *_field9;
	int _field10;
	int _field11;
	struct xmlDtd *_field12;
	struct xmlDtd *_field13;
	struct xmlNs *_field14;
	char *_field15;
	char *_field16;
	void *_field17;
	void *_field18;
	char *_field19;
	int _field20;
	struct xmlDict *_field21;
	void *_field22;
	int _field23;
	int _field24;
};

typedef struct GQDSMap *GQDSMapRef;

typedef struct {
	int location;
	int length;
} XXStruct_ny2fMB;

typedef struct _Vector_impl {
	unsigned short *_M_start;
	unsigned short *_M_finish;
	unsigned short *_M_end_of_storage;
} Vector_impl;

template<>
struct vector<short unsigned int,std::allocator<short unsigned int> > {
	Vector_impl _field1;
};

typedef struct __QLPreviewRequest *QLPreviewRequestRef;

typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;

typedef struct _xmlBuffer xmlBuffer;

typedef struct _xmlParserInputBuffer {
	void *_field1;
	/*function-pointer*/ void *_field2;
	/*function-pointer*/ void *_field3;
	xmlCharEncodingHandler *_field4;
	xmlBuffer *_field5;
	xmlBuffer *_field6;
	int _field7;
	int _field8;
	unsigned long _field9;
} xmlParserInputBuffer;

template<>
struct shared_ptr<StateSpec>;

template<>
struct _Deque_iterator<std::tr1::shared_ptr<StateSpec>,std::tr1::shared_ptr<StateSpec>&,std::tr1::shared_ptr<StateSpec>*> {
	shared_ptr<StateSpec> *_M_cur;
	shared_ptr<StateSpec> *_M_first;
	shared_ptr<StateSpec> *_M_last;
	shared_ptr<StateSpec> **_M_node;
};

typedef struct _Deque_impl {
	shared_ptr<StateSpec> **_M_map;
	unsigned _M_map_size;
	_Deque_iterator<std::tr1::shared_ptr<StateSpec>,std::tr1::shared_ptr<StateSpec>&,std::tr1::shared_ptr<StateSpec>*> _M_start;
	_Deque_iterator<std::tr1::shared_ptr<StateSpec>,std::tr1::shared_ptr<StateSpec>&,std::tr1::shared_ptr<StateSpec>*> _M_finish;
} Deque_impl;

template<>
struct deque<std::tr1::shared_ptr<StateSpec>,std::allocator<std::tr1::shared_ptr<StateSpec> > > {
	Deque_impl _M_impl;
};

template<>
struct stack<std::tr1::shared_ptr<StateSpec>,std::deque<std::tr1::shared_ptr<StateSpec>, std::allocator<std::tr1::shared_ptr<StateSpec> > > > {
	deque<std::tr1::shared_ptr<StateSpec>,std::allocator<std::tr1::shared_ptr<StateSpec> > > _field1;
};

template<>
struct pair<const Action*,int>;

template<>
struct _Deque_iterator<std::pair<const Action*, int>,std::pair<const Action*, int>&,std::pair<const Action*, int>*> {
	pair<const Action*,int> *_M_cur;
	pair<const Action*,int> *_M_first;
	pair<const Action*,int> *_M_last;
	pair<const Action*,int> **_M_node;
};

typedef struct _Deque_impl {
	pair<const Action*,int> **_M_map;
	unsigned _M_map_size;
	_Deque_iterator<std::pair<const Action*, int>,std::pair<const Action*, int>&,std::pair<const Action*, int>*> _M_start;
	_Deque_iterator<std::pair<const Action*, int>,std::pair<const Action*, int>&,std::pair<const Action*, int>*> _M_finish;
} Deque_impl;

template<>
struct deque<std::pair<const Action*, int>,std::allocator<std::pair<const Action*, int> > > {
	Deque_impl _M_impl;
};

template<>
struct stack<std::pair<const Action*, int>,std::deque<std::pair<const Action*, int>, std::allocator<std::pair<const Action*, int> > > > {
	deque<std::pair<const Action*, int>,std::allocator<std::pair<const Action*, int> > > _field1;
};

typedef struct _Vector_impl {
	float *_M_start;
	float *_M_finish;
	float *_M_end_of_storage;
} Vector_impl;

template<>
struct vector<float,std::allocator<float> > {
	Vector_impl _field1;
};

typedef struct __sbuf {
	char *_base;
	int _size;
} sbuf;

typedef struct __sFILEX sFILEX;

typedef struct __sFILE {
	char *_field1;
	int _field2;
	int _field3;
	short _field4;
	short _field5;
	sbuf _field6;
	int _field7;
	void *_field8;
	/*function-pointer*/ void *_field9;
	/*function-pointer*/ void *_field10;
	/*function-pointer*/ void *_field11;
	/*function-pointer*/ void *_field12;
	sbuf _field13;
	sFILEX *_field14;
	int _field15;
	unsigned char _field16[3];
	unsigned char _field17[1];
	sbuf _field18;
	int _field19;
	long long _field20;
} FILE;

typedef struct _xmlAttr xmlAttr;
struct _xmlNode {
	void *_field1;
	int _field2;
	char *_field3;
	struct xmlNode *_field4;
	struct xmlNode *_field5;
	struct xmlNode *_field6;
	struct xmlNode *_field7;
	struct xmlNode *_field8;
	struct xmlDoc *_field9;
	struct xmlNs *_field10;
	char *_field11;
	struct xmlAttr *_field12;
	struct xmlNs *_field13;
	void *_field14;
	unsigned short _field15;
	unsigned short _field16;
};

struct _xmlDtd;

struct _xmlDict;

// iOSOpenDev: wrapped with define check (since occurs in other dumped files)
#ifndef __internal_state__
#define __internal_state__ 1
typedef struct internal_state internal_state;
#endif

// iOSOpenDev: wrapped with define check (since occurs in other dumped files)
#ifndef __z_stream_s__
#define __z_stream_s__ 1
typedef struct z_stream_s {
	char *next_in;
	unsigned avail_in;
	unsigned total_in;
	char *next_out;
	unsigned avail_out;
	unsigned total_out;
	char *msg;
	internal_state *state;
	/*function-pointer*/ void *zalloc;
	/*function-pointer*/ void *zfree;
	void *opaque;
	int data_type;
	unsigned adler;
	unsigned reserved;
} z_stream_s;
#endif

typedef struct GQHPathEndPointInfo {
	BOOL _field1;
	CGPoint _field2;
	CGPoint _field3;
	CGPoint _field4;
	CGPoint _field5;
	int _field6;
} GQHPathEndPointInfo;

struct _xmlAttr;

typedef struct _xmlOutputBuffer {
	void *_field1;
	/*function-pointer*/ void *_field2;
	/*function-pointer*/ void *_field3;
	xmlCharEncodingHandler *_field4;
	xmlBuffer *_field5;
	xmlBuffer *_field6;
	int _field7;
	int _field8;
} xmlOutputBuffer;

typedef struct __CFArray *CFArrayRef;
typedef struct FindLinesContext {
	BOOL _field1;
	CGPoint _field2;
	CGPoint _field3;
	CFArrayRef _field4;
	BOOL _field5;
	int _field6;
} FindLinesContext;

typedef struct __GSFont *GSFontRef;

typedef struct GQZEndOfCentralDirectory {
	unsigned _field1;
	long long _field2;
	long long _field3;
} GQZEndOfCentralDirectory;


