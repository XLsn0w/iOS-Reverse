/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
 */

#import <ManagedConfiguration/ManagedConfiguration-Structs.h>
#import <ManagedConfiguration/XXUnknownSuperclass.h>

@class NSDictionary, NSMutableDictionary;

@interface MCRestrictionManager : XXUnknownSuperclass {
@private
	NSMutableDictionary *_defaultRestrictions;	// 4 = 0x4
	NSMutableDictionary *_restrictions;	// 8 = 0x8
	NSMutableDictionary *_profileRestrictions;	// 12 = 0xc
	NSMutableDictionary *_clientRestrictions;	// 16 = 0x10
	NSDictionary *_userSettings;	// 20 = 0x14
	NSDictionary *_effectiveUserSettings;	// 24 = 0x18
	NSDictionary *_clientTypeLoaders;	// 28 = 0x1c
	CFDictionaryRef _clientTypeToLoaderClass;	// 32 = 0x20
	CFDictionaryRef _clientTypeToLoaderSelector;	// 36 = 0x24
	CFDictionaryRef _clientTypeToRecomputeComplianceSelector;	// 40 = 0x28
	dispatch_queue_s *_syncQueue;	// 44 = 0x2c
	dispatch_queue_s *_nagMetaQueue;	// 48 = 0x30
	int _senderPID;	// 52 = 0x34
}
@property(assign) int senderPID;	// G=0xa665; S=0xa675; @synthesize=_senderPID
@property(readonly, retain) NSMutableDictionary *profileRestrictions;	// G=0xaf81; converted property
@property(readonly, retain) NSMutableDictionary *clientRestrictions;	// G=0xb0b5; converted property
@property(readonly, retain) NSDictionary *userSettings;	// G=0xb525; converted property
@property(readonly, retain) NSDictionary *effectiveUserSettings;	// G=0xb635; converted property
+ (void)_setPathsRestrictionsFilePath:(id)path defaultRestrictionsFilePath:(id)path2 clientTypeLoadersFilePath:(id)path3 profileRestrictionsFilePath:(id)path4 clientRestrictionsFilePath:(id)path5 userSettingsFilePath:(id)path6 effectiveUserSettingsFilePath:(id)path7;	// 0xe549
+ (id)sharedManager;	// 0xe51d
+ (id)restrictionsAfterApplyingRestrictionsDictionary:(id)dictionary toRestrictionsDictionary:(id)restrictionsDictionary outChangeDetected:(BOOL *)detected outError:(id *)error;	// 0xdc9d
+ (id)restrictionsWithCurrentRestrictions:(id)currentRestrictions defaultRestrictions:(id)restrictions profileRestrictions:(id)restrictions3 clientRestrictions:(id)restrictions4 outRestrictionsChanged:(BOOL *)changed outError:(id *)error;	// 0xda4d
+ (id)filterRestrictionDictionaryForPublicUse:(id)publicUse;	// 0xd6dd
+ (int)restrictedBoolForFeature:(id)feature withRestrictionsDictionary:(id)restrictionsDictionary;	// 0xd66d
+ (id)valueForFeature:(id)feature withRestrictionsDictionary:(id)restrictionsDictionary;	// 0xd619
+ (id)objectForFeature:(id)feature withRestrictionsDictionary:(id)restrictionsDictionary;	// 0xd5dd
+ (BOOL)restrictedBool:(id)aBool changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions3;	// 0xd509
+ (BOOL)restrictedValue:(id)value changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions3;	// 0xd435
+ (id)defaultSettingsDict;	// 0xd419
+ (id)defaultParametersForBoolSetting:(id)boolSetting;	// 0xd3d9
+ (id)defaultParametersForValueSetting:(id)valueSetting;	// 0xd399
+ (int)defaultBoolValueForSetting:(id)setting;	// 0xd325
+ (id)defaultValueForSetting:(id)setting;	// 0xd2d1
+ (int)boolSettingForFeature:(id)feature withUserSettingDictionary:(id)userSettingDictionary;	// 0xd26d
+ (id)valueSettingForFeature:(id)feature withUserSettingDictionary:(id)userSettingDictionary;	// 0xd225
+ (BOOL)boolSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings3;	// 0xd151
+ (BOOL)valueSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings3;	// 0xd07d
+ (BOOL)_isDictionary:(id)dictionary differentFromDictionary:(id)dictionary2;	// 0xd03d
- (void)invalidateRestrictions;	// 0xa685
- (void)invalidateSettings;	// 0xa779
- (id)_defaultRestrictionsDictionary;	// 0x102a9
- (id)defaultRestrictionsDictionary;	// 0xad4d
- (id)_defaultSettingsDictionary;	// 0xbc55
- (id)_currentRestrictionsDictionary;	// 0x101d9
- (id)currentRestrictionsDictionary;	// 0xae71
- (void)_setRestrictions:(id)restrictions;	// 0x10151
- (id)_profileRestrictions;	// 0x10055
// converted property getter: - (id)profileRestrictions;	// 0xaf81
- (id)combinedProfileRestrictions;	// 0xfedd
- (BOOL)setProfileRestrictions:(id)restrictions outRestrictionsChanged:(BOOL *)changed outEffectiveSettingsChanged:(BOOL *)changed3 outRecomputedNag:(BOOL *)nag outError:(id *)error;	// 0xbc71
- (id)_clientRestrictions;	// 0xfde1
// converted property getter: - (id)clientRestrictions;	// 0xb0b5
- (id)_clientRestrictionsForClientUUID:(id)clientUUID;	// 0xbf49
- (id)_clientTypeForClientUUID:(id)clientUUID;	// 0xbf89
- (id)clientRestrictionsForClientUUID:(id)clientUUID;	// 0xb1c5
- (id)_userInfoForClientUUID:(id)clientUUID;	// 0xbfc9
- (id)userInfoForClientUUID:(id)clientUUID;	// 0xb2fd
- (id)allClientUUIDsForClientType:(id)clientType;	// 0xc009
- (void)_setClientRestrictionsWithoutNotifications:(id)notifications;	// 0xfd75
- (BOOL)_setAllClientRestrictions:(id)restrictions outRestrictionsChanged:(BOOL *)changed outEffectiveSettingsChanged:(BOOL *)changed3 outError:(id *)error;	// 0xfb71
- (void)setUserInfo:(id)info forClientUUID:(id)clientUUID;	// 0xfad9
- (BOOL)setAllClientRestrictions:(id)restrictions outRestrictionsChanged:(BOOL *)changed outEffectiveSettingsChanged:(BOOL *)changed3 outRecomputedNag:(BOOL *)nag outError:(id *)error;	// 0xc2b9
- (BOOL)setClientRestrictions:(id)restrictions clientType:(id)type clientUUID:(id)uuid localizedClientDescription:(id)description localizedWarning:(id)warning outRestrictionsChanged:(BOOL *)changed outEffectiveSettingsChanged:(BOOL *)changed7 outRecomputedNag:(BOOL *)nag outError:(id *)error;	// 0xf9d5
- (id)_loadClientLoaders;	// 0xf555
- (id)_liveClientUUIDsForClientType:(id)clientType;	// 0xf4f1
- (void)notifyClientsToRecomputeCompliance;	// 0xf3f9
- (BOOL)removeOrphanedClientRestrictions;	// 0xc39d
- (BOOL)recomputeNagMetadata;	// 0xc8e9
- (void)setShowNagMessage;	// 0xa839
- (void)notifyHaveSeenComplianceMessageWithLastLockDate:(id)lastLockDate;	// 0xa8c5
- (id)_init;	// 0xf375
- (id)description;	// 0xf2f9
- (void)dealloc;	// 0xf1d5
- (id)potentialRestrictionsAfterApplyingRestrictionsDictionary:(id)dictionary outChangeDetected:(BOOL *)detected outError:(id *)error;	// 0xcfe9
- (int)restrictedBoolForFeature:(id)feature;	// 0xf195
- (id)valueForFeature:(id)feature;	// 0xf155
- (id)objectForFeature:(id)feature;	// 0xf115
- (id)_userSettings;	// 0xf06d
// converted property getter: - (id)userSettings;	// 0xb525
- (BOOL)_setUserSettings:(id)settings;	// 0xefd1
- (id)_effectiveUserSettings;	// 0xef29
// converted property getter: - (id)effectiveUserSettings;	// 0xb635
- (BOOL)_setEffectiveUserSettings:(id)settings;	// 0xee25
- (BOOL)_recomputeEffectiveUserSettings;	// 0xe841
- (BOOL)setParametersForSettingsByType:(id)settingsByType;	// 0xb745
- (id)effectiveParametersForBoolSetting:(id)boolSetting;	// 0xe801
- (id)effectiveParametersForValueSetting:(id)valueSetting;	// 0xe7c1
- (int)effectiveRestrictedBoolForSetting:(id)setting;	// 0xe76d
- (id)effectiveValueForSetting:(id)setting;	// 0xe735
- (BOOL)isBoolSettingLockedDownByRestrictions:(id)restrictions;	// 0xe691
- (BOOL)isValueSettingLockedDownByRestrictions:(id)restrictions;	// 0xb8d1
- (void)removeBoolSetting:(id)setting;	// 0xa9a5
- (void)removeValueSetting:(id)setting;	// 0xab11
- (void)resetAllSettingsToDefaults;	// 0xac7d
// declared property getter: - (int)senderPID;	// 0xa665
// declared property setter: - (void)setSenderPID:(int)pid;	// 0xa675
@end
