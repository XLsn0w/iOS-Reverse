/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/WebKit.framework/WebKit
 */

typedef struct FrameDestructionObserver FrameDestructionObserver;

template<>
struct HashTable<WebCore::FrameDestructionObserver*,WebCore::FrameDestructionObserver*,WTF::IdentityExtractor<WebCore::FrameDestructionObserver*>,WTF::PtrHash<WebCore::FrameDestructionObserver*>,WTF::HashTraits<WebCore::FrameDestructionObserver*>,WTF::HashTraits<WebCore::FrameDestructionObserver*> > {
	FrameDestructionObserver **m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::FrameDestructionObserver*,WTF::PtrHash<WebCore::FrameDestructionObserver*>,WTF::HashTraits<WebCore::FrameDestructionObserver*> > {
	HashTable<WebCore::FrameDestructionObserver*,WebCore::FrameDestructionObserver*,WTF::IdentityExtractor<WebCore::FrameDestructionObserver*>,WTF::PtrHash<WebCore::FrameDestructionObserver*>,WTF::HashTraits<WebCore::FrameDestructionObserver*>,WTF::HashTraits<WebCore::FrameDestructionObserver*> > m_impl;
};

typedef struct Settings Settings;
template<>
struct OwnPtr<WebCore::Settings> {
	Settings *_field1;
};

typedef struct Frame Frame;
template<>
struct RefPtr<WebCore::Frame> {
	Frame *m_ptr;
};

typedef struct ProgressTracker ProgressTracker;
template<>
struct OwnPtr<WebCore::ProgressTracker> {
	ProgressTracker *_field1;
};

typedef struct BackForwardController BackForwardController;
template<>
struct OwnPtr<WebCore::BackForwardController> {
	BackForwardController *_field1;
};

typedef struct PluginData PluginData;
template<>
struct RefPtr<WebCore::PluginData> {
	PluginData *_field1;
};

typedef struct StorageNamespace StorageNamespace;
template<>
struct RefPtr<WebCore::StorageNamespace> {
	StorageNamespace *_field1;
};

typedef struct RenderTheme RenderTheme;
template<>
struct RefPtr<WebCore::RenderTheme> {
	RenderTheme *_field1;
};

typedef struct PageGroup PageGroup;
template<>
struct OwnPtr<WebCore::PageGroup> {
	PageGroup *_field1;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >;
template<>
struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > {
	HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > *_field1;
};

typedef struct ViewportArguments {
	float initialScale;
	float minimumScale;
	float maximumScale;
	float width;
	float height;
	float userScalable;
} ViewportArguments;

typedef struct PluginHalter PluginHalter;
template<>
struct OwnPtr<WebCore::PluginHalter> {
	PluginHalter *_field1;
};

typedef struct Chrome Chrome;
template<>
struct OwnPtr<WebCore::Chrome> {
	Chrome *_field1;
};

template<>
struct HashSet<WebCore::ScrollableArea*,WTF::PtrHash<WebCore::ScrollableArea*>,WTF::HashTraits<WebCore::ScrollableArea*> >;
template<>
struct OwnPtr<WTF::HashSet<WebCore::ScrollableArea*, WTF::PtrHash<WebCore::ScrollableArea*>, WTF::HashTraits<WebCore::ScrollableArea*> > > {
	HashSet<WebCore::ScrollableArea*,WTF::PtrHash<WebCore::ScrollableArea*>,WTF::HashTraits<WebCore::ScrollableArea*> > *_field1;
};

typedef struct DragCaretController DragCaretController;
template<>
struct OwnPtr<WebCore::DragCaretController> {
	DragCaretController *_field1;
};

typedef struct FocusController FocusController;
template<>
struct OwnPtr<WebCore::FocusController> {
	FocusController *_field1;
};

typedef struct StringImpl StringImpl;
template<>
struct RefPtr<WTF::StringImpl> {
	StringImpl *m_ptr;
};

typedef struct InspectorController InspectorController;
template<>
struct OwnPtr<WebCore::InspectorController> {
	InspectorController *_field1;
};

typedef struct String {
	RefPtr<WTF::StringImpl> m_impl;
} String;

typedef struct EditorClient EditorClient;
typedef struct Debugger Debugger;
typedef struct Page {
	OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > > > _field1;
	OwnPtr<WebCore::Chrome> _field2;
	OwnPtr<WebCore::DragCaretController> _field3;
	OwnPtr<WebCore::FocusController> _field4;
	OwnPtr<WebCore::InspectorController> _field5;
	OwnPtr<WebCore::Settings> _field6;
	OwnPtr<WebCore::ProgressTracker> _field7;
	OwnPtr<WebCore::BackForwardController> _field8;
	RefPtr<WebCore::Frame> _field9;
	RefPtr<WebCore::PluginData> _field10;
	RefPtr<WebCore::RenderTheme> _field11;
	EditorClient *_field12;
	int _field13;
	String _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	bool _field18;
	bool _field19;
	bool _field20;
	float _field21;
	bool _field22;
	String _field23;
	String _field24;
	bool _field25;
	int _field26;
	OwnPtr<WebCore::PageGroup> _field27;
	PageGroup *_field28;
	Debugger *_field29;
	double _field30;
	int _field31;
	bool _field32;
	OwnPtr<WebCore::PluginHalter> _field33;
	RefPtr<WebCore::StorageNamespace> _field34;
	int _field35;
	ViewportArguments _field36;
	double _field37;
	OwnPtr<WTF::HashSet<WebCore::ScrollableArea*, WTF::PtrHash<WebCore::ScrollableArea*>, WTF::HashTraits<WebCore::ScrollableArea*> > > _field38;
	bool _field39;
} Page;

typedef struct DOMWindow *DOMWindowRef;
template<>
struct HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > {
	DOMWindowRef *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > {
	HashTable<WebCore::DOMWindow*,WebCore::DOMWindow*,WTF::IdentityExtractor<WebCore::DOMWindow*>,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > m_impl;
};

typedef struct FrameView FrameView;
template<>
struct RefPtr<WebCore::FrameView> {
	FrameView *m_ptr;
};

typedef struct Document Document;
template<>
struct RefPtr<WebCore::Document> {
	Document *m_ptr;
};

template<>
struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::Strong<WebCore::JSDOMWindowShell> >;
template<>
struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > > {
	pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::Strong<WebCore::JSDOMWindowShell> > *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::Strong<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell> > > {
	HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>,std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell> > >,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell> > >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> > > m_impl;
};

typedef struct RootObject RootObject;
template<>
struct RefPtr<JSC::Bindings::RootObject> {
	RootObject *m_ptr;
};

template<>
struct pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> >;
template<>
struct HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> > {
	pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> > *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > > {
	HashTable<void*,std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> >,WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > >,WTF::HashTraits<void*> > m_impl;
};

@class WebScriptObject;
template<>
struct RetainPtr<WebScriptObject> {
	WebScriptObject *m_ptr;
};

typedef struct ScriptController {
	HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::Strong<WebCore::JSDOMWindowShell>,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell> > > m_windowShells;
	Frame *m_frame;
	String *m_sourceURL;
	bool m_inExecuteScript;
	bool m_processingTimerCallback;
	bool m_paused;
	bool m_allowPopupsFromPlugin;
	RefPtr<JSC::Bindings::RootObject> m_bindingRootObject;
	RefPtr<JSC::Bindings::RootObject> m_cacheableBindingRootObject;
	HashMap<void*,WTF::RefPtr<JSC::Bindings::RootObject>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject> > > m_rootObjects;
	RetainPtr<WebScriptObject> m_windowScriptObject;
} ScriptController;

typedef struct DeleteButtonController DeleteButtonController;
template<>
struct OwnPtr<WebCore::DeleteButtonController> {
	DeleteButtonController *m_ptr;
};

typedef struct EditCommand EditCommand;
template<>
struct RefPtr<WebCore::EditCommand> {
	EditCommand *m_ptr;
};

typedef struct Node Node;
template<>
struct RefPtr<WebCore::Node> {
	Node *m_ptr;
};

typedef struct Text Text;
template<>
struct RefPtr<WebCore::Text> {
	Text *m_ptr;
};

typedef struct CompositionUnderline CompositionUnderline;
template<>
struct VectorBuffer<WebCore::CompositionUnderline,0ul> {
	CompositionUnderline *m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::CompositionUnderline,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::CompositionUnderline,0ul> m_buffer;
};

typedef struct KillRing KillRing;
template<>
struct OwnPtr<WebCore::KillRing> {
	KillRing *m_ptr;
};

typedef struct SpellChecker SpellChecker;
template<>
struct OwnPtr<WebCore::SpellChecker> {
	SpellChecker *m_ptr;
};

typedef struct SpellingCorrectionController SpellingCorrectionController;
template<>
struct OwnPtr<WebCore::SpellingCorrectionController> {
	SpellingCorrectionController *m_ptr;
};

typedef struct Position {
	RefPtr<WebCore::Node> m_anchorNode;
	int m_offset;
	unsigned m_anchorType : 2;
	unsigned m_isLegacyEditingPosition : 1;
} Position;

typedef struct VisibleSelection {
	Position m_base;
	Position m_extent;
	Position m_start;
	Position m_end;
	int m_affinity;
	int m_selectionType;
	bool m_baseIsFirst;
} VisibleSelection;

typedef struct Editor {
	Frame *m_frame;
	OwnPtr<WebCore::DeleteButtonController> m_deleteButtonController;
	RefPtr<WebCore::EditCommand> m_lastEditCommand;
	RefPtr<WebCore::Node> m_removedAnchor;
	RefPtr<WebCore::Text> m_compositionNode;
	unsigned m_compositionStart;
	unsigned m_compositionEnd;
	Vector<WebCore::CompositionUnderline,0ul> m_customCompositionUnderlines;
	bool m_ignoreCompositionSelectionChange;
	bool m_shouldStartNewKillRingSequence;
	bool m_shouldStyleWithCSS;
	OwnPtr<WebCore::KillRing> m_killRing;
	OwnPtr<WebCore::SpellChecker> m_spellChecker;
	OwnPtr<WebCore::SpellingCorrectionController> m_spellingCorrector;
	VisibleSelection m_mark;
	bool m_areMarkedTextMatchesHighlighted;
} Editor;

typedef struct IntPoint {
	int m_x;
	int m_y;
} IntPoint;

typedef struct IntSize {
	int m_width;
	int m_height;
} IntSize;

typedef struct IntRect {
	IntPoint m_location;
	IntSize m_size;
} IntRect;

typedef struct AtomicString {
	String m_string;
} AtomicString;

typedef struct EditingStyle EditingStyle;
template<>
struct RefPtr<WebCore::EditingStyle> {
	EditingStyle *m_ptr;
};

typedef struct {
	int *_field1;
} XXStruct_f1ovNA;

typedef struct FrameSelection FrameSelection;
template<>
struct Timer<WebCore::FrameSelection> {
	/*function-pointer*/ void **_field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	FrameSelection *_field6;
	XXStruct_f1ovNA _field7;
};

typedef struct Color {
	unsigned m_color;
	bool m_valid;
} Color;

struct FrameSelection {
	struct IntRect _field1;
	bool _field2;
	int _field3;
	struct Frame *_field4;
	int _field5;
	struct VisibleSelection _field6;
	int _field7;
	struct RefPtr<WebCore::EditingStyle> _field8;
	struct Timer<WebCore::FrameSelection> _field9;
	struct IntRect _field10;
	struct IntRect _field11;
	bool _field12;
	bool _field13;
	bool _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	bool _field18;
	struct Color _field19;
	int _field20;
	int _field21;
};

typedef struct FrameTree {
	Frame *m_thisFrame;
	Frame *m_parent;
	AtomicString m_name;
	AtomicString m_uniqueName;
	RefPtr<WebCore::Frame> m_nextSibling;
	Frame *m_previousSibling;
	RefPtr<WebCore::Frame> m_firstChild;
	Frame *m_lastChild;
	unsigned m_childCount;
} FrameTree;

typedef struct Scrollbar Scrollbar;
template<>
struct RefPtr<WebCore::Scrollbar> {
	Scrollbar *m_ptr;
};

template<>
struct RefPtr<WebCore::Touch>;
template<>
struct VectorBuffer<WTF::RefPtr<WebCore::Touch>,0ul> {
	RefPtr<WebCore::Touch> *m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WTF::RefPtr<WebCore::Touch>,0ul> {
	unsigned m_size;
	VectorBuffer<WTF::RefPtr<WebCore::Touch>,0ul> m_buffer;
};

typedef struct RefPtr<WebCore::EventTarget> RefPtr<WebCore::EventTarget>;
template<>
struct HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > {
	RefPtr<WebCore::EventTarget> *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > {
	HashTable<WTF::RefPtr<WebCore::EventTarget>,WTF::RefPtr<WebCore::EventTarget>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::EventTarget> >,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > m_impl;
};

typedef struct HTMLFrameSetElement *HTMLFrameSetElementRef;
template<>
struct RefPtr<WebCore::HTMLFrameSetElement> {
	HTMLFrameSetElementRef m_ptr;
};

typedef struct PlatformMouseEvent {
	IntPoint m_position;
	IntPoint m_globalPosition;
	int m_button;
	int m_eventType;
	int m_clickCount;
	bool m_shiftKey;
	bool m_ctrlKey;
	bool m_altKey;
	bool m_metaKey;
	double m_timestamp;
	unsigned m_modifierFlags;
} PlatformMouseEvent;

typedef struct EventHandler EventHandler;
template<>
struct Timer<WebCore::EventHandler> {
	/*function-pointer*/ void **_field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	EventHandler *_field6;
	XXStruct_f1ovNA _field7;
};

typedef struct SVGElementInstance *SVGElementInstanceRef;
template<>
struct RefPtr<WebCore::SVGElementInstance> {
	SVGElementInstanceRef m_ptr;
};

typedef struct RenderObject RenderObject;
typedef struct RenderLayer RenderLayer;
struct EventHandler {
	struct Frame *_field1;
	bool _field2;
	bool _field3;
	struct RefPtr<WebCore::Node> _field4;
	bool _field5;
	bool _field6;
	bool _field7;
	struct IntPoint _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	struct Timer<WebCore::EventHandler> _field12;
	struct Timer<WebCore::EventHandler> _field13;
	struct RenderObject *_field14;
	bool _field15;
	bool _field16;
	bool _field17;
	struct Timer<WebCore::EventHandler> _field18;
	bool _field19;
	struct RefPtr<WebCore::SVGElementInstance> _field20;
	struct RefPtr<WebCore::SVGElementInstance> _field21;
	struct RenderLayer *_field22;
	struct RefPtr<WebCore::Node> _field23;
	bool _field24;
	struct RefPtr<WebCore::Node> _field25;
	struct RefPtr<WebCore::Node> _field26;
	struct RefPtr<WebCore::Frame> _field27;
	struct RefPtr<WebCore::Scrollbar> _field28;
	int _field29;
	struct RefPtr<WebCore::Node> _field30;
	float _field31;
	float _field32;
	float _field33;
	float _field34;
	unsigned _field35;
	struct Vector<WTF::RefPtr<WebCore::Touch>,0ul> _field36;
	struct HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > _field37;
	struct RefPtr<WebCore::Frame> _field38;
	struct RefPtr<WebCore::HTMLFrameSetElement> _field39;
	struct IntSize _field40;
	struct IntPoint _field41;
	struct IntPoint _field42;
	double _field43;
	struct PlatformMouseEvent _field44;
	bool _field45;
	struct RefPtr<WebCore::Node> _field46;
	bool _field47;
	struct RefPtr<WebCore::Node> _field48;
	id _field49;
	bool _field50;
};

typedef struct KURL {
	String m_string;
	unsigned m_isValid : 1;
	unsigned m_protocolIsInHTTPFamily : 1;
	int m_schemeEnd;
	int m_userStart;
	int m_userEnd;
	int m_passwordEnd;
	int m_hostEnd;
	int m_portEnd;
	int m_pathAfterLastSlash;
	int m_pathEnd;
	int m_queryEnd;
	int m_fragmentEnd;
} KURL;

template<>
struct pair<WTF::AtomicString,WTF::String>;
template<>
struct HashTable<WTF::AtomicString,std::pair<WTF::AtomicString, WTF::String>,WTF::PairFirstExtractor<std::pair<WTF::AtomicString, WTF::String> >,WTF::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String> >,WTF::HashTraits<WTF::AtomicString> > {
	pair<WTF::AtomicString,WTF::String> *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

typedef struct HTTPHeaderMap {
	HashTable<WTF::AtomicString,std::pair<WTF::AtomicString, WTF::String>,WTF::PairFirstExtractor<std::pair<WTF::AtomicString, WTF::String> >,WTF::CaseFoldingHash,WTF::PairHashTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String> >,WTF::HashTraits<WTF::AtomicString> > m_impl;
} HTTPHeaderMap;

template<>
struct VectorBuffer<WTF::String,0ul> {
	String *m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WTF::String,0ul> {
	unsigned m_size;
	VectorBuffer<WTF::String,0ul> m_buffer;
};

typedef struct FormData FormData;
template<>
struct RefPtr<WebCore::FormData> {
	FormData *m_ptr;
};

typedef struct _CFURLRequest *CFURLRequestRef;
template<>
struct RetainPtr<const _CFURLRequest*> {
	CFURLRequestRef m_ptr;
};

@class NSURLRequest;
template<>
struct RetainPtr<NSURLRequest> {
	NSURLRequest *m_ptr;
};

typedef struct ResourceRequest {
	KURL m_url;
	int m_cachePolicy;
	double m_timeoutInterval;
	KURL m_firstPartyForCookies;
	String m_httpMethod;
	HTTPHeaderMap m_httpHeaderFields;
	Vector<WTF::String,0ul> m_responseContentDispositionEncodingFallbackArray;
	RefPtr<WebCore::FormData> m_httpBody;
	bool m_allowCookies;
	bool m_resourceRequestUpdated;
	bool m_platformRequestUpdated;
	bool m_reportUploadProgress;
	bool m_reportLoadTiming;
	bool m_reportRawHeaders;
	int m_priority;
	int m_targetType;
	bool m_mainResourceRequest;
	RetainPtr<const _CFURLRequest*> m_cfRequest;
	RetainPtr<NSURLRequest> m_nsRequest;
} ResourceRequest;

typedef struct FormState FormState;
template<>
struct RefPtr<WebCore::FormState> {
	FormState *m_ptr;
};

typedef struct AnimationControllerPrivate AnimationControllerPrivate;
typedef struct AnimationController {
	AnimationControllerPrivate *m_data;
} AnimationController;

typedef struct Event Event;
template<>
struct RefPtr<WebCore::Event> {
	Event *m_ptr;
};

template<>
struct Timer<WebCore::Frame> {
	/*function-pointer*/ void **_field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	Frame *_field6;
	XXStruct_f1ovNA _field7;
};

typedef struct NavigationAction {
	KURL m_URL;
	int m_type;
	RefPtr<WebCore::Event> m_event;
} NavigationAction;

typedef struct FloatSize {
	float m_width;
	float m_height;
} FloatSize;

typedef struct PolicyCallback {
	ResourceRequest m_request;
	RefPtr<WebCore::FormState> m_formState;
	String m_frameName;
	NavigationAction m_navigationAction;
	/*function-pointer*/ void *m_navigationFunction;
	/*function-pointer*/ void *m_newWindowFunction;
	/*function-pointer*/ void *m_contentFunction;
	void *m_argument;
} PolicyCallback;

typedef struct PolicyChecker {
	Frame *m_frame;
	bool m_delegateIsDecidingNavigationPolicy;
	bool m_delegateIsHandlingUnimplementablePolicy;
	int m_loadType;
	PolicyCallback m_callback;
} PolicyChecker;

typedef struct HistoryItem HistoryItem;
template<>
struct RefPtr<WebCore::HistoryItem> {
	HistoryItem *m_ptr;
};

typedef struct HistoryController {
	Frame *m_frame;
	RefPtr<WebCore::HistoryItem> m_currentItem;
	RefPtr<WebCore::HistoryItem> m_previousItem;
	RefPtr<WebCore::HistoryItem> m_provisionalItem;
	bool m_frameLoadComplete;
	bool m_defersLoading;
	RefPtr<WebCore::HistoryItem> m_deferredItem;
	int m_deferredFrameLoadType;
} HistoryController;

typedef struct ResourceLoadNotifier {
	Frame *m_frame;
} ResourceLoadNotifier;

typedef struct SubframeLoader {
	bool m_containsPlugins;
	Frame *m_frame;
} SubframeLoader;

typedef struct FrameLoaderStateMachine {
	int m_state;
} FrameLoaderStateMachine;

typedef struct DocumentLoader DocumentLoader;
template<>
struct RefPtr<WebCore::DocumentLoader> {
	DocumentLoader *m_ptr;
};

typedef struct SerializedScriptValue SerializedScriptValue;
template<>
struct RefPtr<WebCore::SerializedScriptValue> {
	SerializedScriptValue *m_ptr;
};

typedef struct IconLoader IconLoader;
template<>
struct OwnPtr<WebCore::IconLoader> {
	IconLoader *m_ptr;
};

typedef struct FrameLoader FrameLoader;
template<>
struct Timer<WebCore::FrameLoader> {
	/*function-pointer*/ void **_field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	FrameLoader *_field6;
	XXStruct_f1ovNA _field7;
};

template<>
struct HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > {
	Frame **m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > {
	HashTable<WebCore::Frame*,WebCore::Frame*,WTF::IdentityExtractor<WebCore::Frame*>,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > m_impl;
};

typedef struct FrameNetworkingContext FrameNetworkingContext;
template<>
struct RefPtr<WebCore::FrameNetworkingContext> {
	FrameNetworkingContext *m_ptr;
};

typedef struct FrameLoaderClient FrameLoaderClient;
struct FrameLoader {
	/*function-pointer*/ void **_field1;
	struct Frame *_field2;
	struct FrameLoaderClient *_field3;
	struct PolicyChecker _field4;
	struct HistoryController _field5;
	struct ResourceLoadNotifier _field6;
	struct SubframeLoader _field7;
	struct FrameLoaderStateMachine _field8;
	int _field9;
	int _field10;
	struct RefPtr<WebCore::DocumentLoader> _field11;
	struct RefPtr<WebCore::DocumentLoader> _field12;
	struct RefPtr<WebCore::DocumentLoader> _field13;
	bool _field14;
	bool _field15;
	bool _field16;
	bool _field17;
	struct String _field18;
	bool _field19;
	bool _field20;
	bool _field21;
	bool _field22;
	bool _field23;
	bool _field24;
	struct RefPtr<WebCore::SerializedScriptValue> _field25;
	struct KURL _field26;
	struct OwnPtr<WebCore::IconLoader> _field27;
	bool _field28;
	bool _field29;
	struct KURL _field30;
	struct Timer<WebCore::FrameLoader> _field31;
	bool _field32;
	bool _field33;
	struct Frame *_field34;
	struct HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > _field35;
	bool _field36;
	bool _field37;
	bool _field38;
	int _field39;
	int _field40;
	struct RefPtr<WebCore::FrameNetworkingContext> _field41;
	struct KURL _field42;
	bool _field43;
};

typedef struct ScheduledNavigation ScheduledNavigation;
template<>
struct OwnPtr<WebCore::ScheduledNavigation> {
	ScheduledNavigation *m_ptr;
};

typedef struct NavigationScheduler NavigationScheduler;
template<>
struct Timer<WebCore::NavigationScheduler> {
	/*function-pointer*/ void **_field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	NavigationScheduler *_field6;
	XXStruct_f1ovNA _field7;
};

struct NavigationScheduler {
	struct Frame *_field1;
	struct Timer<WebCore::NavigationScheduler> _field2;
	struct OwnPtr<WebCore::ScheduledNavigation> _field3;
};

template<>
struct RefPtr<WebCore::DOMWindow> {
	DOMWindowRef m_ptr;
};

typedef struct HTMLFrameOwnerElement HTMLFrameOwnerElement;
struct Frame {
	int _field1;
	struct HashSet<WebCore::FrameDestructionObserver*,WTF::PtrHash<WebCore::FrameDestructionObserver*>,WTF::HashTraits<WebCore::FrameDestructionObserver*> > _field2;
	struct Page *_field3;
	struct FrameTree _field4;
	struct FrameLoader _field5;
	struct NavigationScheduler _field6;
	struct RefPtr<WebCore::DOMWindow> _field7;
	struct HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > _field8;
	struct HTMLFrameOwnerElement *_field9;
	struct RefPtr<WebCore::FrameView> _field10;
	struct RefPtr<WebCore::Document> _field11;
	struct ScriptController _field12;
	struct Editor _field13;
	struct FrameSelection _field14;
	struct EventHandler _field15;
	struct AnimationController _field16;
	struct Timer<WebCore::Frame> _field17;
	float _field18;
	struct IntPoint _field19;
	struct ViewportArguments _field20;
	bool _field21;
	struct VisibleSelection _field22;
	struct VisibleSelection _field23;
	struct FloatSize _field24;
	unsigned _field25;
	unsigned _field26;
	unsigned _field27;
	double _field28;
	double _field29;
	struct Timer<WebCore::Frame> _field30;
	float _field31;
	float _field32;
	float _field33;
	int _field34;
	bool _field35;
	bool _field36;
	bool _field37;
	bool _field38;
	int _field39;
};

struct StringImpl;

struct FrameLoaderClient;

template<>
struct pair<WTF::AtomicString,WTF::String>;

struct FormData;

struct FormState;

struct Event;

template<>
struct VectorBuffer<WTF::RefPtr<WebCore::HistoryItem>,0ul> {
	RefPtr<WebCore::HistoryItem> *_field1;
	unsigned _field2;
};

template<>
struct Vector<WTF::RefPtr<WebCore::HistoryItem>,0ul> {
	unsigned _field1;
	VectorBuffer<WTF::RefPtr<WebCore::HistoryItem>,0ul> _field2;
};

template<>
struct VectorBuffer<int,0ul> {
	int *_field1;
	unsigned _field2;
};

template<>
struct Vector<int,0ul> {
	unsigned _field1;
	VectorBuffer<int,0ul> _field2;
};

template<>
struct OwnPtr<WTF::Vector<WTF::String, 0ul> > {
	Vector<WTF::String,0ul> *_field1;
};

template<>
struct RetainPtr<objc_object*> {
	id m_ptr;
};

typedef struct CachedPage CachedPage;
template<>
struct RefPtr<WebCore::CachedPage> {
	CachedPage *_field1;
};

template<>
struct HashMap<WTF::String,WTF::RetainPtr<objc_object*>,WTF::StringHash,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::RetainPtr<objc_object*> > >;
template<>
struct OwnPtr<WTF::HashMap<WTF::String, WTF::RetainPtr<objc_object*>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<objc_object*> > > > {
	HashMap<WTF::String,WTF::RetainPtr<objc_object*>,WTF::StringHash,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::RetainPtr<objc_object*> > > *_field1;
};

struct HistoryItem {
	int _field1;
	struct String _field2;
	struct String _field3;
	struct String _field4;
	struct String _field5;
	struct String _field6;
	struct String _field7;
	struct String _field8;
	double _field9;
	bool _field10;
	struct IntPoint _field11;
	float _field12;
	struct Vector<WTF::String,0ul> _field13;
	struct Vector<WTF::RefPtr<WebCore::HistoryItem>,0ul> _field14;
	bool _field15;
	bool _field16;
	int _field17;
	struct Vector<int,0ul> _field18;
	struct Vector<int,0ul> _field19;
	struct OwnPtr<WTF::Vector<WTF::String, 0ul> > _field20;
	long long _field21;
	long long _field22;
	struct RefPtr<WebCore::SerializedScriptValue> _field23;
	struct RefPtr<WebCore::FormData> _field24;
	struct String _field25;
	struct HistoryItem *_field26;
	struct HistoryItem *_field27;
	struct RefPtr<WebCore::CachedPage> _field28;
	float _field29;
	bool _field30;
	struct ViewportArguments _field31;
	struct RetainPtr<objc_object*> _field32;
	struct OwnPtr<WTF::HashMap<WTF::String, WTF::RetainPtr<objc_object*>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<objc_object*> > > > _field33;
};

typedef struct ResourceLoadInfo ResourceLoadInfo;
template<>
struct RefPtr<WebCore::ResourceLoadInfo> {
	ResourceLoadInfo *m_ptr;
};

typedef struct _CFURLResponse *CFURLResponseRef;
template<>
struct RetainPtr<_CFURLResponse*> {
	CFURLResponseRef m_ptr;
};

@class NSURLResponse;
template<>
struct RetainPtr<NSURLResponse> {
	NSURLResponse *m_ptr;
};

typedef struct ResourceLoadTiming ResourceLoadTiming;
template<>
struct RefPtr<WebCore::ResourceLoadTiming> {
	ResourceLoadTiming *m_ptr;
};

typedef struct ResourceResponse {
	KURL m_url;
	String m_mimeType;
	long long m_expectedContentLength;
	String m_textEncodingName;
	String m_suggestedFilename;
	int m_httpStatusCode;
	String m_httpStatusText;
	HTTPHeaderMap m_httpHeaderFields;
	int m_lastModifiedDate;
	unsigned m_wasCached : 1;
	unsigned m_connectionID;
	unsigned m_connectionReused : 1;
	RefPtr<WebCore::ResourceLoadTiming> m_resourceLoadTiming;
	RefPtr<WebCore::ResourceLoadInfo> m_resourceLoadInfo;
	unsigned m_isNull : 1;
	unsigned m_haveParsedCacheControlHeader : 1;
	unsigned m_haveParsedAgeHeader : 1;
	unsigned m_haveParsedDateHeader : 1;
	unsigned m_haveParsedExpiresHeader : 1;
	unsigned m_haveParsedLastModifiedHeader : 1;
	unsigned m_cacheControlContainsNoCache : 1;
	unsigned m_cacheControlContainsNoStore : 1;
	unsigned m_cacheControlContainsMustRevalidate : 1;
	double m_cacheControlMaxAge;
	double m_age;
	double m_date;
	double m_expires;
	double m_lastModified;
	RetainPtr<_CFURLResponse*> m_cfResponse;
	RetainPtr<NSURLResponse> m_nsResponse;
	int m_initLevel;
} ResourceResponse;

typedef struct __CFError *CFErrorRef;
template<>
struct RetainPtr<__CFError*> {
	CFErrorRef m_ptr;
};

@class NSError;
template<>
struct RetainPtr<NSError> {
	NSError *m_ptr;
};

typedef struct ResourceError {
	String m_domain;
	int m_errorCode;
	String m_failingURL;
	String m_localizedDescription;
	bool m_isNull;
	bool m_isCancellation;
	bool m_dataIsUpToDate;
	RetainPtr<__CFError*> m_platformError;
	RetainPtr<NSError> m_platformNSError;
} ResourceError;

typedef struct StringWithDirection {
	String m_string;
	int m_direction;
} StringWithDirection;

typedef struct IconURL {
	int m_iconType;
	KURL m_iconURL;
} IconURL;

template<>
struct VectorBuffer<WebCore::ResourceResponse,0ul> {
	ResourceResponse *m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::ResourceResponse,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::ResourceResponse,0ul> m_buffer;
};

template<>
struct pair<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource> >;
template<>
struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>,std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > {
	pair<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource> > *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > > {
	HashTable<WTF::RefPtr<WebCore::ResourceLoader>,std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> >,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > m_impl;
};

typedef struct ArchiveResourceCollection ArchiveResourceCollection;
template<>
struct OwnPtr<WebCore::ArchiveResourceCollection> {
	ArchiveResourceCollection *m_ptr;
};

template<>
struct HashTable<WTF::String,WTF::String,WTF::IdentityExtractor<WTF::String>,WTF::StringHash,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String> > {
	String *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WTF::String,WTF::StringHash,WTF::HashTraits<WTF::String> > {
	HashTable<WTF::String,WTF::String,WTF::IdentityExtractor<WTF::String>,WTF::StringHash,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String> > m_impl;
};

typedef struct DocumentLoadTiming {
	double navigationStart;
	double unloadEventStart;
	double unloadEventEnd;
	double redirectStart;
	double redirectEnd;
	short redirectCount;
	double fetchStart;
	double responseEnd;
	double loadEventStart;
	double loadEventEnd;
	bool hasCrossOriginRedirect;
	bool hasSameOriginAsPreviousDocument;
} DocumentLoadTiming;

template<>
struct Timer<WebCore::DocumentLoader> {
	/*function-pointer*/ void **_field1;
	double _field2;
	double _field3;
	int _field4;
	unsigned _field5;
	DocumentLoader *_field6;
	XXStruct_f1ovNA _field7;
};

template<>
struct EnumCallback<WebCore::IconLoadDecision>;
template<>
struct RefPtr<WebCore::EnumCallback<WebCore::IconLoadDecision> > {
	EnumCallback<WebCore::IconLoadDecision> *m_ptr;
};

typedef struct MainResourceLoader MainResourceLoader;
template<>
struct RefPtr<WebCore::MainResourceLoader> {
	MainResourceLoader *m_ptr;
};

template<>
struct ObjectCallback<WebCore::SharedBuffer*>;
template<>
struct RefPtr<WebCore::ObjectCallback<WebCore::SharedBuffer*> > {
	ObjectCallback<WebCore::SharedBuffer*> *m_ptr;
};

template<>
struct RefPtr<WebCore::ResourceLoader>;
template<>
struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::ResourceLoader>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > {
	RefPtr<WebCore::ResourceLoader> *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > {
	HashTable<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::ResourceLoader>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > m_impl;
};

typedef struct ApplicationCacheHost ApplicationCacheHost;
template<>
struct OwnPtr<WebCore::ApplicationCacheHost> {
	ApplicationCacheHost *m_ptr;
};

typedef struct SharedBuffer SharedBuffer;
template<>
struct RefPtr<WebCore::SharedBuffer> {
	SharedBuffer *m_ptr;
};

typedef struct TextResourceDecoder TextResourceDecoder;
template<>
struct RefPtr<WebCore::TextResourceDecoder> {
	TextResourceDecoder *m_ptr;
};

typedef struct DocumentWriter {
	Frame *m_frame;
	bool m_receivedData;
	String m_mimeType;
	bool m_encodingWasChosenByUser;
	String m_encoding;
	RefPtr<WebCore::TextResourceDecoder> m_decoder;
} DocumentWriter;

typedef struct SubstituteData {
	RefPtr<WebCore::SharedBuffer> m_content;
	String m_mimeType;
	String m_textEncoding;
	KURL m_failingURL;
	KURL m_responseURL;
} SubstituteData;

struct DocumentLoader {
	/*function-pointer*/ void **_field1;
	int _field2;
	bool _field3;
	struct Frame *_field4;
	struct RefPtr<WebCore::MainResourceLoader> _field5;
	struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field6;
	struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field7;
	struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field8;
	struct RefPtr<WebCore::SharedBuffer> _field9;
	struct DocumentWriter _field10;
	struct ResourceRequest _field11;
	struct SubstituteData _field12;
	struct ResourceRequest _field13;
	struct ResourceRequest _field14;
	struct ResourceResponse _field15;
	struct ResourceError _field16;
	bool _field17;
	bool _field18;
	bool _field19;
	bool _field20;
	bool _field21;
	bool _field22;
	bool _field23;
	struct StringWithDirection _field24;
	struct IconURL _field25[1];
	struct String _field26;
	struct NavigationAction _field27;
	struct ResourceRequest _field28;
	struct Vector<WebCore::ResourceResponse,0ul> _field29;
	bool _field30;
	struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > > _field31;
	struct Timer<WebCore::DocumentLoader> _field32;
	struct OwnPtr<WebCore::ArchiveResourceCollection> _field33;
	struct RefPtr<WebCore::SharedBuffer> _field34;
	struct HashSet<WTF::String,WTF::StringHash,WTF::HashTraits<WTF::String> > _field35;
	struct Vector<WTF::String,0ul> _field36;
	struct String _field37;
	bool _field38;
	struct DocumentLoadTiming _field39;
	struct RefPtr<WebCore::EnumCallback<WebCore::IconLoadDecision> > _field40;
	struct RefPtr<WebCore::ObjectCallback<WebCore::SharedBuffer*> > _field41;
	bool _field42;
	struct OwnPtr<WebCore::ApplicationCacheHost> _field43;
};

struct SerializedScriptValue;

struct IconLoader;

struct FrameNetworkingContext;

struct ScheduledNavigation;

struct DOMWindow;

typedef struct CSSMutableStyleDeclaration *CSSMutableStyleDeclarationRef;
template<>
struct RefPtr<WebCore::CSSMutableStyleDeclaration> {
	CSSMutableStyleDeclarationRef _field1;
};

typedef struct JSValue JSValue;
template<>
struct Weak<WebCore::JSDOMWrapper> {
	JSValue *_field1;
};

typedef struct QualifiedNameImpl QualifiedNameImpl;
typedef struct QualifiedName {
	QualifiedNameImpl *_field1;
} QualifiedName;

typedef struct NamedNodeMap NamedNodeMap;
template<>
struct RefPtr<WebCore::NamedNodeMap> {
	NamedNodeMap *_field1;
};

typedef struct ContainerNode ContainerNode;
struct HTMLFrameOwnerElement {
	/*function-pointer*/ void **_field1;
	/*function-pointer*/ void **_field2;
	int _field3;
	struct ContainerNode *_field4;
	struct Weak<WebCore::JSDOMWrapper> _field5;
	struct Document *_field6;
	struct Node *_field7;
	struct Node *_field8;
	struct RenderObject *_field9;
	unsigned _field10;
	struct Node *_field11;
	struct Node *_field12;
	struct QualifiedName _field13;
	struct RefPtr<WebCore::NamedNodeMap> _field14;
	struct RefPtr<WebCore::CSSMutableStyleDeclaration> _field15;
	struct Frame *_field16;
	int _field17;
};

struct FrameView;

struct Document;

template<>
struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>,JSC::Strong<WebCore::JSDOMWindowShell> >;

struct RootObject;

template<>
struct pair<void*,WTF::RefPtr<JSC::Bindings::RootObject> >;

struct DeleteButtonController;

typedef struct Element Element;
template<>
struct RefPtr<WebCore::Element> {
	Element *m_ptr;
};

typedef struct CompositeEditCommand CompositeEditCommand;
struct EditCommand {
	/*function-pointer*/ void **_field1;
	int _field2;
	struct RefPtr<WebCore::Document> _field3;
	struct VisibleSelection _field4;
	struct VisibleSelection _field5;
	struct RefPtr<WebCore::Element> _field6;
	struct RefPtr<WebCore::Element> _field7;
	struct CompositeEditCommand *_field8;
};

struct Node;

struct Text;

struct CompositionUnderline;

struct KillRing;

struct SpellChecker;

struct SpellingCorrectionController;

struct EditingStyle;

struct RenderObject;

struct SVGElementInstance;

typedef struct TransformationMatrix TransformationMatrix;
template<>
struct OwnPtr<WebCore::TransformationMatrix> {
	TransformationMatrix *_field1;
};

typedef struct ScrollAnimator ScrollAnimator;
template<>
struct OwnPtr<WebCore::ScrollAnimator> {
	ScrollAnimator *_field1;
};

typedef struct RenderLayerBacking RenderLayerBacking;
template<>
struct OwnPtr<WebCore::RenderLayerBacking> {
	RenderLayerBacking *_field1;
};

typedef struct RenderReplica RenderReplica;
typedef struct RenderScrollbarPart RenderScrollbarPart;
typedef struct RenderBoxModelObject RenderBoxModelObject;
template<>
struct Vector<WebCore::RenderLayer*,0ul>;
typedef struct ClipRects ClipRects;
typedef struct RenderMarquee RenderMarquee;
struct RenderLayer {
	/*function-pointer*/ void **_field1;
	struct OwnPtr<WebCore::ScrollAnimator> _field2;
	bool _field3;
	bool _field4;
	int _field5;
	int _field6;
	struct IntPoint _field7;
	struct RenderBoxModelObject *_field8;
	struct RenderLayer *_field9;
	struct RenderLayer *_field10;
	struct RenderLayer *_field11;
	struct RenderLayer *_field12;
	struct RenderLayer *_field13;
	struct IntRect _field14;
	struct IntRect _field15;
	struct IntSize _field16;
	struct IntPoint _field17;
	struct IntSize _field18;
	struct IntSize _field19;
	struct IntSize _field20;
	struct IntSize _field21;
	struct RefPtr<WebCore::Scrollbar> _field22;
	struct RefPtr<WebCore::Scrollbar> _field23;
	bool _field24;
	struct Vector<WebCore::RenderLayer*,0ul> *_field25;
	struct Vector<WebCore::RenderLayer*,0ul> *_field26;
	struct Vector<WebCore::RenderLayer*,0ul> *_field27;
	struct ClipRects *_field28;
	unsigned _field29 : 1;
	unsigned _field30 : 1;
	unsigned _field31 : 1;
	unsigned _field32 : 1;
	unsigned _field33 : 1;
	unsigned _field34 : 1;
	unsigned _field35 : 1;
	unsigned _field36 : 1;
	unsigned _field37 : 1;
	unsigned _field38 : 1;
	unsigned _field39 : 1;
	unsigned _field40 : 1;
	unsigned _field41 : 1;
	unsigned _field42 : 1;
	unsigned _field43 : 1;
	unsigned _field44 : 1;
	unsigned _field45 : 1;
	unsigned _field46 : 1;
	unsigned _field47 : 1;
	unsigned _field48 : 1;
	unsigned _field49 : 1;
	unsigned _field50 : 1;
	unsigned _field51 : 1;
	struct IntPoint _field52;
	struct RenderMarquee *_field53;
	int _field54;
	int _field55;
	struct OwnPtr<WebCore::TransformationMatrix> _field56;
	struct RenderReplica *_field57;
	struct RenderScrollbarPart *_field58;
	struct RenderScrollbarPart *_field59;
	struct IntRect _field60;
	struct OwnPtr<WebCore::RenderLayerBacking> _field61;
	struct Page *_field62;
};

struct Scrollbar;

template<>
struct RefPtr<WebCore::Touch>;

typedef struct EventTarget EventTarget;
template<>
struct RefPtr<WebCore::EventTarget> {
	struct EventTarget *_field1;
};

struct HTMLFrameSetElement;

struct AnimationControllerPrivate;

@class WebNodeHighlighter;
template<>
struct RetainPtr<WebNodeHighlighter> {
	WebNodeHighlighter *m_ptr;
};

@class WebInspectorWindowController;
template<>
struct RetainPtr<WebInspectorWindowController> {
	WebInspectorWindowController *m_ptr;
};

template<>
struct pair<WTF::String,WTF::String>;

template<>
struct HashTable<WTF::String,std::pair<WTF::String, WTF::String>,WTF::PairFirstExtractor<std::pair<WTF::String, WTF::String> >,WTF::StringHash,WTF::PairHashTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >,WTF::HashTraits<WTF::String> > {
	pair<WTF::String,WTF::String> *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WTF::String,WTF::String,WTF::StringHash,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String> > {
	HashTable<WTF::String,std::pair<WTF::String, WTF::String>,WTF::PairFirstExtractor<std::pair<WTF::String, WTF::String> >,WTF::StringHash,WTF::PairHashTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >,WTF::HashTraits<WTF::String> > m_impl;
};

typedef struct WebInspectorClient {
	/*function-pointer*/ void **_field1;
	id _field2;
	RetainPtr<WebNodeHighlighter> _field3;
	Page *_field4;
	RetainPtr<WebInspectorWindowController> _field5;
	HashMap<WTF::String,WTF::String,WTF::StringHash,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::String> > _field6;
	int _field7;
	id _field8;
} WebInspectorClient;

typedef struct RefPtr<WebCore::ArchiveResource> RefPtr<WebCore::ArchiveResource>;
template<>
struct VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>,0ul> {
	RefPtr<WebCore::ArchiveResource> *_field1;
	unsigned _field2;
};

template<>
struct Vector<WTF::RefPtr<WebCore::ArchiveResource>,0ul> {
	unsigned _field1;
	VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>,0ul> _field2;
};

template<>
struct RefPtr<WebCore::Archive>;
template<>
struct VectorBuffer<WTF::RefPtr<WebCore::Archive>,0ul> {
	RefPtr<WebCore::Archive> *_field1;
	unsigned _field2;
};

template<>
struct Vector<WTF::RefPtr<WebCore::Archive>,0ul> {
	unsigned _field1;
	VectorBuffer<WTF::RefPtr<WebCore::Archive>,0ul> _field2;
};

typedef struct ArchiveResource ArchiveResource;
template<>
struct RefPtr<WebCore::ArchiveResource> {
	struct ArchiveResource *_field1;
};

typedef struct LegacyWebArchive {
	int _field1;
	RefPtr<WebCore::ArchiveResource> _field2;
	Vector<WTF::RefPtr<WebCore::ArchiveResource>,0ul> _field3;
	Vector<WTF::RefPtr<WebCore::Archive>,0ul> _field4;
} LegacyWebArchive;

template<>
struct RefPtr<WebCore::LegacyWebArchive> {
	LegacyWebArchive *m_ptr;
};

template<>
struct PassRefPtr<WebCore::LegacyWebArchive> {
	LegacyWebArchive *_field1;
};

struct ArchiveResource {
	/*function-pointer*/ void **_field1;
	int _field2;
	struct KURL _field3;
	struct ResourceResponse _field4;
	struct RefPtr<WebCore::SharedBuffer> _field5;
	struct String _field6;
	struct String _field7;
	struct String _field8;
	bool _field9;
};

template<>
struct RefPtr<WebCore::Archive>;

typedef struct MimeClassInfo MimeClassInfo;

template<>
struct VectorBuffer<WebCore::MimeClassInfo,0ul> {
	MimeClassInfo *m_buffer;
	unsigned m_capacity;
};

template<>
struct Vector<WebCore::MimeClassInfo,0ul> {
	unsigned m_size;
	VectorBuffer<WebCore::MimeClassInfo,0ul> m_buffer;
};

typedef struct PluginInfo {
	String name;
	String file;
	String desc;
	Vector<WebCore::MimeClassInfo,0ul> mimes;
} PluginInfo;

typedef struct __CFBundle *CFBundleRef;
template<>
struct RetainPtr<__CFBundle*> {
	CFBundleRef m_ptr;
};

template<>
struct pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int>;
template<>
struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >, WTF::HashTraits<int> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int> *_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<int> > {
	HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int>,WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, int> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >, WTF::HashTraits<int> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field1;
};

template<>
struct pair<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >;
template<>
struct HashTable<int,std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairFirstExtractor<std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::HashTraits<int> > {
	pair<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > *_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IntHash<unsigned int>,WTF::HashTraits<int>,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	HashTable<int,std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PairFirstExtractor<std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > >,WTF::HashTraits<int> > _field1;
};

typedef struct Watchers {
	HashMap<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IntHash<unsigned int>,WTF::HashTraits<int>,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field1;
	HashMap<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<int> > _field2;
} Watchers;

template<>
struct RefPtr<WebCore::Geolocation::GeoNotifier>;
template<>
struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	RefPtr<WebCore::Geolocation::GeoNotifier> *_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > {
	HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::IdentityExtractor<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field1;
};

typedef struct GeolocationService GeolocationService;
template<>
struct OwnPtr<WebCore::GeolocationService> {
	GeolocationService *_field1;
};

typedef struct Geoposition Geoposition;
template<>
struct RefPtr<WebCore::Geoposition> {
	Geoposition *m_ptr;
};

typedef struct Geolocation {
	/*function-pointer*/ void **_field1;
	int _field2;
	HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field3;
	Watchers _field4;
	Frame *_field5;
	OwnPtr<WebCore::GeolocationService> _field6;
	RefPtr<WebCore::Geoposition> _field7;
	int _field8;
	bool _field9;
	RefPtr<WebCore::Geoposition> _field10;
	HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >,WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier> > > _field11;
} Geolocation;

template<>
struct RefPtr<WebCore::Geolocation> {
	Geolocation *m_ptr;
};

template<>
struct RefPtr<WebCore::Geolocation::GeoNotifier>;

template<>
struct pair<int,WTF::RefPtr<WebCore::Geolocation::GeoNotifier> >;

template<>
struct pair<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>,int>;

struct GeolocationService;

struct Geoposition;

typedef struct FileChooserClient FileChooserClient;

typedef struct Icon Icon;

template<>
struct RefPtr<WebCore::Icon> {
	Icon *m_ptr;
};

typedef struct FileChooser {
	int _field1;
	FileChooserClient *_field2;
	Vector<WTF::String,0ul> _field3;
	RefPtr<WebCore::Icon> _field4;
	bool _field5;
} FileChooser;

template<>
struct PassRefPtr<WebCore::FileChooser> {
	FileChooser *_field1;
};

struct MainResourceLoader;

template<>
struct RefPtr<WebCore::ResourceLoader>;

struct SharedBuffer;

struct TextResourceDecoder;

struct ResourceLoadTiming;

struct ResourceLoadInfo;

template<>
struct pair<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource> >;

typedef struct {
	/*function-pointer*/ void *__pfn;
	int __delta;
} XXStruct_GIci6C;

template<>
struct Timer<WebCore::DocumentLoader> {
	/*function-pointer*/ void **_vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	DocumentLoader *m_object;
	XXStruct_GIci6C m_function;
};

struct ArchiveResourceCollection;

template<>
struct EnumCallback<WebCore::IconLoadDecision>;

template<>
struct ObjectCallback<WebCore::SharedBuffer*>;

struct ApplicationCacheHost;

template<>
struct HashTable<long unsigned int,long unsigned int,WTF::IdentityExtractor<long unsigned int>,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int>,WTF::HashTraits<long unsigned int> > {
	unsigned long *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<long unsigned int,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int> > {
	HashTable<long unsigned int,long unsigned int,WTF::IdentityExtractor<long unsigned int>,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int>,WTF::HashTraits<long unsigned int> > m_impl;
};

@class WebDataSource;
typedef struct WebDocumentLoaderMac {
	/*function-pointer*/ void **_field1;
	int _field2;
	bool _field3;
	Frame *_field4;
	RefPtr<WebCore::MainResourceLoader> _field5;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field6;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field7;
	HashSet<WTF::RefPtr<WebCore::ResourceLoader>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> > > _field8;
	RefPtr<WebCore::SharedBuffer> _field9;
	DocumentWriter _field10;
	ResourceRequest _field11;
	SubstituteData _field12;
	ResourceRequest _field13;
	ResourceRequest _field14;
	ResourceResponse _field15;
	ResourceError _field16;
	bool _field17;
	bool _field18;
	bool _field19;
	bool _field20;
	bool _field21;
	bool _field22;
	bool _field23;
	StringWithDirection _field24;
	IconURL _field25[1];
	String _field26;
	NavigationAction _field27;
	ResourceRequest _field28;
	Vector<WebCore::ResourceResponse,0ul> _field29;
	bool _field30;
	HashMap<WTF::RefPtr<WebCore::ResourceLoader>,WTF::RefPtr<WebCore::SubstituteResource>,WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader> >,WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource> > > _field31;
	Timer<WebCore::DocumentLoader> _field32;
	OwnPtr<WebCore::ArchiveResourceCollection> _field33;
	RefPtr<WebCore::SharedBuffer> _field34;
	HashSet<WTF::String,WTF::StringHash,WTF::HashTraits<WTF::String> > _field35;
	Vector<WTF::String,0ul> _field36;
	String _field37;
	bool _field38;
	DocumentLoadTiming _field39;
	RefPtr<WebCore::EnumCallback<WebCore::IconLoadDecision> > _field40;
	RefPtr<WebCore::ObjectCallback<WebCore::SharedBuffer*> > _field41;
	bool _field42;
	OwnPtr<WebCore::ApplicationCacheHost> _field43;
	WebDataSource *_field44;
	bool _field45;
	RetainPtr<objc_object*> _field46;
	RetainPtr<objc_object*> _field47;
	HashSet<long unsigned int,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int> > _field48;
} WebDocumentLoaderMac;

template<>
struct PassRefPtr<WebCore::EditCommand> {
	EditCommand *_field1;
};

struct Element;

struct CompositeEditCommand;

template<>
struct ListHashSet<WTF::RefPtr<WebCore::Node>,256ul,WTF::PtrHash<WTF::RefPtr<WebCore::Node> > >;

template<>
struct OwnPtr<WTF::ListHashSet<WTF::RefPtr<WebCore::Node>, 256ul, WTF::PtrHash<WTF::RefPtr<WebCore::Node> > > > {
	ListHashSet<WTF::RefPtr<WebCore::Node>,256ul,WTF::PtrHash<WTF::RefPtr<WebCore::Node> > > *m_ptr;
};

typedef struct HitTestResult {
	RefPtr<WebCore::Node> _field1;
	RefPtr<WebCore::Node> _field2;
	IntPoint _field3;
	IntPoint _field4;
	RefPtr<WebCore::Element> _field5;
	RefPtr<WebCore::Scrollbar> _field6;
	bool _field7;
	bool _field8;
	int _field9;
	int _field10;
	int _field11;
	int _field12;
	OwnPtr<WTF::ListHashSet<WTF::RefPtr<WebCore::Node>, 256ul, WTF::PtrHash<WTF::RefPtr<WebCore::Node> > > > _field13;
} HitTestResult;

typedef struct OpaqueJSContext OpaqueJSContext;

template<>
struct Timer<WebCore::FrameLoader> {
	/*function-pointer*/ void **_vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	FrameLoader *m_object;
	XXStruct_GIci6C m_function;
};

typedef struct FrameLoader {
	/*function-pointer*/ void **_vptr$FrameLoader;
	Frame *m_frame;
	FrameLoaderClient *m_client;
	PolicyChecker m_policyChecker;
	HistoryController m_history;
	ResourceLoadNotifier m_notifer;
	SubframeLoader m_subframeLoader;
	FrameLoaderStateMachine m_stateMachine;
	int m_state;
	int m_loadType;
	RefPtr<WebCore::DocumentLoader> m_documentLoader;
	RefPtr<WebCore::DocumentLoader> m_provisionalDocumentLoader;
	RefPtr<WebCore::DocumentLoader> m_policyDocumentLoader;
	bool m_delegateIsHandlingProvisionalLoadError;
	bool m_quickRedirectComing;
	bool m_sentRedirectNotification;
	bool m_inStopAllLoaders;
	String m_outgoingReferrer;
	bool m_isExecutingJavaScriptFormAction;
	bool m_didCallImplicitClose;
	bool m_wasUnloadEventEmitted;
	bool m_pageDismissalEventBeingDispatched;
	bool m_isComplete;
	bool m_isLoadingMainResource;
	RefPtr<WebCore::SerializedScriptValue> m_pendingStateObject;
	KURL m_workingURL;
	OwnPtr<WebCore::IconLoader> m_iconLoader;
	bool m_mayLoadIconLater;
	bool m_needsClear;
	KURL m_submittedFormURL;
	Timer<WebCore::FrameLoader> m_checkTimer;
	bool m_shouldCallCheckCompleted;
	bool m_shouldCallCheckLoadComplete;
	Frame *m_opener;
	HashSet<WebCore::Frame*,WTF::PtrHash<WebCore::Frame*>,WTF::HashTraits<WebCore::Frame*> > m_openedFrames;
	bool m_didPerformFirstNavigation;
	bool m_loadingFromCachedPage;
	bool m_suppressOpenerInNewFrame;
	int m_sandboxFlags;
	int m_forcedSandboxFlags;
	RefPtr<WebCore::FrameNetworkingContext> m_networkingContext;
	KURL m_previousUrl;
	bool m_loadsSynchronously;
} FrameLoader;

template<>
struct Timer<WebCore::NavigationScheduler> {
	/*function-pointer*/ void **_vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	NavigationScheduler *m_object;
	XXStruct_GIci6C m_function;
};

typedef struct NavigationScheduler {
	Frame *m_frame;
	Timer<WebCore::NavigationScheduler> m_timer;
	OwnPtr<WebCore::ScheduledNavigation> m_redirect;
} NavigationScheduler;

template<>
struct Timer<WebCore::FrameSelection> {
	/*function-pointer*/ void **_vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	FrameSelection *m_object;
	XXStruct_GIci6C m_function;
};

typedef struct FrameSelection {
	IntRect m_caretLocalRect;
	bool m_caretRectNeedsUpdate;
	int m_caretVisibility;
	Frame *m_frame;
	int m_xPosForVerticalArrowNavigation;
	VisibleSelection m_selection;
	int m_granularity;
	RefPtr<WebCore::EditingStyle> m_typingStyle;
	Timer<WebCore::FrameSelection> m_caretBlinkTimer;
	IntRect m_absCaretBounds;
	IntRect m_absoluteCaretRepaintBounds;
	bool m_absCaretBoundsDirty;
	bool m_caretPaint;
	bool m_isDirectional;
	bool m_isCaretBlinkingSuspended;
	bool m_focused;
	bool m_updateAppearanceEnabled;
	bool m_caretBlinks;
	Color m_caretColor;
	int m_closeTypingSuppressions;
	int m_scrollingSuppressCount;
} FrameSelection;

template<>
struct Timer<WebCore::EventHandler> {
	/*function-pointer*/ void **_vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	EventHandler *m_object;
	XXStruct_GIci6C m_function;
};

@class WAKView;
typedef struct EventHandler {
	Frame *m_frame;
	bool m_mousePressed;
	bool m_capturesDragging;
	RefPtr<WebCore::Node> m_mousePressNode;
	bool m_mouseDownMayStartSelect;
	bool m_mouseDownWasSingleClickInSelection;
	bool m_beganSelectingText;
	IntPoint m_panScrollStartPos;
	bool m_panScrollInProgress;
	bool m_panScrollButtonPressed;
	bool m_springLoadedPanScrollInProgress;
	Timer<WebCore::EventHandler> m_hoverTimer;
	Timer<WebCore::EventHandler> m_autoscrollTimer;
	RenderObject *m_autoscrollRenderer;
	bool m_autoscrollInProgress;
	bool m_mouseDownMayStartAutoscroll;
	bool m_mouseDownWasInSubframe;
	Timer<WebCore::EventHandler> m_fakeMouseMoveEventTimer;
	bool m_svgPan;
	RefPtr<WebCore::SVGElementInstance> m_instanceUnderMouse;
	RefPtr<WebCore::SVGElementInstance> m_lastInstanceUnderMouse;
	RenderLayer *m_resizeLayer;
	RefPtr<WebCore::Node> m_capturingMouseEventsNode;
	bool m_eventHandlerWillResetCapturingMouseEventsNode;
	RefPtr<WebCore::Node> m_nodeUnderMouse;
	RefPtr<WebCore::Node> m_lastNodeUnderMouse;
	RefPtr<WebCore::Frame> m_lastMouseMoveEventSubframe;
	RefPtr<WebCore::Scrollbar> m_lastScrollbarUnderMouse;
	int m_clickCount;
	RefPtr<WebCore::Node> m_clickNode;
	float m_gestureInitialDiameter;
	float m_gestureLastDiameter;
	float m_gestureInitialRotation;
	float m_gestureLastRotation;
	unsigned m_firstTouchID;
	Vector<WTF::RefPtr<WebCore::Touch>,0ul> m_touches;
	HashSet<WTF::RefPtr<WebCore::EventTarget>,WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget> >,WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget> > > m_gestureTargets;
	RefPtr<WebCore::Frame> m_touchEventTargetSubframe;
	RefPtr<WebCore::HTMLFrameSetElement> m_frameSetBeingResized;
	IntSize m_offsetFromResizeCorner;
	IntPoint m_currentMousePosition;
	IntPoint m_mouseDownPos;
	double m_mouseDownTimestamp;
	PlatformMouseEvent m_mouseDown;
	bool m_useLatchedWheelEventNode;
	RefPtr<WebCore::Node> m_latchedWheelEventNode;
	bool m_widgetIsLatched;
	RefPtr<WebCore::Node> m_previousWheelScrolledNode;
	WAKView *m_mouseDownView;
	bool m_sendingEventToSubview;
} EventHandler;

template<>
struct Timer<WebCore::Frame> {
	/*function-pointer*/ void **_vptr$TimerBase;
	double m_nextFireTime;
	double m_repeatInterval;
	int m_heapIndex;
	unsigned m_heapInsertionOrder;
	Frame *m_object;
	XXStruct_GIci6C m_function;
};

typedef struct Frame {
	int _field1;
	HashSet<WebCore::FrameDestructionObserver*,WTF::PtrHash<WebCore::FrameDestructionObserver*>,WTF::HashTraits<WebCore::FrameDestructionObserver*> > _field2;
	Page *_field3;
	FrameTree _field4;
	FrameLoader _field5;
	NavigationScheduler _field6;
	RefPtr<WebCore::DOMWindow> _field7;
	HashSet<WebCore::DOMWindow*,WTF::PtrHash<WebCore::DOMWindow*>,WTF::HashTraits<WebCore::DOMWindow*> > _field8;
	HTMLFrameOwnerElement *_field9;
	RefPtr<WebCore::FrameView> _field10;
	RefPtr<WebCore::Document> _field11;
	ScriptController _field12;
	Editor _field13;
	FrameSelection _field14;
	EventHandler _field15;
	AnimationController _field16;
	Timer<WebCore::Frame> _field17;
	float _field18;
	IntPoint _field19;
	ViewportArguments _field20;
	bool _field21;
	VisibleSelection _field22;
	VisibleSelection _field23;
	FloatSize _field24;
	unsigned _field25;
	unsigned _field26;
	unsigned _field27;
	double _field28;
	double _field29;
	Timer<WebCore::Frame> _field30;
	float _field31;
	float _field32;
	float _field33;
	int _field34;
	bool _field35;
	bool _field36;
	bool _field37;
	bool _field38;
	int _field39;
} Frame;

typedef struct JSGlobalObject *JSGlobalObjectRef;

template<>
struct HashTable<JSC::JSGlobalObject*,JSC::JSGlobalObject*,WTF::IdentityExtractor<JSC::JSGlobalObject*>,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > {
	JSGlobalObjectRef *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<JSC::JSGlobalObject*,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > {
	HashTable<JSC::JSGlobalObject*,JSC::JSGlobalObject*,WTF::IdentityExtractor<JSC::JSGlobalObject*>,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > m_impl;
};

@class WebScriptCallFrame;
template<>
struct RetainPtr<WebScriptCallFrame> {
	WebScriptCallFrame *m_ptr;
};

typedef union EncodedValueDescriptor {
	long long asInt64;
	double asDouble;
	IntPoint asBits;
} EncodedValueDescriptor;

struct JSValue {
	union EncodedValueDescriptor u;
};

template<>
struct Strong<JSC::JSGlobalObject> {
	JSValue *m_slot;
};

typedef struct WebScriptDebugger {
	/*function-pointer*/ void **_field1;
	HashSet<JSC::JSGlobalObject*,WTF::PtrHash<JSC::JSGlobalObject*>,WTF::HashTraits<JSC::JSGlobalObject*> > _field2;
	bool _field3;
	RetainPtr<WebScriptCallFrame> _field4;
	Strong<JSC::JSGlobalObject> _field5;
	RetainPtr<WebScriptCallFrame> _field6;
} WebScriptDebugger;

template<>
struct pair<long long int,WTF::RetainPtr<NSMutableArray> >;

template<>
struct HashTable<long long int,std::pair<long long int, WTF::RetainPtr<NSMutableArray> >,WTF::PairFirstExtractor<std::pair<long long int, WTF::RetainPtr<NSMutableArray> > >,WTF::IntHash<long long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > >,WTF::HashTraits<long long int> > {
	pair<long long int,WTF::RetainPtr<NSMutableArray> > *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<long long int,WTF::RetainPtr<NSMutableArray>,WTF::IntHash<long long unsigned int>,WTF::HashTraits<long long int>,WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > {
	HashTable<long long int,std::pair<long long int, WTF::RetainPtr<NSMutableArray> >,WTF::PairFirstExtractor<std::pair<long long int, WTF::RetainPtr<NSMutableArray> > >,WTF::IntHash<long long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > >,WTF::HashTraits<long long int> > _field1;
};

template<>
struct HashTable<WebCore::Page*,WebCore::Page*,WTF::IdentityExtractor<WebCore::Page*>,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > {
	Page **_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WebCore::Page*,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > {
	HashTable<WebCore::Page*,WebCore::Page*,WTF::IdentityExtractor<WebCore::Page*>,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > _field1;
};

template<>
struct HashTable<long long unsigned int,long long unsigned int,WTF::IdentityExtractor<long long unsigned int>,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int>,WTF::HashTraits<long long unsigned int> > {
	unsigned long long *_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<long long unsigned int,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int> > {
	HashTable<long long unsigned int,long long unsigned int,WTF::IdentityExtractor<long long unsigned int>,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int>,WTF::HashTraits<long long unsigned int> > _field1;
};

struct StorageNamespace;

template<>
struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> >;

template<>
struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> > > {
	HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> > *_field1;
};

template<>
struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> >;

template<>
struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> > > {
	HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>,WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*,WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >,WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> > *_field1;
};

typedef struct GroupSettings GroupSettings;

template<>
struct OwnPtr<WebCore::GroupSettings> {
	GroupSettings *_field1;
};

struct PageGroup {
	struct String _field1;
	struct HashSet<WebCore::Page*,WTF::PtrHash<WebCore::Page*>,WTF::HashTraits<WebCore::Page*> > _field2;
	struct HashSet<long long unsigned int,WebCore::LinkHashHash,WTF::HashTraits<long long unsigned int> > _field3;
	bool _field4;
	unsigned _field5;
	struct RefPtr<WebCore::StorageNamespace> _field6;
	struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserScript>, 0ul>*> > > _field7;
	struct OwnPtr<WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld> >, WTF::HashTraits<WTF::Vector<WTF::OwnPtr<WebCore::UserStyleSheet>, 0ul>*> > > _field8;
	struct OwnPtr<WebCore::GroupSettings> _field9;
};

typedef struct EditorInternalCommand EditorInternalCommand;

typedef struct Command {
	EditorInternalCommand *_field1;
	int _field2;
	RefPtr<WebCore::Frame> _field3;
} Command;

typedef struct PlatformKeyboardEvent PlatformKeyboardEvent;
template<>
struct OwnPtr<WebCore::PlatformKeyboardEvent> {
	PlatformKeyboardEvent *_field1;
};

typedef struct KeypressCommand KeypressCommand;
template<>
struct VectorBuffer<WebCore::KeypressCommand,0ul> {
	KeypressCommand *_field1;
	unsigned _field2;
};

template<>
struct Vector<WebCore::KeypressCommand,0ul> {
	unsigned _field1;
	VectorBuffer<WebCore::KeypressCommand,0ul> _field2;
};

typedef struct KeyboardEvent {
	/*function-pointer*/ void **_field1;
	int _field2;
	AtomicString _field3;
	bool _field4;
	bool _field5;
	bool _field6;
	bool _field7;
	bool _field8;
	bool _field9;
	bool _field10;
	unsigned short _field11;
	EventTarget *_field12;
	RefPtr<WebCore::EventTarget> _field13;
	unsigned long long _field14;
	RefPtr<WebCore::Event> _field15;
	RefPtr<WebCore::DOMWindow> _field16;
	int _field17;
	unsigned _field18 : 1;
	unsigned _field19 : 1;
	unsigned _field20 : 1;
	unsigned _field21 : 1;
	OwnPtr<WebCore::PlatformKeyboardEvent> _field22;
	String _field23;
	unsigned _field24;
	unsigned _field25 : 1;
	Vector<WebCore::KeypressCommand,0ul> _field26;
} KeyboardEvent;

typedef struct WebHTMLViewInterpretKeyEventsParameters {
	KeyboardEvent *_field1;
	bool _field2;
	bool _field3;
	bool _field4;
	bool _field5;
} WebHTMLViewInterpretKeyEventsParameters;

typedef struct InjectedScriptManager InjectedScriptManager;
template<>
struct OwnPtr<WebCore::InjectedScriptManager> {
	InjectedScriptManager *m_ptr;
};

typedef struct InspectorResourceAgent InspectorResourceAgent;
template<>
struct RefPtr<WebCore::InspectorResourceAgent> {
	InspectorResourceAgent *m_ptr;
};

typedef struct InspectorState InspectorState;
template<>
struct OwnPtr<WebCore::InspectorState> {
	InspectorState *m_ptr;
};

typedef struct InspectorRuntimeAgent InspectorRuntimeAgent;
template<>
struct OwnPtr<WebCore::InspectorRuntimeAgent> {
	InspectorRuntimeAgent *m_ptr;
};

typedef struct InspectorAgent InspectorAgent;
template<>
struct OwnPtr<WebCore::InspectorAgent> {
	InspectorAgent *m_ptr;
};

typedef struct InspectorConsoleAgent InspectorConsoleAgent;
template<>
struct OwnPtr<WebCore::InspectorConsoleAgent> {
	InspectorConsoleAgent *m_ptr;
};

typedef struct InspectorPageAgent InspectorPageAgent;
template<>
struct OwnPtr<WebCore::InspectorPageAgent> {
	InspectorPageAgent *m_ptr;
};

typedef struct InspectorDebuggerAgent InspectorDebuggerAgent;
template<>
struct OwnPtr<WebCore::InspectorDebuggerAgent> {
	InspectorDebuggerAgent *m_ptr;
};

typedef struct InspectorDOMAgent InspectorDOMAgent;
template<>
struct OwnPtr<WebCore::InspectorDOMAgent> {
	InspectorDOMAgent *m_ptr;
};

typedef struct InspectorDOMDebuggerAgent InspectorDOMDebuggerAgent;
template<>
struct OwnPtr<WebCore::InspectorDOMDebuggerAgent> {
	InspectorDOMDebuggerAgent *m_ptr;
};

typedef struct InspectorCSSAgent InspectorCSSAgent;
template<>
struct OwnPtr<WebCore::InspectorCSSAgent> {
	InspectorCSSAgent *m_ptr;
};

typedef struct InspectorProfilerAgent InspectorProfilerAgent;
template<>
struct OwnPtr<WebCore::InspectorProfilerAgent> {
	InspectorProfilerAgent *m_ptr;
};

typedef struct InspectorDatabaseAgent InspectorDatabaseAgent;
template<>
struct OwnPtr<WebCore::InspectorDatabaseAgent> {
	InspectorDatabaseAgent *m_ptr;
};

typedef struct InspectorWorkerAgent InspectorWorkerAgent;
template<>
struct OwnPtr<WebCore::InspectorWorkerAgent> {
	InspectorWorkerAgent *m_ptr;
};

typedef struct InspectorDOMStorageAgent InspectorDOMStorageAgent;
template<>
struct OwnPtr<WebCore::InspectorDOMStorageAgent> {
	InspectorDOMStorageAgent *m_ptr;
};

typedef struct InspectorBackendDispatcher InspectorBackendDispatcher;
template<>
struct RefPtr<WebCore::InspectorBackendDispatcher> {
	InspectorBackendDispatcher *m_ptr;
};

typedef struct InspectorTimelineAgent InspectorTimelineAgent;
template<>
struct OwnPtr<WebCore::InspectorTimelineAgent> {
	InspectorTimelineAgent *m_ptr;
};

typedef struct InspectorFrontendClient InspectorFrontendClient;
template<>
struct OwnPtr<WebCore::InspectorFrontendClient> {
	InspectorFrontendClient *m_ptr;
};

typedef struct InstrumentingAgents InstrumentingAgents;
template<>
struct OwnPtr<WebCore::InstrumentingAgents> {
	InstrumentingAgents *m_ptr;
};

typedef struct InspectorApplicationCacheAgent InspectorApplicationCacheAgent;
template<>
struct OwnPtr<WebCore::InspectorApplicationCacheAgent> {
	InspectorApplicationCacheAgent *m_ptr;
};

typedef struct InspectorFrontend InspectorFrontend;
template<>
struct OwnPtr<WebCore::InspectorFrontend> {
	InspectorFrontend *m_ptr;
};

typedef struct InspectorClient InspectorClient;
struct InspectorController {
	struct OwnPtr<WebCore::InstrumentingAgents> _field1;
	struct OwnPtr<WebCore::InjectedScriptManager> _field2;
	struct OwnPtr<WebCore::InspectorState> _field3;
	struct OwnPtr<WebCore::InspectorAgent> _field4;
	struct OwnPtr<WebCore::InspectorPageAgent> _field5;
	struct OwnPtr<WebCore::InspectorDOMAgent> _field6;
	struct OwnPtr<WebCore::InspectorCSSAgent> _field7;
	struct OwnPtr<WebCore::InspectorDatabaseAgent> _field8;
	struct OwnPtr<WebCore::InspectorDOMStorageAgent> _field9;
	struct OwnPtr<WebCore::InspectorTimelineAgent> _field10;
	struct OwnPtr<WebCore::InspectorApplicationCacheAgent> _field11;
	struct RefPtr<WebCore::InspectorResourceAgent> _field12;
	struct OwnPtr<WebCore::InspectorRuntimeAgent> _field13;
	struct OwnPtr<WebCore::InspectorConsoleAgent> _field14;
	struct OwnPtr<WebCore::InspectorDebuggerAgent> _field15;
	struct OwnPtr<WebCore::InspectorDOMDebuggerAgent> _field16;
	struct OwnPtr<WebCore::InspectorProfilerAgent> _field17;
	struct OwnPtr<WebCore::InspectorWorkerAgent> _field18;
	struct RefPtr<WebCore::InspectorBackendDispatcher> _field19;
	struct OwnPtr<WebCore::InspectorFrontendClient> _field20;
	struct OwnPtr<WebCore::InspectorFrontend> _field21;
	struct Page *_field22;
	struct InspectorClient *_field23;
	bool _field24;
	bool _field25;
};

typedef struct ExecState ExecState;

typedef struct InspectorFrontendHost InspectorFrontendHost;

template<>
struct RefPtr<WebCore::InspectorFrontendHost> {
	InspectorFrontendHost *m_ptr;
};

struct Settings;

template<>
struct OwnPtr<WebCore::InspectorFrontendClientLocal::Settings> {
	Settings *m_ptr;
};

@class WebView;
typedef struct WebInspectorFrontendClient {
	/*function-pointer*/ void **_field1;
	InspectorController *_field2;
	Page *_field3;
	ExecState *_field4;
	RefPtr<WebCore::InspectorFrontendHost> _field5;
	OwnPtr<WebCore::InspectorFrontendClientLocal::Settings> _field6;
	WebView *_field7;
	RetainPtr<WebInspectorWindowController> _field8;
	String _field9;
} WebInspectorFrontendClient;

struct InstrumentingAgents;

struct InjectedScriptManager;

struct InspectorState;

struct InspectorAgent;

struct InspectorPageAgent;

struct InspectorDOMAgent;

struct InspectorCSSAgent;

struct InspectorDatabaseAgent;

struct InspectorDOMStorageAgent;

struct InspectorTimelineAgent;

struct InspectorApplicationCacheAgent;

struct InspectorResourceAgent;

struct InspectorRuntimeAgent;

struct InspectorConsoleAgent;

struct InspectorDebuggerAgent;

struct InspectorDOMDebuggerAgent;

struct InspectorProfilerAgent;

struct InspectorWorkerAgent;

struct InspectorBackendDispatcher;

struct InspectorFrontendClient;

struct InspectorFrontend;

struct InspectorClient;

struct ScrollAnimator;

struct RenderBoxModelObject;

template<>
struct Vector<WebCore::RenderLayer*,0ul>;

struct ClipRects;

struct RenderMarquee;

struct TransformationMatrix;

struct RenderReplica;

struct RenderScrollbarPart;

struct RenderLayerBacking;

template<>
struct PassRefPtr<WebCore::ArchiveResource> {
	ArchiveResource *_field1;
};

typedef struct DebuggerCallFrame {
	ExecState *_field1;
	JSValue _field2;
} DebuggerCallFrame;

template<>
struct pair<WTF::StringImpl*,JSC::Weak<JSC::JSString> >;
template<>
struct HashTable<WTF::StringImpl*,std::pair<WTF::StringImpl*, JSC::Weak<JSC::JSString> >,WTF::PairFirstExtractor<std::pair<WTF::StringImpl*, JSC::Weak<JSC::JSString> > >,WTF::StringHash,WTF::PairHashTraits<WTF::HashTraits<WTF::StringImpl*>, WTF::HashTraits<JSC::Weak<JSC::JSString> > >,WTF::HashTraits<WTF::StringImpl*> > {
	pair<WTF::StringImpl*,JSC::Weak<JSC::JSString> > *_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<WTF::StringImpl*,JSC::Weak<JSC::JSString>,WTF::StringHash,WTF::HashTraits<WTF::StringImpl*>,WTF::HashTraits<JSC::Weak<JSC::JSString> > > {
	HashTable<WTF::StringImpl*,std::pair<WTF::StringImpl*, JSC::Weak<JSC::JSString> >,WTF::PairFirstExtractor<std::pair<WTF::StringImpl*, JSC::Weak<JSC::JSString> > >,WTF::StringHash,WTF::PairHashTraits<WTF::HashTraits<WTF::StringImpl*>, WTF::HashTraits<JSC::Weak<JSC::JSString> > >,WTF::HashTraits<WTF::StringImpl*> > _field1;
};

template<>
struct pair<WebCore::CSSValue*,void*>;
template<>
struct HashTable<WebCore::CSSValue*,std::pair<WebCore::CSSValue*, void*>,WTF::PairFirstExtractor<std::pair<WebCore::CSSValue*, void*> >,WTF::PtrHash<WebCore::CSSValue*>,WTF::PairHashTraits<WTF::HashTraits<WebCore::CSSValue*>, WTF::HashTraits<void*> >,WTF::HashTraits<WebCore::CSSValue*> > {
	pair<WebCore::CSSValue*,void*> *_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<WebCore::CSSValue*,void*,WTF::PtrHash<WebCore::CSSValue*>,WTF::HashTraits<WebCore::CSSValue*>,WTF::HashTraits<void*> > {
	HashTable<WebCore::CSSValue*,std::pair<WebCore::CSSValue*, void*>,WTF::PairFirstExtractor<std::pair<WebCore::CSSValue*, void*> >,WTF::PtrHash<WebCore::CSSValue*>,WTF::PairHashTraits<WTF::HashTraits<WebCore::CSSValue*>, WTF::HashTraits<void*> >,WTF::HashTraits<WebCore::CSSValue*> > _field1;
};

template<>
struct HashTable<WebCore::ScriptController*,WebCore::ScriptController*,WTF::IdentityExtractor<WebCore::ScriptController*>,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > {
	ScriptController **_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashSet<WebCore::ScriptController*,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > {
	HashTable<WebCore::ScriptController*,WebCore::ScriptController*,WTF::IdentityExtractor<WebCore::ScriptController*>,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > _field1;
};

typedef struct DOMWrapperWorld DOMWrapperWorld;
typedef struct JSDOMWrapperOwner {
	/*function-pointer*/ void **_field1;
	DOMWrapperWorld *_field2;
} JSDOMWrapperOwner;

typedef struct JSStringOwner {
	/*function-pointer*/ void **_field1;
	DOMWrapperWorld *_field2;
} JSStringOwner;

template<>
struct pair<void*,JSC::Weak<WebCore::JSDOMWrapper> >;
template<>
struct HashTable<void*,std::pair<void*, JSC::Weak<WebCore::JSDOMWrapper> >,WTF::PairFirstExtractor<std::pair<void*, JSC::Weak<WebCore::JSDOMWrapper> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper> > >,WTF::HashTraits<void*> > {
	pair<void*,JSC::Weak<WebCore::JSDOMWrapper> > *_field1;
	int _field2;
	int _field3;
	int _field4;
	int _field5;
};

template<>
struct HashMap<void*,JSC::Weak<WebCore::JSDOMWrapper>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper> > > {
	HashTable<void*,std::pair<void*, JSC::Weak<WebCore::JSDOMWrapper> >,WTF::PairFirstExtractor<std::pair<void*, JSC::Weak<WebCore::JSDOMWrapper> > >,WTF::PtrHash<void*>,WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper> > >,WTF::HashTraits<void*> > _field1;
};

typedef struct JSGlobalData *JSGlobalDataRef;
struct DOMWrapperWorld {
	int _field1;
	struct HashMap<void*,JSC::Weak<WebCore::JSDOMWrapper>,WTF::PtrHash<void*>,WTF::HashTraits<void*>,WTF::HashTraits<JSC::Weak<WebCore::JSDOMWrapper> > > _field2;
	struct HashMap<WTF::StringImpl*,JSC::Weak<JSC::JSString>,WTF::StringHash,WTF::HashTraits<WTF::StringImpl*>,WTF::HashTraits<JSC::Weak<JSC::JSString> > > _field3;
	struct HashMap<WebCore::CSSValue*,void*,WTF::PtrHash<WebCore::CSSValue*>,WTF::HashTraits<WebCore::CSSValue*>,WTF::HashTraits<void*> > _field4;
	JSGlobalDataRef _field5;
	struct HashSet<WebCore::ScriptController*,WTF::PtrHash<WebCore::ScriptController*>,WTF::HashTraits<WebCore::ScriptController*> > _field6;
	bool _field7;
	struct JSDOMWrapperOwner _field8;
	struct JSStringOwner _field9;
};

template<>
struct PassRefPtr<WebCore::DOMWrapperWorld> {
	DOMWrapperWorld *_field1;
};

template<>
struct RefPtr<WebCore::DOMWrapperWorld> {
	DOMWrapperWorld *m_ptr;
};

typedef struct OpaqueJSValue OpaqueJSValue;

typedef struct TextIterator TextIterator;

template<>
struct OwnPtr<WebCore::TextIterator> {
	TextIterator *m_ptr;
};

typedef struct UserContentURLPattern {
	bool m_invalid;
	String m_scheme;
	String m_host;
	String m_path;
	bool m_matchSubdomains;
} UserContentURLPattern;

typedef struct WebResourceDelegateImplementationCache {
	/*function-pointer*/ void *didCancelAuthenticationChallengeFunc;
	/*function-pointer*/ void *didReceiveAuthenticationChallengeFunc;
	/*function-pointer*/ void *canAuthenticateAgainstProtectionSpaceFunc;
	/*function-pointer*/ void *connectionPropertiesFunc;
	/*function-pointer*/ void *webThreadDidFinishLoadingFromDataSourceFunc;
	/*function-pointer*/ void *webThreadDidFailLoadingWithErrorFromDataSourceFunc;
	/*function-pointer*/ void *webThreadIdentifierForRequestFunc;
	/*function-pointer*/ void *webThreadDidLoadResourceFromMemoryCacheFunc;
	/*function-pointer*/ void *webThreadWillSendRequestFunc;
	/*function-pointer*/ void *webThreadDidReceiveResponseFunc;
	/*function-pointer*/ void *webThreadDidReceiveContentLengthFunc;
	/*function-pointer*/ void *webThreadWillCacheResponseFunc;
	/*function-pointer*/ void *identifierForRequestFunc;
	/*function-pointer*/ void *willSendRequestFunc;
	/*function-pointer*/ void *didReceiveResponseFunc;
	/*function-pointer*/ void *didReceiveContentLengthFunc;
	/*function-pointer*/ void *didFinishLoadingFromDataSourceFunc;
	/*function-pointer*/ void *didFailLoadingWithErrorFromDataSourceFunc;
	/*function-pointer*/ void *didLoadResourceFromMemoryCacheFunc;
	/*function-pointer*/ void *willCacheResponseFunc;
	/*function-pointer*/ void *plugInFailedWithErrorFunc;
	/*function-pointer*/ void *shouldUseCredentialStorageFunc;
	/*function-pointer*/ void *shouldPaintBrokenImageForURLFunc;
} WebResourceDelegateImplementationCache;

typedef struct WebFrameLoadDelegateImplementationCache {
	/*function-pointer*/ void *didClearWindowObjectForFrameFunc;
	/*function-pointer*/ void *didClearWindowObjectForFrameInScriptWorldFunc;
	/*function-pointer*/ void *didClearInspectorWindowObjectForFrameFunc;
	/*function-pointer*/ void *windowScriptObjectAvailableFunc;
	/*function-pointer*/ void *didHandleOnloadEventsForFrameFunc;
	/*function-pointer*/ void *didReceiveServerRedirectForProvisionalLoadForFrameFunc;
	/*function-pointer*/ void *didCancelClientRedirectForFrameFunc;
	/*function-pointer*/ void *willPerformClientRedirectToURLDelayFireDateForFrameFunc;
	/*function-pointer*/ void *didChangeLocationWithinPageForFrameFunc;
	/*function-pointer*/ void *didPushStateWithinPageForFrameFunc;
	/*function-pointer*/ void *didReplaceStateWithinPageForFrameFunc;
	/*function-pointer*/ void *didPopStateWithinPageForFrameFunc;
	/*function-pointer*/ void *willCloseFrameFunc;
	/*function-pointer*/ void *didStartProvisionalLoadForFrameFunc;
	/*function-pointer*/ void *didReceiveTitleForFrameFunc;
	/*function-pointer*/ void *didCommitLoadForFrameFunc;
	/*function-pointer*/ void *didFailProvisionalLoadWithErrorForFrameFunc;
	/*function-pointer*/ void *didFailLoadWithErrorForFrameFunc;
	/*function-pointer*/ void *didFinishLoadForFrameFunc;
	/*function-pointer*/ void *didFirstLayoutInFrameFunc;
	/*function-pointer*/ void *didFirstVisuallyNonEmptyLayoutInFrameFunc;
	/*function-pointer*/ void *didFinishDocumentLoadForFrameFunc;
	/*function-pointer*/ void *didDisplayInsecureContentFunc;
	/*function-pointer*/ void *didRunInsecureContentFunc;
} WebFrameLoadDelegateImplementationCache;

typedef struct WebScriptDebugDelegateImplementationCache {
	BOOL didParseSourceExpectsBaseLineNumber;
	BOOL exceptionWasRaisedExpectsHasHandlerFlag;
	/*function-pointer*/ void *didParseSourceFunc;
	/*function-pointer*/ void *failedToParseSourceFunc;
	/*function-pointer*/ void *didEnterCallFrameFunc;
	/*function-pointer*/ void *willExecuteStatementFunc;
	/*function-pointer*/ void *willLeaveCallFrameFunc;
	/*function-pointer*/ void *exceptionWasRaisedFunc;
} WebScriptDebugDelegateImplementationCache;

typedef struct WebHistoryDelegateImplementationCache {
	/*function-pointer*/ void *navigatedFunc;
	/*function-pointer*/ void *clientRedirectFunc;
	/*function-pointer*/ void *serverRedirectFunc;
	/*function-pointer*/ void *setTitleFunc;
	/*function-pointer*/ void *populateVisitedLinksFunc;
} WebHistoryDelegateImplementationCache;

template<>
struct pair<long unsigned int,WTF::RetainPtr<objc_object*> >;

template<>
struct HashTable<long unsigned int,std::pair<long unsigned int, WTF::RetainPtr<objc_object*> >,WTF::PairFirstExtractor<std::pair<long unsigned int, WTF::RetainPtr<objc_object*> > >,WTF::IntHash<long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*> > >,WTF::HashTraits<long unsigned int> > {
	pair<long unsigned int,WTF::RetainPtr<objc_object*> > *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<long unsigned int,WTF::RetainPtr<objc_object*>,WTF::IntHash<long unsigned int>,WTF::HashTraits<long unsigned int>,WTF::HashTraits<WTF::RetainPtr<objc_object*> > > {
	HashTable<long unsigned int,std::pair<long unsigned int, WTF::RetainPtr<objc_object*> >,WTF::PairFirstExtractor<std::pair<long unsigned int, WTF::RetainPtr<objc_object*> > >,WTF::IntHash<long unsigned int>,WTF::PairHashTraits<WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*> > >,WTF::HashTraits<long unsigned int> > m_impl;
};

typedef struct WebObjectInternal WebObjectInternal;

typedef struct DeviceOrientation DeviceOrientation;

template<>
struct RefPtr<WebCore::DeviceOrientation> {
	DeviceOrientation *m_ptr;
};

template<>
struct PassRefPtr<WebCore::DeviceOrientation> {
	DeviceOrientation *_field1;
};

typedef struct DeviceOrientationClientMock DeviceOrientationClientMock;

template<>
struct OwnPtr<WebCore::DeviceOrientationClientMock> {
	DeviceOrientationClientMock *m_ptr;
};

typedef struct DeviceOrientationController DeviceOrientationController;

@class GeolocationCoreLocationDelegate;
template<>
struct RetainPtr<GeolocationCoreLocationDelegate> {
	GeolocationCoreLocationDelegate *m_ptr;
};

typedef struct GeolocationLink GeolocationLink;

template<>
struct HashTable<WebCore::GeolocationLink*,WebCore::GeolocationLink*,WTF::IdentityExtractor<WebCore::GeolocationLink*>,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > {
	GeolocationLink **m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashSet<WebCore::GeolocationLink*,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > {
	HashTable<WebCore::GeolocationLink*,WebCore::GeolocationLink*,WTF::IdentityExtractor<WebCore::GeolocationLink*>,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > m_impl;
};

typedef struct PositionError PositionError;

template<>
struct RefPtr<WebCore::PositionError> {
	PositionError *m_ptr;
};

typedef struct GeolocationManager {
	RetainPtr<GeolocationCoreLocationDelegate> _field1;
	HashSet<WebCore::GeolocationLink*,WTF::PtrHash<WebCore::GeolocationLink*>,WTF::HashTraits<WebCore::GeolocationLink*> > _field2;
	bool _field3;
	RefPtr<WebCore::Geoposition> _field4;
	RefPtr<WebCore::PositionError> _field5;
} GeolocationManager;

template<>
struct pair<WTF::RetainPtr<CALayer>,LayerInfo>;

template<>
struct HashTable<WTF::RetainPtr<CALayer>,std::pair<WTF::RetainPtr<CALayer>, LayerInfo>,WTF::PairFirstExtractor<std::pair<WTF::RetainPtr<CALayer>, LayerInfo> >,WTF::PtrHash<WTF::RetainPtr<CALayer> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RetainPtr<CALayer> >, WTF::HashTraits<LayerInfo> >,WTF::HashTraits<WTF::RetainPtr<CALayer> > > {
	pair<WTF::RetainPtr<CALayer>,LayerInfo> *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<WTF::RetainPtr<CALayer>,LayerInfo,WTF::PtrHash<WTF::RetainPtr<CALayer> >,WTF::HashTraits<WTF::RetainPtr<CALayer> >,WTF::HashTraits<LayerInfo> > {
	HashTable<WTF::RetainPtr<CALayer>,std::pair<WTF::RetainPtr<CALayer>, LayerInfo>,WTF::PairFirstExtractor<std::pair<WTF::RetainPtr<CALayer>, LayerInfo> >,WTF::PtrHash<WTF::RetainPtr<CALayer> >,WTF::PairHashTraits<WTF::HashTraits<WTF::RetainPtr<CALayer> >, WTF::HashTraits<LayerInfo> >,WTF::HashTraits<WTF::RetainPtr<CALayer> > > m_impl;
};

typedef struct WebFixedPositionContentData {
	WebView *_field1;
	HashMap<WTF::RetainPtr<CALayer>,LayerInfo,WTF::PtrHash<WTF::RetainPtr<CALayer> >,WTF::HashTraits<WTF::RetainPtr<CALayer> >,WTF::HashTraits<LayerInfo> > _field2;
} WebFixedPositionContentData;

template<>
struct pair<unsigned int,WebInspectorClient*>;

template<>
struct HashTable<unsigned int,std::pair<unsigned int, WebInspectorClient*>,WTF::PairFirstExtractor<std::pair<unsigned int, WebInspectorClient*> >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WebInspectorClient*> >,WTF::HashTraits<unsigned int> > {
	pair<unsigned int,WebInspectorClient*> *m_table;
	int m_tableSize;
	int m_tableSizeMask;
	int m_keyCount;
	int m_deletedCount;
};

template<>
struct HashMap<unsigned int,WebInspectorClient*,WTF::IntHash<unsigned int>,WTF::HashTraits<unsigned int>,WTF::HashTraits<WebInspectorClient*> > {
	HashTable<unsigned int,std::pair<unsigned int, WebInspectorClient*>,WTF::PairFirstExtractor<std::pair<unsigned int, WebInspectorClient*> >,WTF::IntHash<unsigned int>,WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<WebInspectorClient*> >,WTF::HashTraits<unsigned int> > m_impl;
};

// iOSOpenDev: wrapped with define check (since occurs in other dumped files)
#ifndef __xpc_connection_s__
#define __xpc_connection_s__ 1
typedef struct _xpc_connection_s xpc_connection_s;
#endif

typedef struct BackForwardListImpl BackForwardListImpl;

template<>
struct PassRefPtr<WebCore::BackForwardListImpl> {
	BackForwardListImpl *_field1;
};

template<>
struct PassRefPtr<WebDocumentLoaderMac> {
	WebDocumentLoaderMac *_field1;
};

typedef struct __GSFont *GSFontRef;

template<>
struct HashSet<WTF::RefPtr<WebCore::SchedulePair>,WebCore::SchedulePairHash,WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair> > >;

struct Chrome;

struct DragCaretController;

struct FocusController;

struct ProgressTracker;

struct BackForwardController;

struct PluginData;

struct RenderTheme;

struct EditorClient;

struct Debugger;

struct PluginHalter;

template<>
struct HashSet<WebCore::ScrollableArea*,WTF::PtrHash<WebCore::ScrollableArea*>,WTF::HashTraits<WebCore::ScrollableArea*> >;

template<>
struct PassRefPtr<WebCore::Frame> {
	Frame *_field1;
};

struct ContainerNode;

struct QualifiedNameImpl;

struct NamedNodeMap;

struct CSSMutableStyleDeclaration;

typedef struct VisiblePosition {
	Position _field1;
	int _field2;
} VisiblePosition;

typedef struct RangeBoundaryPoint {
	RefPtr<WebCore::Node> _field1;
	int _field2;
	Node *_field3;
} RangeBoundaryPoint;

typedef struct Range {
	int _field1;
	RefPtr<WebCore::Document> _field2;
	RangeBoundaryPoint _field3;
	RangeBoundaryPoint _field4;
} Range;

template<>
struct PassRefPtr<WebCore::Range> {
	Range *_field1;
};

template<>
struct VectorBuffer<WebCore::Node*,0ul> {
	Node **_field1;
	unsigned _field2;
};

template<>
struct Vector<WebCore::Node*,0ul> {
	unsigned _field1;
	VectorBuffer<WebCore::Node*,0ul> _field2;
};

template<>
struct PassRefPtr<WebCore::HistoryItem> {
	HistoryItem *_field1;
};

struct EventTarget;

struct PlatformKeyboardEvent;

struct KeypressCommand;

template<>
struct pair<void*,JSC::Weak<WebCore::JSDOMWrapper> >;

template<>
struct pair<WTF::StringImpl*,JSC::Weak<JSC::JSString> >;

template<>
struct pair<WebCore::CSSValue*,void*>;

struct JSGlobalData;

struct CachedPage;

template<>
struct HashMap<WTF::String,WTF::RetainPtr<objc_object*>,WTF::StringHash,WTF::HashTraits<WTF::String>,WTF::HashTraits<WTF::RetainPtr<objc_object*> > >;

typedef struct SecurityOrigin {
	int _field1;
	int _field2;
	String _field3;
	String _field4;
	String _field5;
	String _field6;
	String _field7;
	unsigned short _field8;
	bool _field9;
	bool _field10;
	bool _field11;
	bool _field12;
	bool _field13;
} SecurityOrigin;


