/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/iPodUI.framework/iPodUI
 */

#import <iPodUI/XXUnknownSuperclass.h>
#import <iPodUI/iPodUI-Structs.h>
#import <iPodUI/NSCoding.h>
#import <iPodUI/NSCopying.h>

@class NSString;

@interface IUMediaEntitySpecifier : XXUnknownSuperclass <NSCoding, NSCopying> {
	NSString *_artist;	// 4 = 0x4
	CollectionPropertySpecifier _album;	// 8 = 0x8
	NSString *_genre;	// 20 = 0x14
	NSString *_composer;	// 24 = 0x18
	NSString *_podcast;	// 28 = 0x1c
	NSString *_playlist;	// 32 = 0x20
	unsigned long long _itemPersistentID;	// 36 = 0x24
	unsigned long long _persistentPlaylistUID;	// 44 = 0x2c
	unsigned _compilation : 1;	// 52 = 0x34
	unsigned _albumIsAudioBook : 1;	// 52 = 0x34
	unsigned _albumIsITunesU : 1;	// 52 = 0x34
	unsigned _audibleAudioBook : 1;	// 52 = 0x34
	int _movieEntityAllowedFileType;	// 56 = 0x38
}
@property(readonly, assign, nonatomic) BOOL hasAlbumSpecifier;	// G=0xa310d; 
@property(readonly, assign, nonatomic) NSString *titleForDerivatives;	// G=0xa314d; 
@property(readonly, assign, nonatomic) unsigned long long specifiedPlaylistPersistentUID;	// G=0xa3135; 
@property(readonly, assign, nonatomic) NSString *playlistNameOfSpecifiedPlaylist;	// G=0xa2fb5; 
@property(readonly, assign, nonatomic) IUMediaEntitySpecifier *mediaEntitySpecifierByRemovingTopLevel;	// G=0xa2f3d; 
+ (id)mediaQueryWithEntitiesOfType:(int)type givenSpecifier:(id)specifier;	// 0xa2299
+ (id)mediaEntitySpecifierForMediaItem:(id)mediaItem;	// 0xa2229
+ (id)mediaEntitySpecifierWithPlaylistPersistentUID:(unsigned long long)playlistPersistentUID;	// 0xa218d
+ (id)mediaEntitySpecifierWithCompilationString:(id)compilationString baseMediaQuery:(id)query;	// 0xa20f5
+ (id)_mediaEntitySpecifierWithArtist:(id)artist albumPID:(unsigned long long)pid baseMediaQuery:(id)query;	// 0xa20bd
+ (id)mediaEntitySpecifierWithArtist:(id)artist albumString:(id)string baseMediaQuery:(id)query;	// 0xa2009
+ (id)mediaEntitySpecifierForAudibleAudioBooks;	// 0xa1fb1
+ (id)mediaEntitySpecifierWithAudioBook:(id)audioBook;	// 0xa1f1d
+ (id)mediaEntitySpecifierWithPodcast:(id)podcast;	// 0xa1e9d
+ (id)mediaEntitySpecifierForAlbumWithItemsQuery:(id)itemsQuery;	// 0xa1c05
+ (BOOL)isMediaEntityTypeGroupedByDefault:(int)aDefault;	// 0xa1be9
+ (void)initialize;	// 0xa0d19
- (void)_lookupPlaylistNameIfNecessary;	// 0xa3249
// declared property getter: - (id)titleForDerivatives;	// 0xa314d
// declared property getter: - (unsigned long long)specifiedPlaylistPersistentUID;	// 0xa3135
// declared property getter: - (BOOL)hasAlbumSpecifier;	// 0xa310d
- (id)albumNameOfSpecifiedAlbum;	// 0xa2fdd
// declared property getter: - (id)playlistNameOfSpecifiedPlaylist;	// 0xa2fb5
// declared property getter: - (id)mediaEntitySpecifierByRemovingTopLevel;	// 0xa2f3d
- (id)description;	// 0xa1a8d
- (BOOL)isEqual:(id)equal;	// 0xa1829
- (id)copyWithZone:(NSZone *)zone;	// 0xa167d
- (id)initWithCoder:(id)coder;	// 0xa13b1
- (void)encodeWithCoder:(id)coder;	// 0xa114d
- (void)dealloc;	// 0xa109d
- (id)_initWithMediaQuery:(id)mediaQuery;	// 0xa0d59
@end
