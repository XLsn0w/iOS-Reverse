/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

#import <AVConference/AVConference-Structs.h>
#import <AVConference/VCCallSessionDelegate.h>
#import <AVConference/GKNATObserverDelegate.h>
#import <AVConference/XXUnknownSuperclass.h>
#import <AVConference/VideoConference.h>

@class NSLock, GKNATObserver, NSString, NSObject, NSMutableDictionary, NSArray, VCCallSession, CALayer, VideoConferenceManager, VideoAttributes;
@protocol VideoConferenceRealTimeChannel, VideoConferenceSpeakingDelegate, VideoCaptureProtocol, VideoConferenceNotificationObserver, VideoConferenceChannelQualityDelegate, VideoConferenceDelegate;

@interface VideoConference : XXUnknownSuperclass {
	NSObject<VideoConferenceDelegate> *delegate;	// 4 = 0x4
	NSLock *delegateLock;	// 8 = 0x8
	VideoConferenceManager *manager;	// 12 = 0xc
	opaque_pthread_rwlock_t stateLock;	// 16 = 0x10
	NSMutableDictionary *sessionDict;	// 144 = 0x90
	NSArray *sessionArray;	// 148 = 0x94
	BOOL outputMeteringEnabled;	// 152 = 0x98
	BOOL inputMeteringEnabled;	// 153 = 0x99
	float outputMeterLevel;	// 156 = 0x9c
	float inputMeterLevel;	// 160 = 0xa0
	BOOL microphoneMuted;	// 164 = 0xa4
	NSObject<VideoConferenceRealTimeChannel> *rtChannel;	// 168 = 0xa8
	dispatch_queue_s *managerQueue;	// 172 = 0xac
	NSObject<VideoCaptureProtocol> *avCapture;	// 176 = 0xb0
	dispatch_queue_s *avCaptureQueue;	// 180 = 0xb4
	void *localVideoLayer;	// 184 = 0xb8
	void *localVideoBackLayer;	// 188 = 0xbc
	void *remoteVideoLayer;	// 192 = 0xc0
	void *remoteVideoBackLayer;	// 196 = 0xc4
	int localVideoSlot;	// 200 = 0xc8
	int remoteVideoSlot;	// 204 = 0xcc
	int localVideoSlotBack;	// 208 = 0xd0
	int remoteVideoSlotBack;	// 212 = 0xd4
	CALayer *localVideoSubLayer;	// 216 = 0xd8
	CALayer *remoteVideoSubLayer;	// 220 = 0xdc
	CALayer *remoteVideoSubLayerBack;	// 224 = 0xe0
	CAImageQueueRef localCAImageQueue;	// 228 = 0xe4
	CAImageQueueRef localCAImageQueueBack;	// 232 = 0xe8
	CAImageQueueRef remoteCAImageQueue;	// 236 = 0xec
	CAImageQueueRef remoteCAImageQueueBack;	// 240 = 0xf0
	OpaqueFigImageQueue *localVideoImageQueue;	// 244 = 0xf4
	OpaqueFigImageQueue *localVideoImageQueueBack;	// 248 = 0xf8
	OpaqueFigImageQueue *remoteVideoImageQueue;	// 252 = 0xfc
	OpaqueFigImageQueue *remoteVideoImageQueueBack;	// 256 = 0x100
	OpaqueVTPixelTransferSession *vtTransferSession;	// 260 = 0x104
	CVPixelBufferPoolRef previewBufferPool;	// 264 = 0x108
	int localFrameWidth;	// 268 = 0x10c
	int localFrameHeight;	// 272 = 0x110
	int remoteFrameWidth;	// 276 = 0x114
	int remoteFrameHeight;	// 280 = 0x118
	tagHANDLE *hVR;	// 284 = 0x11c
	tagHANDLE *hVT;	// 288 = 0x120
	BOOL isRecvVideo;	// 292 = 0x124
	int iSoundBytes;	// 296 = 0x128
	double dAudioHostTime;	// 300 = 0x12c
	opaque_pthread_mutex_t xLocalLayer;	// 308 = 0x134
	opaque_pthread_mutex_t xRemoteLayer;	// 352 = 0x160
	opaque_pthread_mutex_t xAudioTS;	// 396 = 0x18c
	unsigned dwAudioTS;	// 440 = 0x1b8
	BOOL forceNoICE;	// 444 = 0x1bc
	BOOL useViceroyBlobFormat;	// 445 = 0x1bd
	int chatMode;	// 448 = 0x1c0
	BOOL isFocus;	// 452 = 0x1c4
	NSString *currentFocus;	// 456 = 0x1c8
	VCCallSession *currentFocusSession;	// 460 = 0x1cc
	BOOL hasMic;	// 464 = 0x1d0
	float conferenceVolume;	// 468 = 0x1d4
	NSArray *mutedPeers;	// 472 = 0x1d8
	NSArray *connectedPeers;	// 476 = 0x1dc
	unsigned talkingPeersLimit;	// 480 = 0x1e0
	unsigned char speakingArray[16];	// 484 = 0x1e4
	NSObject<VideoConferenceSpeakingDelegate> *speakingDelegate;	// 500 = 0x1f4
	NSObject<VideoConferenceChannelQualityDelegate> *qualityDelegate;	// 504 = 0x1f8
	float longTerm;	// 508 = 0x1fc
	float shortTerm;	// 512 = 0x200
	BOOL isTalking;	// 516 = 0x204
	unsigned talkTime;	// 520 = 0x208
	int packetsPerBundle;	// 524 = 0x20c
	double recvRTPTimeStamp;	// 528 = 0x210
	int recvRTPBytes;	// 536 = 0x218
	BOOL disableVAD;	// 540 = 0x21c
	BOOL forceHWICheck;	// 541 = 0x21d
	BOOL receivedFirstRemoteFrame;	// 542 = 0x21e
	BOOL receivedFirstPreviewFrame;	// 543 = 0x21f
	BOOL isAttemptingRelay;	// 544 = 0x220
	BOOL requiresWifi;	// 545 = 0x221
	CFStringRef forceHWI;	// 548 = 0x224
	CFStringRef forceNOLOG;	// 552 = 0x228
	unsigned preferredCodec;	// 556 = 0x22c
	NSObject<VideoConferenceNotificationObserver> *genericObserver;	// 560 = 0x230
	int upstreamBandwidth;	// 564 = 0x234
	int downstreamBandwidth;	// 568 = 0x238
	CGRect remoteVideoVisibleRect;	// 572 = 0x23c
	BOOL useComplexRendering;	// 588 = 0x24c
	BOOL useAFRC;	// 589 = 0x24d
	BOOL isGKVoiceChat;	// 590 = 0x24e
	BOOL isUsingSuppression;	// 591 = 0x24f
	BOOL shouldTimeoutPackets;	// 592 = 0x250
	BOOL shouldSendEmptyPacket;	// 593 = 0x251
	unsigned char requestedCameraType;	// 594 = 0x252
	BOOL useCompressedConnectionData;	// 595 = 0x253
	int natType;	// 596 = 0x254
	opaque_pthread_mutex_t natMutex;	// 600 = 0x258
	opaque_pthread_cond_t natCond;	// 644 = 0x284
	unsigned lastSentAudioSampleTime;	// 672 = 0x2a0
	GKNATObserver *natObserver;	// 676 = 0x2a4
	int mostRecentStartedCall;	// 680 = 0x2a8
	BOOL shouldStopPreviewOnClose;	// 684 = 0x2ac
	int fecMode;	// 688 = 0x2b0
	BOOL bweOperatingModeInitialized;	// 692 = 0x2b4
	BOOL useNewBWEMode;	// 693 = 0x2b5
	BOOL useActiveProbingSenderLog;	// 694 = 0x2b6
	BOOL useFakeLargeFrameMode;	// 695 = 0x2b7
	VideoAttributes *localVideoAttributes;	// 696 = 0x2b8
	VideoAttributes *remoteVideoAttributes;	// 700 = 0x2bc
	CGSize localScreenPortraitAspectRatio;	// 704 = 0x2c0
	CGSize localScreenLandscapeAspectRatio;	// 712 = 0x2c8
	CGSize remoteScreenPortraitAspectRatio;	// 720 = 0x2d0
	CGSize remoteScreenLandscapeAspectRatio;	// 728 = 0x2d8
	BOOL remoteSupportsVisibleRect;	// 736 = 0x2e0
	BOOL canLocalResizePIP;	// 737 = 0x2e1
	BOOL canRemoteResizePIP;	// 738 = 0x2e2
	double lastVideoThrottlingCheck;	// 740 = 0x2e4
	BOOL shouldPrioritizeParticipantIDForSIPInvite;	// 748 = 0x2ec
}
@property(assign, nonatomic) NSObject<VideoConferenceDelegate> *delegate;	// G=0x745f5; S=0x74a3d; @synthesize
@property(assign, setter=setRTChannel:) NSObject<VideoConferenceRealTimeChannel> *rtChannel;	// G=0x745d5; S=0x745e5; @synthesize
@property(assign, nonatomic) void *localVideoLayer;	// G=0x745c5; S=0x78c11; @synthesize
@property(assign, nonatomic) void *localVideoBackLayer;	// G=0x745a5; S=0x745b5; @synthesize
@property(assign, nonatomic) void *remoteVideoLayer;	// G=0x74595; S=0x78951; @synthesize
@property(assign, nonatomic) void *remoteVideoBackLayer;	// G=0x74585; S=0x78691; @synthesize
@property(assign, nonatomic) int chatMode;	// G=0x74575; S=0x7b0c1; @synthesize
@property(assign, nonatomic) BOOL isFocus;	// G=0x74565; S=0x7af95; @synthesize
@property(copy, nonatomic) NSString *currentFocus;	// G=0x74555; S=0x79a85; @synthesize
@property(assign, nonatomic) int packetsPerBundle;	// G=0x74545; S=0x78105; @synthesize
@property(assign, nonatomic) unsigned preferredCodec;	// G=0x74525; S=0x74535; @synthesize
@property(assign) BOOL hasMic;	// G=0x74515; S=0x755d9; @synthesize
@property(assign) NSObject<VideoConferenceNotificationObserver> *genericObserver;	// G=0x744f5; S=0x74505; @synthesize
@property(assign) int upstreamBandwidth;	// G=0x744d5; S=0x744e5; @synthesize
@property(assign) int downstreamBandwidth;	// G=0x744b5; S=0x744c5; @synthesize
@property(assign) NSObject<VideoConferenceSpeakingDelegate> *speakingDelegate;	// G=0x74495; S=0x744a5; @synthesize
@property(assign, nonatomic) BOOL useViceroyBlobFormat;	// G=0x74485; S=0x74285; @synthesize
@property(assign, nonatomic) BOOL isUsingSuppression;	// G=0x74475; S=0x74abd; @synthesize
@property(assign) BOOL useComplexRendering;	// G=0x74465; S=0x774ed; @synthesize
@property(assign) NSObject<VideoConferenceChannelQualityDelegate> *qualityDelegate;	// G=0x74455; S=0x7999d; @synthesize
@property(assign) BOOL shouldTimeoutPackets;	// G=0x74435; S=0x74445; @synthesize
@property(assign, nonatomic) BOOL useCompressedConnectionData;	// G=0x74415; S=0x74425; @synthesize
@property(assign, nonatomic) int natType;	// G=0x74235; S=0x74405; @synthesize
@property(assign, nonatomic) BOOL isGKVoiceChat;	// G=0x743f5; S=0x7b1d9; @synthesize
@property(assign, nonatomic) BOOL requiresWifi;	// G=0x743d5; S=0x743e5; @synthesize
@property(assign) BOOL disableVAD;	// G=0x743b5; S=0x743c5; @synthesize
@property(assign) unsigned talkingPeersLimit;	// G=0x74395; S=0x743a5; @synthesize
@property(retain) VideoAttributes *localVideoAttributes;	// G=0x78465; S=0x78269; @synthesize
@property(retain) VideoAttributes *remoteVideoAttributes;	// G=0x77d75; S=0x77d51; @synthesize
@property(readonly, assign) int localFrameWidth;	// G=0x74385; @synthesize
@property(readonly, assign) int localFrameHeight;	// G=0x74375; @synthesize
@property(readonly, assign) int remoteFrameWidth;	// G=0x74365; @synthesize
@property(readonly, assign) int remoteFrameHeight;	// G=0x74355; @synthesize
@property(assign, nonatomic) BOOL shouldPrioritizeParticipantIDForSIPInvite;	// G=0x74335; S=0x74345; @synthesize
@property(readonly, assign) CALayer *remoteVideoSubLayer;	// G=0x74325; @synthesize
@property(readonly, assign) CALayer *remoteVideoSubLayerBack;	// G=0x74315; @synthesize
@property(readonly, assign) double roundTripTime;	// G=0x75139; 
@property(readonly, assign) double localPacketLossRate;	// G=0x750a1; 
@property(readonly, assign) double remotePacketLossRate;	// G=0x75001; 
@property(readonly, assign, getter=getRemoteBitrate) double remoteBitrate;	// G=0x785d1; 
@property(readonly, assign, getter=getRemoteFramerate) double remoteFramerate;	// G=0x785fd; 
@property(readonly, assign, getter=getLocalBitrate) double localBitrate;	// G=0x78631; 
@property(readonly, assign, getter=getLocalFramerate) double localFramerate;	// G=0x7865d; 
@property(assign) float conferenceVolume;	// G=0x74305; S=0x742cd; 
@property(readonly, assign, nonatomic) float inputMeterLevel;	// G=0x74275; 
@property(readonly, assign, nonatomic) float outputMeterLevel;	// G=0x74265; 
@property(assign, nonatomic, getter=isInputMeteringEnabled) BOOL inputMeteringEnabled;	// G=0x74255; S=0x7aec5; 
@property(assign, nonatomic, getter=isOutputMeteringEnabled) BOOL outputMeteringEnabled;	// G=0x74245; S=0x7af2d; 
@property(assign, nonatomic, getter=isMicrophoneMuted) BOOL microphoneMuted;	// G=0x742ad; S=0x794c5; 
@property(assign, getter=isSpeakerPhoneEnabled) BOOL enableSpeakerPhone;	// G=0x75741; S=0x7571d; 
@property(assign) BOOL setupAudioSession;	// G=0x75789; S=0x75765; 
- (id)init;	// 0x77535
- (void)dealloc;	// 0x7b589
- (void)cleanupManager;	// 0x747a5
- (void)warmupForCall;	// 0x7b2f5
// declared property setter: - (void)setIsGKVoiceChat:(BOOL)chat;	// 0x7b1d9
// declared property getter: - (int)natType;	// 0x74235
- (double)packetLossRateForCallID:(int)callID;	// 0x747c5
- (double)networkQualityForCallID:(int)callID;	// 0x74875
// declared property setter: - (void)setDelegate:(id)delegate;	// 0x74a3d
// declared property setter: - (void)setChatMode:(int)mode;	// 0x7b0c1
// declared property setter: - (void)setIsFocus:(BOOL)focus;	// 0x7af95
// declared property setter: - (void)setUseComplexRendering:(BOOL)rendering;	// 0x774ed
// declared property getter: - (BOOL)isOutputMeteringEnabled;	// 0x74245
// declared property setter: - (void)setOutputMeteringEnabled:(BOOL)enabled;	// 0x7af2d
// declared property setter: - (void)setIsUsingSuppression:(BOOL)suppression;	// 0x74abd
// declared property getter: - (BOOL)isInputMeteringEnabled;	// 0x74255
// declared property setter: - (void)setInputMeteringEnabled:(BOOL)enabled;	// 0x7aec5
// declared property getter: - (float)outputMeterLevel;	// 0x74265
// declared property getter: - (float)inputMeterLevel;	// 0x74275
- (void)cleanupQueues;	// 0x7ac7d
- (id)connectionBlobForParticipantID:(id)participantID callID:(int *)anId error:(id *)error;	// 0x7a84d
// declared property setter: - (void)setUseViceroyBlobFormat:(BOOL)format;	// 0x74285
- (BOOL)getIsVideoPaused:(BOOL *)paused callID:(int)anId error:(id *)error;	// 0x74b21
- (BOOL)getIsAudioPaused:(BOOL *)paused callID:(int)anId error:(id *)error;	// 0x74c69
- (BOOL)shouldSendAudioForCallID:(int)callID;	// 0x74db1
- (void)setSendAudio:(BOOL)audio forCallID:(int)callID;	// 0x74e61
- (BOOL)setPauseAudio:(BOOL)audio callID:(int)anId error:(id *)error;	// 0x7a661
- (BOOL)setPauseVideo:(BOOL)video callID:(int)anId error:(id *)error;	// 0x7a475
- (void)setPeerCN:(id)cn callID:(int)anId;	// 0x7a315
- (void)setSessionID:(id)anId callID:(int)anId2;	// 0x7a195
- (id)localScreenAttributesForVideoAttributes:(id)videoAttributes;	// 0x74f15
- (void)setLocalScreenAttributes:(id)attributes;	// 0x7a005
- (BOOL)startConnectionWithParticipantID:(id)participantID callID:(int)anId usingBlob:(id)blob isCaller:(BOOL)caller capabilities:(id)capabilities error:(id *)error;	// 0x79b59
- (BOOL)setActive:(BOOL)active;	// 0x74fa5
// declared property setter: - (void)setCurrentFocus:(id)focus;	// 0x79a85
// declared property setter: - (void)setQualityDelegate:(id)delegate;	// 0x7999d
- (void)updatedMutedPeers:(id)peers forParticipantID:(id)participantID;	// 0x79849
- (void)updatedConnectedPeers:(id)peers;	// 0x796f5
- (void)stopCallID:(int)anId;	// 0x796b5
- (void)remoteCancelledCallID:(int)anId;	// 0x79675
- (void)setCallReport:(int)report withReport:(id)report2;	// 0x79551
// declared property getter: - (BOOL)isMicrophoneMuted;	// 0x742ad
// declared property setter: - (void)setMicrophoneMuted:(BOOL)muted;	// 0x794c5
- (int)localVideoSlot:(BOOL)slot;	// 0x79345
- (int)remoteVideoSlot:(BOOL)slot;	// 0x791c5
// declared property setter: - (void)setLocalVideoLayer:(void *)layer;	// 0x78c11
// declared property setter: - (void)setRemoteVideoLayer:(void *)layer;	// 0x78951
// declared property setter: - (void)setRemoteVideoBackLayer:(void *)layer;	// 0x78691
// declared property getter: - (double)getLocalFramerate;	// 0x7865d
// declared property getter: - (double)getLocalBitrate;	// 0x78631
// declared property getter: - (double)getRemoteFramerate;	// 0x785fd
// declared property getter: - (double)getRemoteBitrate;	// 0x785d1
// declared property getter: - (double)remotePacketLossRate;	// 0x75001
// declared property getter: - (double)localPacketLossRate;	// 0x750a1
// declared property getter: - (double)roundTripTime;	// 0x75139
- (id)statsForCallID:(int)callID;	// 0x751d9
// declared property getter: - (id)localVideoAttributes;	// 0x78465
// declared property setter: - (void)setLocalVideoAttributes:(id)attributes;	// 0x78269
- (void)forceNoICE:(BOOL)ice;	// 0x742bd
// declared property setter: - (void)setPacketsPerBundle:(int)bundle;	// 0x78105
// declared property setter: - (void)setHasMic:(BOOL)mic;	// 0x755d9
// declared property setter: - (void)setConferenceVolume:(float)volume;	// 0x742cd
// declared property getter: - (float)conferenceVolume;	// 0x74305
// declared property setter: - (void)setEnableSpeakerPhone:(BOOL)phone;	// 0x7571d
// declared property getter: - (BOOL)isSpeakerPhoneEnabled;	// 0x75741
// declared property setter: - (void)setSetupAudioSession:(BOOL)session;	// 0x75765
// declared property getter: - (BOOL)setupAudioSession;	// 0x75789
- (void)processRelayRequestResponse:(int)response responseDict:(id)dict didOriginateRequest:(BOOL)request;	// 0x77fd1
- (void)processRelayUpdate:(int)update updateDict:(id)dict didOriginateRequest:(BOOL)request;	// 0x77e9d
- (void)receivedRealTimeData:(id)data fromParticipantID:(id)participantID;	// 0x757f5
- (void)handleCellDowngrade:(BOOL)downgrade;	// 0x77d8d
// declared property getter: - (id)remoteVideoSubLayerBack;	// 0x74315
// declared property getter: - (id)remoteVideoSubLayer;	// 0x74325
// declared property getter: - (BOOL)shouldPrioritizeParticipantIDForSIPInvite;	// 0x74335
// declared property setter: - (void)setShouldPrioritizeParticipantIDForSIPInvite:(BOOL)prioritizeParticipantIDForSIPInvite;	// 0x74345
// declared property getter: - (int)remoteFrameHeight;	// 0x74355
// declared property getter: - (int)remoteFrameWidth;	// 0x74365
// declared property getter: - (int)localFrameHeight;	// 0x74375
// declared property getter: - (int)localFrameWidth;	// 0x74385
// declared property getter: - (id)remoteVideoAttributes;	// 0x77d75
// declared property setter: - (void)setRemoteVideoAttributes:(id)attributes;	// 0x77d51
// declared property getter: - (unsigned)talkingPeersLimit;	// 0x74395
// declared property setter: - (void)setTalkingPeersLimit:(unsigned)limit;	// 0x743a5
// declared property getter: - (BOOL)disableVAD;	// 0x743b5
// declared property setter: - (void)setDisableVAD:(BOOL)vad;	// 0x743c5
// declared property getter: - (BOOL)requiresWifi;	// 0x743d5
// declared property setter: - (void)setRequiresWifi:(BOOL)wifi;	// 0x743e5
// declared property getter: - (BOOL)isGKVoiceChat;	// 0x743f5
// declared property setter: - (void)setNatType:(int)type;	// 0x74405
// declared property getter: - (BOOL)useCompressedConnectionData;	// 0x74415
// declared property setter: - (void)setUseCompressedConnectionData:(BOOL)data;	// 0x74425
// declared property getter: - (BOOL)shouldTimeoutPackets;	// 0x74435
// declared property setter: - (void)setShouldTimeoutPackets:(BOOL)timeoutPackets;	// 0x74445
// declared property getter: - (id)qualityDelegate;	// 0x74455
// declared property getter: - (BOOL)useComplexRendering;	// 0x74465
// declared property getter: - (BOOL)isUsingSuppression;	// 0x74475
// declared property getter: - (BOOL)useViceroyBlobFormat;	// 0x74485
// declared property getter: - (id)speakingDelegate;	// 0x74495
// declared property setter: - (void)setSpeakingDelegate:(id)delegate;	// 0x744a5
// declared property getter: - (int)downstreamBandwidth;	// 0x744b5
// declared property setter: - (void)setDownstreamBandwidth:(int)bandwidth;	// 0x744c5
// declared property getter: - (int)upstreamBandwidth;	// 0x744d5
// declared property setter: - (void)setUpstreamBandwidth:(int)bandwidth;	// 0x744e5
// declared property getter: - (id)genericObserver;	// 0x744f5
// declared property setter: - (void)setGenericObserver:(id)observer;	// 0x74505
// declared property getter: - (BOOL)hasMic;	// 0x74515
// declared property getter: - (unsigned)preferredCodec;	// 0x74525
// declared property setter: - (void)setPreferredCodec:(unsigned)codec;	// 0x74535
// declared property getter: - (int)packetsPerBundle;	// 0x74545
// declared property getter: - (id)currentFocus;	// 0x74555
// declared property getter: - (BOOL)isFocus;	// 0x74565
// declared property getter: - (int)chatMode;	// 0x74575
// declared property getter: - (void *)remoteVideoBackLayer;	// 0x74585
// declared property getter: - (void *)remoteVideoLayer;	// 0x74595
// declared property getter: - (void *)localVideoBackLayer;	// 0x745a5
// declared property setter: - (void)setLocalVideoBackLayer:(void *)layer;	// 0x745b5
// declared property getter: - (void *)localVideoLayer;	// 0x745c5
// declared property getter: - (id)rtChannel;	// 0x745d5
// declared property setter: - (void)setRTChannel:(id)channel;	// 0x745e5
// declared property getter: - (id)delegate;	// 0x745f5
@end

@interface VideoConference (NATDelegate) <GKNATObserverDelegate>
- (void)NATTypeDidChange:(int)nattype;	// 0x7be85
@end

@interface VideoConference (VideoProcessingCallbacks)
- (bool)enqueueFrameToQueueFront:(BOOL)queueFront frame:(CVBufferRef)frame frameTime:(XXStruct_oHBkXC)time;	// 0x81b5d
- (bool)onCaptureVideo:(CVBufferRef)video frameTime:(XXStruct_oHBkXC)time preview:(bool)preview isSwitching:(bool)switching cameraType:(int)type;	// 0x82879
- (bool)onPlayVideo:(CVBufferRef)video frameTime:(XXStruct_oHBkXC)time cameraStatusBits:(unsigned char)bits;	// 0x83131
@end

@interface VideoConference (VideoProcessing)
- (BOOL)startPreviewWithError:(id *)error;	// 0x76f1d
- (BOOL)startPreview:(BOOL)preview withError:(id *)error;	// 0x8235d
- (void)stopPreview;	// 0x82191
- (BOOL)isRunningPreview;	// 0x7f525
- (void)checkVideoThrottleDuration;	// 0x82751
- (long)createVideoCaptureWithWidth:(int)width height:(int)height frameRate:(int)rate useBackFacingCamera:(BOOL)camera;	// 0x7703d
@end

@interface VideoConference (SessionDelegate) <VCCallSessionDelegate>
- (void)session:(id)session didStart:(BOOL)start connectionType:(unsigned)type localUseCell:(unsigned)cell remoteUseCell:(unsigned)cell5 error:(id)error;	// 0x7cf21
- (void)session:(id)session didStopWithError:(id)error;	// 0x76299
- (void)session:(id)session didStopWithDelay:(int)delay error:(id)error;	// 0x7b9b5
- (void)session:(id)session receivedNoPacketsForSeconds:(double)seconds;	// 0x7bc0d
- (void)startVideoProc:(id)proc;	// 0x76549
- (void)getPreviewSettings:(int *)settings height:(int *)height framerate:(int *)framerate;	// 0x7658d
- (void)getDefaultsVideoSettings:(int *)settings height:(int *)height frameRate:(int *)rate bitRate:(int *)rate4 useBFC:(BOOL *)bfc enableBitstreamCapture:(BOOL *)capture enable2vuyCapture:(BOOL *)capture7 enableVPBLogging:(BOOL *)logging;	// 0x805e5
- (void)resetCameraToPreviewSettings;	// 0x7d3e9
- (bool)didDetectBandwidth:(BOOL)bandwidth upstreamBandwidth:(int)bandwidth2 downstreamBandwidth:(int)bandwidth3;	// 0x74701
- (bool)session:(id)session startVideoIO:(id *)io rtpVideo:(tagHANDLE *)video rtpAudio:(tagHANDLE *)audio actualVideoPayload:(int)payload enableUEP:(BOOL)uep enableControlByte:(BOOL)byte featuresListString:(char *)string remoteVCCallInfo:(id)info captureRule:(id)rule encodeRule:(id)rule11 usingCellular:(BOOL)cellular isUnpausing:(BOOL)unpausing;	// 0x81075
- (bool)stopVideoIO:(BOOL)io error:(id *)error;	// 0x81e55
- (void)flushVideoQueuesLocal:(BOOL)local remote:(BOOL)remote;	// 0x822dd
- (void)handleAVCaptureError:(long)error error:(id)error2;	// 0x7d501
- (void)remoteAudioDidPause:(BOOL)remoteAudio callID:(int)anId;	// 0x7bca5
- (void)remoteVideoDidPause:(BOOL)remoteVideo callID:(int)anId;	// 0x7bd11
- (void)session:(id)session inititiateRelayRequest:(id)request;	// 0x80c15
- (void)session:(id)session sendRelayResponse:(id)response;	// 0x80e45
- (void)session:(id)session cancelRelayRequest:(id)request;	// 0x74751
- (void)remoteScreenAspectRatioChangedForSession:(id)session remoteScreenPortraitAspectRatio:(CGSize)ratio remoteScreenLandscapeAspectRatio:(CGSize)ratio3 remoteSupportsVisibleRect:(BOOL)rect canLocalResizePIP:(BOOL)pip canRemoteResizePIP:(BOOL)pip6;	// 0x7bd7d
- (void)setBWEOptions:(BOOL)options UseNewBWEMode:(BOOL)mode FakeLargeFrameMode:(BOOL)mode3 ProbingSenderLog:(BOOL)log;	// 0x74755
- (void)setFECMode:(int)mode;	// 0x74795
- (void)session:(id)session setUseNormalBitrate:(BOOL)bitrate;	// 0x826c5
@end

@interface VideoConference (PrivateMethods)
- (void)bringupPDPContext;	// 0x7c6f5
- (void)pullStoreBagKeys;	// 0x7e305
- (void)wrlock;	// 0x80401
- (int)tryrdlock;	// 0x80415
- (void)rdlock;	// 0x80429
- (void)unlock;	// 0x8043d
- (unsigned)connectionResultCallbackForCallID:(int)callID result:(tagCONNRESULT *)result didReceiveICEPacket:(BOOL)packet didUseRelay:(BOOL)relay;	// 0x7c779
- (void)stopCallID:(int)anId didRemoteCancel:(BOOL)cancel;	// 0x80451
- (void)cleanupSession:(id)session withDelay:(unsigned)delay;	// 0x75ea1
- (void)cleanupProc:(id)proc;	// 0x75f59
- (void)defaultCleanupSession:(id)session;	// 0x7c93d
- (void)threadSafeCleanupSession:(id)session;	// 0x7c9a1
- (void)cleanupSession:(id)session didRemoteCancel:(BOOL)cancel;	// 0x7ca55
- (void)getNSError:(id *)error code:(int)code detailedCode:(int)code3 filePath:(id)path description:(id)description hResult:(long)result;	// 0x7601d
- (void)getNSError:(id *)error code:(int)code detailedCode:(int)code3 filePath:(id)path description:(id)description reason:(id)reason;	// 0x7ccdd
- (BOOL)setPauseAudio:(BOOL)audio;	// 0x7b74d
- (BOOL)setPauseVideo:(BOOL)video;	// 0x7b899
- (void)markUnfinishedSessions;	// 0x7e79d
@end

@interface VideoConference (SessionInfo)
- (BOOL)matchesCallID:(int)anId;	// 0x75ad9
- (BOOL)matchesOpenSessionForParticipantID:(id)participantID;	// 0x75b5d
- (int)callIDForOpenSessionWithParticipantID:(id)participantID;	// 0x75ba9
- (id)openSessionForParticipant:(id)participant;	// 0x7de11
- (BOOL)matchesParticipantID:(id)anId;	// 0x75c39
- (id)sessionForParticipantID:(id)participantID;	// 0x7df4d
- (BOOL)hasSessionWaitingForSIPInvite;	// 0x75c85
- (id)loopbackSessionWaitingForSIPInvite;	// 0x7e059
- (id)sessionForIncomingParticipantID:(id)incomingParticipantID;	// 0x7e155
- (BOOL)matchesIncomingConnectionResult:(tagCONNRESULT *)result;	// 0x7c5f9
- (id)sessionForIncomingConnectionResult:(tagCONNRESULT *)incomingConnectionResult;	// 0x80201
- (id)participantIDForCallID:(int)callID;	// 0x75ccd
- (int)stateForCallID:(int)callID;	// 0x75da1
- (int)callIDForParticipantID:(id)participantID;	// 0x75e35
@end

@interface VideoConference (SIPDispatch)
- (int)sipCallbackNotification:(int)notification callID:(int)anId msgIn:(const char *)anIn msgOut:(char *)anOut optional:(void *)optional confIndex:(int *)index;	// 0x7c2c5
@end

@interface VideoConference (AudioProcessing)
- (void)updateAudioBitrate;	// 0x7f5a5
- (unsigned char)powerFloatToInt:(float)int;	// 0x74605
- (float)powerIntToFloat:(unsigned char)aFloat;	// 0x74651
- (bool)onCaptureSound:(char *)sound numBytes:(int)bytes numSamples:(int)samples timeStamp:(unsigned)stamp timeStampDelta:(int)delta hostTime:(double)time averagePower:(float)power voiceActivity:(unsigned long)activity;	// 0x7f691
- (BOOL)updateSpeaking:(unsigned long)speaking timeStamp:(unsigned)stamp;	// 0x7c199
- (unsigned)pruneQuietestPeers:(unsigned)peers talking:(unsigned)talking mask:(unsigned)mask meters:(char *)meters;	// 0x74691
- (unsigned)calculateTalkingMaskAtTimeStamp:(unsigned)timeStamp samples:(short *)samples numSamples:(int)samples3;	// 0x7ed7d
- (void)calculateMixingArrays:(unsigned *)arrays talkingMask:(unsigned)mask;	// 0x7db5d
- (int)captureAsFocus:(char *)focus numBytes:(int)bytes numSamples:(int)samples timeStamp:(unsigned)stamp timeStampDelta:(int)delta averagePower:(unsigned char)power;	// 0x83be5
- (int)captureAsFocusClient:(char *)client numBytes:(int)bytes numSamples:(int)samples timeStamp:(unsigned)stamp timeStampDelta:(int)delta averagePower:(unsigned char)power;	// 0x7f15d
- (int)captureMeshMode:(char *)mode numBytes:(int)bytes numSamples:(int)samples timeStamp:(unsigned)stamp timeStampDelta:(int)delta hostTime:(double)time;	// 0x7e8a9
- (void)packMeters:(char *)meters forSession:(id)session len:(char *)len;	// 0x758f9
- (int)sendBundle:(id)bundle samples:(char *)samples numEncodedBytes:(int)bytes timeStamp:(unsigned)stamp timeStampDelta:(int)delta hasNewSamples:(BOOL)samples6;	// 0x7fb25
- (bool)onPlaySound:(char *)sound numBytes:(int)bytes numSamples:(int)samples timeStamp:(unsigned)stamp averagePower:(float)power;	// 0x83a2d
- (void)updateMeter:(unsigned char)meter forParticipant:(id)participant atIndex:(unsigned)index;	// 0x759d9
- (void)updateMeters:(unsigned short)meters;	// 0x75a4d
- (BOOL)recvSamplesForSession:(id)session samples:(short *)samples numSamples:(int)samples3 storeTimestamp:(unsigned)timestamp;	// 0x7fe25
- (int)pullDecodedAsFocus:(short *)focus timestamp:(unsigned)timestamp numBytes:(int)bytes numSamples:(int)samples;	// 0x8426d
- (int)pullDecodedAsFocusClient:(short *)client timestamp:(unsigned)timestamp numBytes:(int)bytes numSamples:(int)samples;	// 0x800ad
- (int)pullDecodedMeshMode:(short *)mode timestamp:(unsigned)timestamp numBytes:(int)bytes numSamples:(int)samples;	// 0x845b9
@end
