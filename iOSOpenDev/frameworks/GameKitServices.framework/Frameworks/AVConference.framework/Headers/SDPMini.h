/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

#import <AVConference/AVConference-Structs.h>
#import <AVConference/SDPMini.h>
#import <AVConference/XXUnknownSuperclass.h>

@class NSString, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface SDPMini : XXUnknownSuperclass {
@private
	NSMutableDictionary *_dict;	// 4 = 0x4
	NSString *_sdpUsername;	// 8 = 0x8
}
@property(retain) id sessionName;	// G=0x3fbcd; S=0x40161; converted property
- (id)init;	// 0x42f2d
- (id)initWithOrigin:(id)origin sessionName:(id)name;	// 0x3ddbd
- (BOOL)setAudioPayloads:(int *)payloads count:(int)count;	// 0x3dfa1
- (BOOL)setVideoPayloads:(int *)payloads count:(int)count;	// 0x3e169
- (void)appendDeviceInfo;	// 0x43001
- (id)initWithViceroyDefaultsUsingZeroes:(BOOL)viceroyDefaultsUsingZeroes forAudioOnly:(BOOL)audioOnly withUserCount:(int)userCount;	// 0x3e25d
- (id)initWithViceroyDefaultsUsingZeroes:(BOOL)viceroyDefaultsUsingZeroes forAudioOnly:(BOOL)audioOnly;	// 0x42bd5
- (id)initWithViceroyDefaultsUsingZeroes:(BOOL)viceroyDefaultsUsingZeroes;	// 0x3e645
- (id)initWithString:(id)string;	// 0x3ea25
- (void)dealloc;	// 0x42fa1
- (void)setSDP:(id)sdp;	// 0x42621
- (void)resetSDP;	// 0x3ea55
- (id)sessionString;	// 0x3eb21
- (id)audioStringForVersion:(unsigned)version;	// 0x3ee31
- (id)videoStringForVersion:(unsigned)version;	// 0x3efd5
- (id)dataStringForVersion:(unsigned)version;	// 0x3f179
- (id)toString;	// 0x3f2d1
- (id)toStringForVersion:(unsigned)version;	// 0x3f365
- (void)setOriginWithArray:(id)array;	// 0x3f425
- (id)origin;	// 0x3f451
- (void)setConnectionWithArray:(id)array;	// 0x3f479
- (id)connection;	// 0x3f4a5
- (void)setBandwidthWithString:(id)string;	// 0x3f4cd
- (id)bandwidth;	// 0x3f4f9
- (void)setMediaWithArrayHelper:(id)arrayHelper mediaArray:(id)array attributesArray:(id)array3;	// 0x3f521
- (void)setAudioMediaWithArray:(id)array andAttributesWithArray:(id)array2;	// 0x3f601
- (id)audioMedia;	// 0x3f62d
- (void)setVideoMediaWithArray:(id)array andAttributesWithArray:(id)array2;	// 0x3f66d
- (void)appendAudioMedia:(int)media;	// 0x3f699
- (id)videoMedia;	// 0x3f829
- (void)appendVideoMedia:(int)media;	// 0x3f869
- (void)setDataMediaWithArray:(id)array andAttributesWithArray:(id)array2;	// 0x3f9f9
- (id)dataMedia;	// 0x3fa25
- (id)audioMediaAttributes;	// 0x3fa65
- (id)videoMediaAttributes;	// 0x3faa5
- (id)dataMediaAttributes;	// 0x3fae5
- (id)audioMediaConnection;	// 0x3fb25
- (id)videoMediaConnection;	// 0x3fb65
- (id)sessionAttributes;	// 0x3fba5
// converted property getter: - (id)sessionName;	// 0x3fbcd
- (int)addressTypeForConnection:(id)connection;	// 0x3fbf5
- (int)addressType;	// 0x3fc75
- (int)addressTypeVideo;	// 0x3fcad
- (int)addressTypeAudio;	// 0x3fcf5
- (void)appendAudioAttribute:(id)attribute;	// 0x3fd3d
- (void)appendVideoAttribute:(id)attribute;	// 0x3fdfd
- (void)updateVideoAttributePrefix:(id)prefix withAppendedValue:(id)appendedValue;	// 0x3febd
- (void)appendSessionAttribute:(id)attribute;	// 0x400b5
// converted property setter: - (void)setSessionName:(id)name;	// 0x40161
- (BOOL)hasAudioCodec:(int)codec;	// 0x401bd
- (BOOL)hasVideoCodec:(int)codec;	// 0x401d5
- (BOOL)getOS:(id *)os model:(id *)model;	// 0x401ed
- (BOOL)getAUNumber:(unsigned long *)number;	// 0x4036d
@end

@interface SDPMini (viceroy)
@property(assign) int maxBandwidth;	// G=0x40bad; S=0x411ed; converted property
@property(assign) int maxFramerate;	// G=0x40c25; S=0x42c41; converted property
@property(assign) BOOL autoDetectBandwidth;	// G=0x412a1; S=0x41239; converted property
@property(assign) BOOL useIChatEncryption;	// G=0x4137d; S=0x41315; converted property
@property(assign) BOOL allowAudioRecording;	// G=0x4368d; S=0x413f1; converted property
@property(assign) char *featuresListString;	// G=0x4161d; S=0x415e1; converted property
@property(assign) unsigned long audioRTPID;	// G=0x43a39; S=0x416b5; converted property
@property(assign) unsigned long videoRTPID;	// G=0x43b0d; S=0x41729; converted property
@property(retain) id hardwareInfo;	// G=0x41a69; S=0x41a59; converted property
- (int)portForMediaHelper:(id)mediaHelper;	// 0x4044d
- (int)videoPort;	// 0x40499
- (int)audioPort;	// 0x404c9
- (int)dataPort;	// 0x404f9
- (int)videoRTCPPort;	// 0x40529
- (int)audioRTCPPort;	// 0x406c9
- (int)dataRTCPPort;	// 0x40881
- (const char *)userName;	// 0x40955
- (const char *)ipFromConnection:(id)connection;	// 0x409bd
- (const char *)ip;	// 0x40a09
- (const char *)ipVideo;	// 0x40a49
- (const char *)ipAudio;	// 0x40a91
- (int)maxImagesize;	// 0x40ad9
// converted property getter: - (int)maxBandwidth;	// 0x40bad
// converted property getter: - (int)maxFramerate;	// 0x40c25
- (id)audioPayloadTypes;	// 0x40cf9
- (id)videoPayloadTypes;	// 0x40dd1
- (int)rulesFramerate:(int)framerate;	// 0x40ea9
- (void)rulesImageSize:(int)size pWidth:(int *)width pHeight:(int *)height;	// 0x430f9
- (void)rulesPeerImageSize:(int)size pWidth:(int *)width pHeight:(int *)height;	// 0x43299
- (char *)srtpKey;	// 0x3dd8d
- (char *)srtpSalt;	// 0x3dd91
- (void)setMaxImageSize:(int)size forPayloadType:(int)payloadType;	// 0x40fe5
// converted property setter: - (void)setMaxBandwidth:(int)bandwidth;	// 0x411ed
// converted property setter: - (void)setMaxFramerate:(int)framerate;	// 0x42c41
// converted property setter: - (void)setAutoDetectBandwidth:(BOOL)bandwidth;	// 0x41239
// converted property getter: - (BOOL)autoDetectBandwidth;	// 0x412a1
// converted property setter: - (void)setUseIChatEncryption:(BOOL)encryption;	// 0x41315
// converted property getter: - (BOOL)useIChatEncryption;	// 0x4137d
// converted property setter: - (void)setAllowAudioRecording:(BOOL)recording;	// 0x413f1
// converted property getter: - (BOOL)allowAudioRecording;	// 0x4368d
- (void)setParameters:(id)parameters forFormat:(int)format;	// 0x41419
- (id)getParametersForFormat:(int)format;	// 0x4374d
- (void)setUseSbr:(BOOL)sbr blockSize:(int)size forAACFormat:(int)aacformat;	// 0x4148d
- (BOOL)getUseSbr:(BOOL *)sbr blockSize:(int *)size forAACFormat:(int)aacformat;	// 0x43889
- (BOOL)aacBlockSize:(int *)size;	// 0x4151d
// converted property setter: - (void)setFeaturesListString:(char *)string;	// 0x415e1
// converted property getter: - (char *)featuresListString;	// 0x4161d
// converted property setter: - (void)setAudioRTPID:(unsigned long)rtpid;	// 0x416b5
// converted property getter: - (unsigned long)audioRTPID;	// 0x43a39
// converted property setter: - (void)setVideoRTPID:(unsigned long)rtpid;	// 0x41729
// converted property getter: - (unsigned long)videoRTPID;	// 0x43b0d
- (BOOL)hasPureVoice;	// 0x4179d
- (BOOL)hasViceroyCompatibleAudioCodec;	// 0x417b5
- (BOOL)hasViceroyCompatibleVideoCodec;	// 0x417fd
- (BOOL)hasH263;	// 0x41845
- (BOOL)irisOpen;	// 0x418b9
- (void)setMultiPointFlagWithCount:(int)count;	// 0x4192d
- (BOOL)hasMultiPointFlag:(int *)flag;	// 0x41979
// converted property setter: - (void)setHardwareInfo:(id)info;	// 0x41a59
// converted property getter: - (id)hardwareInfo;	// 0x41a69
- (void)buildRTPMap;	// 0x43be1
- (id)RTPMapString:(int)string isAudio:(BOOL)audio;	// 0x41b0d
- (int)payload:(int)payload isAudio:(BOOL)audio;	// 0x43439
- (id)payloadString:(int)string isAudio:(BOOL)audio;	// 0x41e39
- (BOOL)hasAudioCodec:(int)codec withPeerSDP:(id)peerSDP;	// 0x43485
- (BOOL)hasVideoCodec:(int)codec withPeerSDP:(id)peerSDP;	// 0x43589
@end

@interface SDPMini (helper)
- (id)defaultAudioPayloads;	// 0x3dd95
- (id)defaultAudioPayloads:(BOOL)payloads;	// 0x3dda9
- (id)defaultAudioPayloads:(BOOL)payloads withUserCount:(int)userCount;	// 0x42651
- (id)SDPUsername;	// 0x42e51
@end

@interface SDPMini (MediaAttr)
- (void)createVideoImageAttr:(int)attr direction:(int)direction dimensions:(imageTag *)dimensions count:(int)count;	// 0x8db0d
- (void)createVideoImageAttr:(id)attr attrFormat:(id)format;	// 0x8dde9
- (id)videoImageAttributes:(int)attributes;	// 0x8dfcd
- (id)getVideoSendImages:(id)images;	// 0x8e165
- (id)getVideoRecvImages:(id)images;	// 0x8e389
- (void)fillImageStruct:(id)aStruct imageStruct:(imageTag *)aStruct2;	// 0x8e7ed
- (void)fillImageArray:(id)array imageArray:(imageTag *)array2;	// 0x8e5ad
- (BOOL)supportImage:(id)image width:(int)width height:(int)height rate:(int)rate;	// 0x8e629
- (BOOL)supportsSizeForPayload:(int)payload rule:(id)rule direction:(int)direction;	// 0x8e6f1
- (BOOL)videoDisplayAttribute:(int *)attribute withHeight:(int *)height;	// 0x8eab9
@end
