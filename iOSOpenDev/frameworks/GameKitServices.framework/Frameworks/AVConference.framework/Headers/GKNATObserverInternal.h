/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

#import <AVConference/GKNATObserver.h>
#import <AVConference/AVConference-Structs.h>

@class GKNATObserver_SCContext, NSMutableDictionary, NSRecursiveLock;
@protocol GKNATObserverDelegate;

__attribute__((visibility("hidden")))
@interface GKNATObserverInternal : GKNATObserver {
@private
	id<GKNATObserverDelegate> _delegate;	// 4 = 0x4
	SCDynamicStoreRef _dynamicStore;	// 8 = 0x8
	NSRecursiveLock *_xNATCheck;	// 12 = 0xc
	int _lastReportedNATType;	// 16 = 0x10
	NSMutableDictionary *_commNATFlagDictionary;	// 20 = 0x14
	BOOL _nonCarrierInterfacesOnly;	// 24 = 0x18
	BOOL _checkTCPAndSSL;	// 25 = 0x19
	BOOL _favorNonCarrier;	// 26 = 0x1a
	BOOL _newCarrierType;	// 27 = 0x1b
	BOOL _addInRangeFlag;	// 28 = 0x1c
	BOOL _addCarrierFlag;	// 29 = 0x1d
	int _NATCheckRetryCount;	// 32 = 0x20
	double _NATCheckRetryDelay;	// 36 = 0x24
	NSMutableDictionary *_currentNetworkNames;	// 44 = 0x2c
	dispatch_queue_s *_natCheckQueue;	// 48 = 0x30
	dispatch_queue_s *_reportNATQueue;	// 52 = 0x34
	dispatch_group_s *_natCheckGroup;	// 56 = 0x38
	BOOL _fNATCheckQueued;	// 60 = 0x3c
	BOOL _fNATCheckInProgress;	// 61 = 0x3d
	GKNATObserver_SCContext *_sccontext;	// 64 = 0x40
}
@property(assign) id delegate;	// G=0x1aa8d; S=0x1c92d; converted property
- (id)init;	// 0x1ab79
- (id)initWithOptions:(id)options;	// 0x1ce39
- (void)release;	// 0x1cd75
- (void)dealloc;	// 0x1cc4d
- (int)natTypeForCommNATFlags:(unsigned)commNATFlags isCarrier:(BOOL)carrier;	// 0x1a9d1
- (int)natType;	// 0x1cab9
- (void)reportNATType;	// 0x1ca65
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x1c92d
// converted property getter: - (id)delegate;	// 0x1aa8d
- (tagCommNATInfo *)callCommNATTestFromIPPort:(tagIPPORT *)ipport;	// 0x1c565
- (int)callHTTPTestFromIPPort:(tagIPPORT *)ipport ToServer:(id)server isSSL:(BOOL)ssl;	// 0x1beb1
- (id)lookupCachedNATFlagsForNetwork:(id)network;	// 0x1bdcd
- (void)cacheNATFlags:(id)flags forNetwork:(id)network;	// 0x1ba2d
- (void)NATCheckWithIPPort:(tagIPPORT *)ipport useCache:(BOOL)cache;	// 0x1b661
- (void)HTTPCheckWithIPPort:(tagIPPORT *)ipport useCache:(BOOL)cache;	// 0x1b489
- (void)HTTPSCheckWithIPPort:(tagIPPORT *)ipport useCache:(BOOL)cache;	// 0x1b2b1
- (void)clearRetries;	// 0x1abdd
- (void)tryNATCheckWithDelay:(double)delay;	// 0x1b159
- (id)nameForNetworkWithIPPort:(tagIPPORT *)ipport interfaceName:(id)name;	// 0x1af39
- (void)registerForNetworkChanges;	// 0x1acf9
@end
