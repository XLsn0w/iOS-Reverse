/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 */

#import <Celestial/Celestial-Structs.h>
#import <Celestial/AVController.h>
#import <Celestial/XXUnknownSuperclass.h>


@interface AVController : XXUnknownSuperclass {
@private
	AVControllerPrivate *_priv;	// 4 = 0x4
}
@property(retain) id queueFeeder;	// G=0x191b9; S=0xd9d9; converted property
@property(assign) float volume;	// G=0x57d1; S=0xddad; converted property
@property(assign) double currentTime;	// G=0x5d89; S=0x1b001; converted property
@property(assign) BOOL muted;	// G=0x1aee9; S=0x1ae49; converted property
@property(assign) OpaqueFigVisualContext *visualContext;	// G=0x191f5; S=0x1ade9; converted property
@property(retain) id outputQTESFilePath;	// G=0xa399; S=0x1adb9; converted property
@property(assign) BOOL shouldDisplayClosedCaptions;	// G=0x1921d; S=0x592d; converted property
@property(assign) id delegate;	// G=0x19231; S=0x5835; converted property
@property(retain) id queue;	// G=0x191a5; S=0x2ed9; converted property
+ (id)compatibleAudioRouteForRoute:(id)route;	// 0x1946d
+ (void)setEnableNetworkMode:(BOOL)mode;	// 0xde31
+ (BOOL)isSupportedMimeType:(id)type;	// 0x19415
+ (BOOL)isSupportedFileExtension:(id)extension;	// 0x193bd
+ (BOOL)isNetworkSupportedPath:(id)path;	// 0xcb55
+ (id)avController;	// 0x19381
+ (id)avControllerWithQueue:(id)queue error:(id *)error;	// 0x19341
+ (id)convertFigTimeDictionaryToTimeIntervalWithKey:(id)key stringURLToNSURLWithKey:(id)key2 inDictionaries:(id)dictionaries;	// 0x19245
- (id)initWithError:(id *)error;	// 0x2d21
- (void)setAVItemClass:(Class)aClass;	// 0x19175
- (id)init;	// 0x28d9
- (id)initForStreaming;	// 0x1bb89
- (void)dealloc;	// 0x13cd1
- (AVControllerPrivate *)privateStorage;	// 0x19189
- (BOOL)isNewImageAvailableForTime:(const XXStruct_pwHToB *)time willNeverBeAvailable:(BOOL *)available;	// 0x19199
- (long)copyImageForTime:(CVBufferRef *)time time:(const XXStruct_pwHToB *)time2;	// 0x1919d
- (void)scheduleQueueSpaceCheck;	// 0x9939
- (void)checkQueueSpace;	// 0x5ff9
// converted property getter: - (id)queue;	// 0x191a5
- (void)feederRangeWasInserted:(id)inserted;	// 0x1b8d1
- (void)feederRangeWasRemoved:(id)removed;	// 0x1b625
- (void)feederInvalidatedWithCurrentItemMoved:(id)currentItemMoved;	// 0x1b469
- (void)setQueueFeeder:(id)feeder withIndex:(int)index;	// 0x5ad1
// converted property setter: - (void)setQueueFeeder:(id)feeder;	// 0xd9d9
// converted property getter: - (id)queueFeeder;	// 0x191b9
- (BOOL)setRepeatMode:(int)mode;	// 0x5aa1
- (int)repeatMode;	// 0xd9c5
- (BOOL)havePlayedCurrentItem;	// 0x191cd
- (void)continueAfterRepeatGap;	// 0x1b455
- (void)cancelContinueAfterRepeatGap;	// 0x9b0d
- (BOOL)beginRepeatGap;	// 0xe269
- (BOOL)play:(id *)play;	// 0x1b439
- (void)pause;	// 0xcc41
- (void)dequeueFirstItem;	// 0xcef1
- (unsigned)indexOfCurrentQueueFeederItem;	// 0xcc55
- (BOOL)setIndexOfCurrentQueueFeederItem:(unsigned)currentQueueFeederItem error:(id *)error;	// 0xccc1
- (id)addNextFeederItemToQueue;	// 0x60a1
- (BOOL)playNextItem:(id *)item;	// 0xce81
- (float)rate;	// 0x8651
- (BOOL)shouldBeginPlayingItem:(id)item error:(id *)error;	// 0xae69
- (BOOL)setRate:(float)rate error:(id *)error;	// 0x99c1
- (BOOL)resumePlayback:(double)playback error:(id *)error;	// 0x1b311
- (id)errorWithDescription:(id)description code:(long)code;	// 0x1b279
- (void)makeError:(id *)error withDescription:(id)description code:(long)code;	// 0xd999
- (BOOL)beginInterruption:(id *)interruption;	// 0x1b1b5
- (BOOL)canBeginInterruption;	// 0x1b141
- (BOOL)activate:(id *)activate;	// 0x1b07d
- (void)endInterruptionWithStatus:(id)status;	// 0x1b025
// converted property getter: - (float)volume;	// 0x57d1
// converted property setter: - (void)setVolume:(float)volume;	// 0xddad
// converted property getter: - (double)currentTime;	// 0x5d89
// converted property setter: - (void)setCurrentTime:(double)time;	// 0x1b001
- (void)setCurrentTime:(double)time options:(int)options;	// 0xda91
- (void)seekToDate:(id)date;	// 0x1afb5
- (void)stepByCount:(int)count;	// 0x1af85
// converted property getter: - (BOOL)muted;	// 0x1aee9
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x1ae49
- (void)setEQPreset:(int)preset;	// 0x587d
- (int)eqPreset;	// 0x191e1
// converted property getter: - (OpaqueFigVisualContext *)visualContext;	// 0x191f5
// converted property setter: - (void)setVisualContext:(OpaqueFigVisualContext *)context;	// 0x1ade9
// converted property getter: - (id)outputQTESFilePath;	// 0xa399
// converted property setter: - (void)setOutputQTESFilePath:(id)path;	// 0x1adb9
- (id)lkLayer;	// 0x19209
- (void)setLayer:(id)layer;	// 0x5a31
// converted property getter: - (BOOL)shouldDisplayClosedCaptions;	// 0x1921d
// converted property setter: - (void)setShouldDisplayClosedCaptions:(BOOL)displayClosedCaptions;	// 0x592d
- (void)setSubtitleRecipient:(id)recipient;	// 0x58e9
- (id)attributeForKey:(id)key;	// 0x4fc5
- (void)setApplyVideoTrackMatrix;	// 0x1acf1
- (BOOL)setAttribute:(id)attribute forKey:(id)key error:(id *)error;	// 0x3955
- (long)updateActionAtEnd;	// 0x5941
- (BOOL)okToNotifyFromThisThread;	// 0x83b9
- (CGImageRef)grabCGImageAtTime:(double)time withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions actualTime:(double *)time4;	// 0x137f9
- (void)requestAsyncCGImagesAtTimes:(id)times withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x1accd
- (void)requestAsyncCGImagesAtTimes:(id)times requestIDs:(id)ids withTimeOptions:(int)timeOptions withImageOptions:(id)imageOptions;	// 0x1aacd
- (void)cancelAllCGImageRequests;	// 0x1aa95
- (void)fmpEffectiveVolumeDidChange;	// 0x1a979
- (void)rateDidChangeToRate:(float)rate;	// 0xbb11
- (void)applyDesiredRepeatMode;	// 0x1a43d
- (void)currentItemWillChangeToItem:(id)currentItem oldItemCurrentTime:(double)time;	// 0x8085
- (void)currentItemHasChanged:(id)changed;	// 0x84f1
- (void)itemHasFinishedPlayingNotification:(id)notification;	// 0xe1bd
// converted property getter: - (id)delegate;	// 0x19231
// converted property setter: - (void)setDelegate:(id)delegate;	// 0x5835
- (void)safeSubtitleCommandPosted:(void *)posted;	// 0x1a3b5
- (id)initWithQueue:(id)queue error:(id *)error;	// 0x28ed
- (BOOL)isValid;	// 0x1a34d
- (id)_figPlayerNotifications;	// 0x1a1f1
- (id)initWithQueue:(id)queue fmpType:(unsigned)type error:(id *)error;	// 0x2921
- (void)logPerformanceDataForCurrentItem;	// 0x1a079
// converted property setter: - (void)setQueue:(id)queue;	// 0x2ed9
- (void)updateTimeMarkerObservations;	// 0xb071
- (void)scheduleUpdateTimeMarkerObservations;	// 0x86ad
- (void)registerTimeMarkerObserver:(id)observer forItem:(id)item times:(id)times context:(id)context;	// 0x19f11
- (void)removeObserver:(id)observer fromTMOArray:(id)tmoarray;	// 0xd645
- (void)unregisterTimeMarkerObserver:(id)observer forItem:(id)item;	// 0xd4c1
- (BOOL)isCurrentItemReady;	// 0x19ec1
- (void)makeCurrentItemReady;	// 0x9b4d
- (id)currentItem;	// 0x5e51
- (OpaqueFigPlaybackItem *)currentFPItem;	// 0x5e31
- (void)ensurePlaybackQueueImmed;	// 0x19ea1
- (id)bookmarkGroupIDForAVItem:(id)avitem;	// 0x7d05
- (double)bookmarkTimeForAVItem:(id)avitem;	// 0x7d29
- (OpaqueFigPlaybackItem *)createItemWithURL:(id)url flags:(unsigned long)flags error:(int *)error;	// 0xa23d
- (BOOL)setPickedRouteWithPassword:(id)password withPassword:(id)password2;	// 0x19db9
- (void)avPlaybackQueueCurrentItemChangedNotification:(id)notification;	// 0x369d
- (void)dequeueDeadItem;	// 0x19d89
- (void)fpItemNotification:(id)notification sender:(id)sender;	// 0x8959
- (void)figPlayerNotificationHandler:(id)handler;	// 0x19571
@end

@interface AVController (AVController_Celeste)
@property(assign) BOOL vibrationEnabled;	// G=0x19049; S=0x19061; converted property
@property(retain) id vibrationPattern;	// G=0x19139; S=0x190b9; converted property
// converted property getter: - (BOOL)vibrationEnabled;	// 0x19049
// converted property setter: - (void)setVibrationEnabled:(BOOL)enabled;	// 0x19061
// converted property setter: - (void)setVibrationPattern:(id)pattern;	// 0x190b9
// converted property getter: - (id)vibrationPattern;	// 0x19139
@end
