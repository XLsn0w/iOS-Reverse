/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

#import <StoreServices/XXUnknownSuperclass.h>
#import <StoreServices/SSCoding.h>
#import <StoreServices/NSCoding.h>
#import <StoreServices/NSCopying.h>
#import <StoreServices/StoreServices-Structs.h>

@class SSItemImageCollection, NSMutableDictionary, NSNumber, NSLock, NSString, NSURL, NSDate, NSDictionary, NSData, NSArray;

@interface SSDownloadMetadata : XXUnknownSuperclass <SSCoding, NSCoding, NSCopying> {
@private
	NSMutableDictionary *_dictionary;	// 4 = 0x4
	int _keyStyle;	// 8 = 0x8
	NSLock *_lock;	// 12 = 0xc
}
@property(retain) NSArray *sinfs;	// G=0xb911; S=0xaef5; 
@property(retain) NSString *sortTitle;	// G=0x916d; S=0x8ed1; 
@property(retain) NSString *sortCollectionName;	// G=0x90f9; S=0x8eb5; 
@property(retain) NSString *sortArtistName;	// G=0x9085; S=0x8e99; 
@property(assign) BOOL shouldDownloadAutomatically;	// G=0xb8b9; S=0xaeb1; 
@property(readonly, assign, getter=isContentRestricted) BOOL contentRestricted;	// G=0x99dd; 
@property(copy) id requiredDeviceCapabilities;	// G=0xa999; S=0xae95; 
@property(retain) NSString *releaseDateString;	// G=0xa8d9; S=0xae49; 
@property(assign, getter=isRedownloadDownload) BOOL redownloadDownload;	// G=0x9a35; S=0xae05; 
@property(copy) NSString *redownloadActionParameters;	// G=0xa84d; S=0xade9; 
@property(retain) NSURL *primaryAssetURL;	// G=0xa7c1; S=0xadad; 
@property(assign) unsigned long long preOrderIdentifier;	// G=0xa749; S=0xad69; 
@property(readonly, assign) NSNumber *numberOfBytesToHash;	// G=0xa69d; 
@property(readonly, assign) NSArray *MD5HashStrings;	// G=0x9a8d; 
@property(retain) NSString *fileExtension;	// G=0x98d9; S=0xab79; 
@property(retain) NSData *epubRightsData;	// G=0x9879; S=0xab5d; 
@property(retain) NSString *downloadKey;	// G=0x9819; S=0xab41; 
@property(retain) NSDictionary *dictionary;	// G=0x97e1; S=0xaabd; 
@property(retain) NSString *copyright;	// G=0x9671; S=0xaaa1; 
@property(retain) NSURL *cancelDownloadURL;	// G=0x95f1; S=0xaa65; 
@property(assign, getter=isAutomaticDownload) BOOL automaticDownload;	// G=0x9985; S=0xaa21; 
@property(assign) int keyStyle;	// G=0x9939; S=0xab95; 
@property(retain) NSURL *thumbnailImageURL;	// G=0x9451; S=0x8f35; 
@property(retain) NSString *thumbnailNewsstandBindingType;	// G=0x93bd; S=0x8f19; 
@property(retain) NSString *thumbnailNewsstandBindingEdge;	// G=0x9329; S=0x8efd; 
@property(readonly, assign) SSItemImageCollection *thumbnailImageCollection;	// G=0x91f1; 
@property(retain) NSString *transactionIdentifier;	// G=0x94f5; S=0x8fb1; 
@property(retain) NSString *title;	// G=0x9479; S=0x8f71; 
@property(retain) NSString *subtitle;	// G=0x91e1; S=0x8eed; 
@property(copy) NSString *shortDescription;	// G=0x9025; S=0x8e7d; 
@property(retain) NSNumber *releaseYear;	// G=0x83c9; S=0x8d41; 
@property(retain) NSDate *releaseDate;	// G=0x8399; S=0x8cf5; 
@property(copy) NSString *longDescription;	// G=0x80b1; S=0x8b65; 
@property(retain) NSString *kind;	// G=0x8051; S=0x8b49; 
@property(assign) unsigned long long itemIdentifier;	// G=0x800d; S=0x8ae1; 
@property(assign) unsigned long long genreIdentifier;	// G=0x7e01; S=0x8a2d; 
@property(retain) NSString *genre;	// G=0x7d85; S=0x8a11; 
@property(retain) NSURL *fullSizeImageURL;	// G=0x7c5d; S=0x89d5; 
@property(copy) NSString *artistName;	// G=0x76f9; S=0x8649; 
@property(assign) unsigned long long artistIdentifier;	// G=0x76bd; S=0x85e1; 
@property(retain) id viewStoreItemURL;	// G=0x95b5; S=0x8fe9; converted property
@property(retain) id videoDetailsDictionary;	// G=0x9555; S=0x8fcd; converted property
@property(retain) id longSeasonDescription;	// G=0x8581; S=0x8e61; converted property
@property(retain) id seriesName;	// G=0x850d; S=0x8e45; converted property
@property(retain) id seasonNumber;	// G=0x84ad; S=0x8e29; converted property
@property(assign, getter=isSample) BOOL sample;	// G=0x7fb5; S=0x8de5; converted property
@property(assign) unsigned long long sagaIdentifier;	// G=0x8429; S=0x8da1; converted property
@property(assign, getter=isRental) BOOL rental;	// G=0x7f5d; S=0x8d5d; converted property
@property(retain) id purchaseDate;	// G=0x835d; S=0x8cd9; converted property
@property(retain) id podcastType;	// G=0x82fd; S=0x8cbd; converted property
@property(retain) id podcastFeedURL;	// G=0x82c1; S=0x8c81; converted property
@property(retain) id podcastEpisodeGUID;	// G=0x8261; S=0x8c65; converted property
@property(retain) id numberOfItemsInCollection;	// G=0x81f1; S=0x8c19; converted property
@property(retain) id numberOfCollectionsInCollectionGroup;	// G=0x8181; S=0x8bcd; converted property
@property(retain) id networkName;	// G=0x8121; S=0x8bb1; converted property
@property(retain) id indexInCollection;	// G=0x7e3d; S=0x8a95; converted property
@property(assign, getter=isExplicitContent) BOOL explicitContent;	// G=0x7f05; S=0x8991; converted property
@property(retain) id episodeSortIdentifier;	// G=0x7be9; S=0x8975; converted property
@property(retain) id episodeIdentifier;	// G=0x7bad; S=0x8959; converted property
@property(retain) id durationInMilliseconds;	// G=0x7b4d; S=0x893d; converted property
@property(retain) id documentTargetIdentifier;	// G=0x7aed; S=0x8921; converted property
@property(retain) id contentRating;	// G=0x7a4d; S=0x88e5; converted property
@property(retain) id composerName;	// G=0x79ed; S=0x88c9; converted property
@property(assign) unsigned long long composerIdentifier;	// G=0x79b1; S=0x8861; converted property
@property(assign, getter=isCompilation) BOOL compilation;	// G=0x7ead; S=0x881d; converted property
@property(retain) id collectionName;	// G=0x7941; S=0x87d1; converted property
@property(retain) id collectionIndexInCollectionGroup;	// G=0x78d1; S=0x8785; converted property
@property(assign) unsigned long long collectionIdentifier;	// G=0x7895; S=0x871d; converted property
@property(retain) id collectionArtistName;	// G=0x7835; S=0x8701; converted property
@property(retain) id bundleIdentifier;	// G=0x77c5; S=0x86e5; converted property
@property(assign) BOOL artworkIsPrerendered;	// G=0x7769; S=0x8695; converted property
- (id)_valueForFirstAvailableTopLevelKey:(id)firstAvailableTopLevelKey;	// 0xc11d
- (id)_urlValueForValue:(id)value;	// 0xc099
- (id)_thumbnailArtworkImage;	// 0xbfc9
- (id)_stringValueForValue:(id)value;	// 0xbf51
- (void)_setValueCopy:(id)copy forMetadataKey:(id)metadataKey;	// 0xbf09
- (void)_setValue:(id)value forTopLevelKey:(id)topLevelKey;	// 0xbe4d
- (id)_releaseDateValue;	// 0xbe19
- (id)_newDateFormatter;	// 0xbd81
- (id)_newImageCollectionWithURLString:(id)urlstring;	// 0xbb41
- (id)_dateValueForValue:(id)value;	// 0xba91
- (id)valueForMetadataKey:(id)metadataKey;	// 0xba79
- (id)valueForFirstAvailableKey:(id)firstAvailableKey;	// 0xb971
// declared property getter: - (id)sinfs;	// 0xb911
// declared property getter: - (BOOL)shouldDownloadAutomatically;	// 0xb8b9
- (void)setValuesFromDownload:(id)download;	// 0xb091
- (void)setValue:(id)value forMetadataKey:(id)metadataKey;	// 0xaf11
// declared property setter: - (void)setSinfs:(id)sinfs;	// 0xaef5
// declared property setter: - (void)setShouldDownloadAutomatically:(BOOL)downloadAutomatically;	// 0xaeb1
// declared property setter: - (void)setRequiredDeviceCapabilities:(id)capabilities;	// 0xae95
// declared property setter: - (void)setReleaseDateString:(id)string;	// 0xae49
// declared property setter: - (void)setRedownloadDownload:(BOOL)download;	// 0xae05
// declared property setter: - (void)setRedownloadActionParameters:(id)parameters;	// 0xade9
// declared property setter: - (void)setPrimaryAssetURL:(id)url;	// 0xadad
// declared property setter: - (void)setPreOrderIdentifier:(unsigned long long)identifier;	// 0xad69
- (void)setMD5HashStrings:(id)strings numberOfBytesToHash:(id)hash;	// 0xabe1
// declared property setter: - (void)setKeyStyle:(int)style;	// 0xab95
// declared property setter: - (void)setFileExtension:(id)extension;	// 0xab79
// declared property setter: - (void)setEpubRightsData:(id)data;	// 0xab5d
// declared property setter: - (void)setDownloadKey:(id)key;	// 0xab41
// declared property setter: - (void)setDictionary:(id)dictionary;	// 0xaabd
// declared property setter: - (void)setCopyright:(id)copyright;	// 0xaaa1
// declared property setter: - (void)setCancelDownloadURL:(id)url;	// 0xaa65
// declared property setter: - (void)setAutomaticDownload:(BOOL)download;	// 0xaa21
// declared property getter: - (id)requiredDeviceCapabilities;	// 0xa999
// declared property getter: - (id)releaseDateString;	// 0xa8d9
// declared property getter: - (id)redownloadActionParameters;	// 0xa84d
// declared property getter: - (id)primaryAssetURL;	// 0xa7c1
// declared property getter: - (unsigned long long)preOrderIdentifier;	// 0xa749
// declared property getter: - (id)numberOfBytesToHash;	// 0xa69d
- (id)newDownloadProperties;	// 0x9b99
// declared property getter: - (id)MD5HashStrings;	// 0x9a8d
// declared property getter: - (BOOL)isRedownloadDownload;	// 0x9a35
// declared property getter: - (BOOL)isContentRestricted;	// 0x99dd
// declared property getter: - (BOOL)isAutomaticDownload;	// 0x9985
// declared property getter: - (int)keyStyle;	// 0x9939
// declared property getter: - (id)fileExtension;	// 0x98d9
// declared property getter: - (id)epubRightsData;	// 0x9879
// declared property getter: - (id)downloadKey;	// 0x9819
// declared property getter: - (id)dictionary;	// 0x97e1
- (id)copyWritableMetadata;	// 0x96d1
// declared property getter: - (id)copyright;	// 0x9671
// declared property getter: - (id)cancelDownloadURL;	// 0x95f1
// converted property getter: - (id)viewStoreItemURL;	// 0x95b5
// converted property getter: - (id)videoDetailsDictionary;	// 0x9555
// declared property getter: - (id)transactionIdentifier;	// 0x94f5
// declared property getter: - (id)title;	// 0x9479
// declared property getter: - (id)thumbnailImageURL;	// 0x9451
// declared property getter: - (id)thumbnailNewsstandBindingType;	// 0x93bd
// declared property getter: - (id)thumbnailNewsstandBindingEdge;	// 0x9329
// declared property getter: - (id)thumbnailImageCollection;	// 0x91f1
// declared property getter: - (id)subtitle;	// 0x91e1
// declared property getter: - (id)sortTitle;	// 0x916d
// declared property getter: - (id)sortCollectionName;	// 0x90f9
// declared property getter: - (id)sortArtistName;	// 0x9085
// declared property getter: - (id)shortDescription;	// 0x9025
// converted property setter: - (void)setViewStoreItemURL:(id)url;	// 0x8fe9
// converted property setter: - (void)setVideoDetailsDictionary:(id)dictionary;	// 0x8fcd
// declared property setter: - (void)setTransactionIdentifier:(id)identifier;	// 0x8fb1
// declared property setter: - (void)setTitle:(id)title;	// 0x8f71
// declared property setter: - (void)setThumbnailImageURL:(id)url;	// 0x8f35
// declared property setter: - (void)setThumbnailNewsstandBindingType:(id)type;	// 0x8f19
// declared property setter: - (void)setThumbnailNewsstandBindingEdge:(id)edge;	// 0x8efd
// declared property setter: - (void)setSubtitle:(id)subtitle;	// 0x8eed
// declared property setter: - (void)setSortTitle:(id)title;	// 0x8ed1
// declared property setter: - (void)setSortCollectionName:(id)name;	// 0x8eb5
// declared property setter: - (void)setSortArtistName:(id)name;	// 0x8e99
// declared property setter: - (void)setShortDescription:(id)description;	// 0x8e7d
// converted property setter: - (void)setLongSeasonDescription:(id)description;	// 0x8e61
// converted property setter: - (void)setSeriesName:(id)name;	// 0x8e45
// converted property setter: - (void)setSeasonNumber:(id)number;	// 0x8e29
// converted property setter: - (void)setSample:(BOOL)sample;	// 0x8de5
// converted property setter: - (void)setSagaIdentifier:(unsigned long long)identifier;	// 0x8da1
// converted property setter: - (void)setRental:(BOOL)rental;	// 0x8d5d
// declared property setter: - (void)setReleaseYear:(id)year;	// 0x8d41
// declared property setter: - (void)setReleaseDate:(id)date;	// 0x8cf5
// converted property setter: - (void)setPurchaseDate:(id)date;	// 0x8cd9
// converted property setter: - (void)setPodcastType:(id)type;	// 0x8cbd
// converted property setter: - (void)setPodcastFeedURL:(id)url;	// 0x8c81
// converted property setter: - (void)setPodcastEpisodeGUID:(id)guid;	// 0x8c65
// converted property setter: - (void)setNumberOfItemsInCollection:(id)collection;	// 0x8c19
// converted property setter: - (void)setNumberOfCollectionsInCollectionGroup:(id)collectionGroup;	// 0x8bcd
// converted property setter: - (void)setNetworkName:(id)name;	// 0x8bb1
// declared property setter: - (void)setLongDescription:(id)description;	// 0x8b65
// declared property setter: - (void)setKind:(id)kind;	// 0x8b49
// declared property setter: - (void)setItemIdentifier:(unsigned long long)identifier;	// 0x8ae1
// converted property setter: - (void)setIndexInCollection:(id)collection;	// 0x8a95
// declared property setter: - (void)setGenreIdentifier:(unsigned long long)identifier;	// 0x8a2d
// declared property setter: - (void)setGenre:(id)genre;	// 0x8a11
// declared property setter: - (void)setFullSizeImageURL:(id)url;	// 0x89d5
// converted property setter: - (void)setExplicitContent:(BOOL)content;	// 0x8991
// converted property setter: - (void)setEpisodeSortIdentifier:(id)identifier;	// 0x8975
// converted property setter: - (void)setEpisodeIdentifier:(id)identifier;	// 0x8959
// converted property setter: - (void)setDurationInMilliseconds:(id)milliseconds;	// 0x893d
// converted property setter: - (void)setDocumentTargetIdentifier:(id)identifier;	// 0x8921
// converted property setter: - (void)setContentRating:(id)rating;	// 0x88e5
// converted property setter: - (void)setComposerName:(id)name;	// 0x88c9
// converted property setter: - (void)setComposerIdentifier:(unsigned long long)identifier;	// 0x8861
// converted property setter: - (void)setCompilation:(BOOL)compilation;	// 0x881d
// converted property setter: - (void)setCollectionName:(id)name;	// 0x87d1
// converted property setter: - (void)setCollectionIndexInCollectionGroup:(id)collectionGroup;	// 0x8785
// converted property setter: - (void)setCollectionIdentifier:(unsigned long long)identifier;	// 0x871d
// converted property setter: - (void)setCollectionArtistName:(id)name;	// 0x8701
// converted property setter: - (void)setBundleIdentifier:(id)identifier;	// 0x86e5
// converted property setter: - (void)setArtworkIsPrerendered:(BOOL)prerendered;	// 0x8695
// declared property setter: - (void)setArtistName:(id)name;	// 0x8649
// declared property setter: - (void)setArtistIdentifier:(unsigned long long)identifier;	// 0x85e1
// converted property getter: - (id)longSeasonDescription;	// 0x8581
// converted property getter: - (id)seriesName;	// 0x850d
// converted property getter: - (id)seasonNumber;	// 0x84ad
// converted property getter: - (unsigned long long)sagaIdentifier;	// 0x8429
// declared property getter: - (id)releaseYear;	// 0x83c9
// declared property getter: - (id)releaseDate;	// 0x8399
// converted property getter: - (id)purchaseDate;	// 0x835d
// converted property getter: - (id)podcastType;	// 0x82fd
// converted property getter: - (id)podcastFeedURL;	// 0x82c1
// converted property getter: - (id)podcastEpisodeGUID;	// 0x8261
// converted property getter: - (id)numberOfItemsInCollection;	// 0x81f1
// converted property getter: - (id)numberOfCollectionsInCollectionGroup;	// 0x8181
// converted property getter: - (id)networkName;	// 0x8121
// declared property getter: - (id)longDescription;	// 0x80b1
// declared property getter: - (id)kind;	// 0x8051
// declared property getter: - (unsigned long long)itemIdentifier;	// 0x800d
// converted property getter: - (BOOL)isSample;	// 0x7fb5
// converted property getter: - (BOOL)isRental;	// 0x7f5d
// converted property getter: - (BOOL)isExplicitContent;	// 0x7f05
// converted property getter: - (BOOL)isCompilation;	// 0x7ead
// converted property getter: - (id)indexInCollection;	// 0x7e3d
// declared property getter: - (unsigned long long)genreIdentifier;	// 0x7e01
// declared property getter: - (id)genre;	// 0x7d85
// declared property getter: - (id)fullSizeImageURL;	// 0x7c5d
// converted property getter: - (id)episodeSortIdentifier;	// 0x7be9
// converted property getter: - (id)episodeIdentifier;	// 0x7bad
// converted property getter: - (id)durationInMilliseconds;	// 0x7b4d
// converted property getter: - (id)documentTargetIdentifier;	// 0x7aed
// converted property getter: - (id)contentRating;	// 0x7a4d
// converted property getter: - (id)composerName;	// 0x79ed
// converted property getter: - (unsigned long long)composerIdentifier;	// 0x79b1
// converted property getter: - (id)collectionName;	// 0x7941
// converted property getter: - (id)collectionIndexInCollectionGroup;	// 0x78d1
// converted property getter: - (unsigned long long)collectionIdentifier;	// 0x7895
// converted property getter: - (id)collectionArtistName;	// 0x7835
// converted property getter: - (id)bundleIdentifier;	// 0x77c5
// converted property getter: - (BOOL)artworkIsPrerendered;	// 0x7769
// declared property getter: - (id)artistName;	// 0x76f9
// declared property getter: - (unsigned long long)artistIdentifier;	// 0x76bd
- (id)applicationIdentifier;	// 0x7655
- (id)initWithXPCEncoding:(void *)xpcencoding;	// 0x7619
- (id)initWithPropertyListEncoding:(id)propertyListEncoding;	// 0x7609
- (void *)copyXPCEncoding;	// 0x75f5
- (id)copyPropertyListEncoding;	// 0x75d5
- (id)copyWithZone:(NSZone *)zone;	// 0x752d
- (id)initWithCoder:(id)coder;	// 0x71c9
- (void)encodeWithCoder:(id)coder;	// 0x70cd
- (void)dealloc;	// 0x706d
- (id)initWithKind:(id)kind;	// 0x7039
- (id)initWithItem:(id)item offer:(id)offer;	// 0x67f9
- (id)initWithItem:(id)item;	// 0x67c5
- (id)initWithDictionary:(id)dictionary;	// 0x6741
- (id)init;	// 0x672d
@end
