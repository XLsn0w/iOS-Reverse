/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import <AssistantServices/AVVoiceControllerRecordDelegate.h>
#import <AssistantServices/assistantd-Structs.h>
#import <AssistantServices/XXUnknownSuperclass.h>

@class NSURL, NSString, AVVoiceController, AFDictationOptions, ADSpeechLog, NSError;
@protocol ADSpeechManagerDelegate;

__attribute__((visibility("hidden")))
@interface ADSpeechManager : XXUnknownSuperclass <AVVoiceControllerRecordDelegate> {
	dispatch_queue_s *_queue;	// 4 = 0x4
	int _speechState;	// 8 = 0x8
	BOOL _shouldTalkToDelegate;	// 12 = 0xc
	AVVoiceController *_voiceController;	// 16 = 0x10
	BOOL _isPrepared;	// 20 = 0x14
	NSError *_recordingError;	// 24 = 0x18
	BOOL _isCapturingForDictation;	// 28 = 0x1c
	NSURL *_dictationStartURL;	// 32 = 0x20
	NSURL *_dictationStopURL;	// 36 = 0x24
	NSURL *_dictationErrorURL;	// 40 = 0x28
	NSURL *_assistantStartURL;	// 44 = 0x2c
	NSURL *_assistantStopURL;	// 48 = 0x30
	NSURL *_assistantErrorURL;	// 52 = 0x34
	NSString *_bluetoothDeviceAddress;	// 56 = 0x38
	BOOL _pickWiredMic;	// 60 = 0x3c
	BOOL _routeNeedsPicking;	// 61 = 0x3d
	int _desiredHWConfig;	// 64 = 0x40
	BOOL _needToSetHWConfig;	// 68 = 0x44
	NSString *_dictationLanguage;	// 72 = 0x48
	AFDictationOptions *_dictationOptions;	// 76 = 0x4c
	id<ADSpeechManagerDelegate> _delegate;	// 80 = 0x50
	dispatch_queue_s *_targetQueue;	// 84 = 0x54
	BOOL _didDetectStartpoint;	// 88 = 0x58
	BOOL _didTimeout;	// 89 = 0x59
	int _packetCount;	// 92 = 0x5c
	int _powerUpdateFrequency;	// 96 = 0x60
	dispatch_source_s *_powerUpdateTimer;	// 100 = 0x64
	id _recordStartedCompletion;	// 104 = 0x68
	id _recordStoppedCompletion;	// 108 = 0x6c
	ADSpeechLog *_speechLog;	// 112 = 0x70
	id _context;	// 116 = 0x74
}
@property(copy, nonatomic, setter=_setRecordStoppedCompletion:) id _recordStoppedCompletion;	// G=0x24851; S=0x24861; @synthesize
@property(copy, nonatomic, setter=_setRecordStartedCompletion:) id _recordStartedCompletion;	// G=0x2481d; S=0x2482d; @synthesize
@property(retain, nonatomic, setter=_setRecordingError:) NSError *_recordingError;	// G=0x247e9; S=0x247f9; @synthesize
@property(copy, nonatomic, setter=_setBluetoothDeviceAddress:) NSString *_bluetoothDeviceAddress;	// G=0x2474d; S=0x2475d; @synthesize
@property(retain, nonatomic) id context;	// G=0x24885; S=0x24895; @synthesize=_context
@property(retain, nonatomic) AFDictationOptions *dictationOptions;	// G=0x247b5; S=0x247c5; @synthesize=_dictationOptions
@property(copy, nonatomic) NSString *dictationLanguage;	// G=0x24781; S=0x24791; @synthesize=_dictationLanguage
@property(readonly, assign) BOOL isCapturing;	// G=0x235b9; 
+ (id)recordingInterruptedError;	// 0x206c5
+ (id)_noStartpointError;	// 0x20689
+ (id)_speechTimedOutError;	// 0x2064d
+ (id)_speechLogDecodingError;	// 0x20611
+ (id)_speechEndFailureError;	// 0x205d5
+ (id)_speechStartFailureError;	// 0x20599
+ (id)_speechCodecError;	// 0x2055d
+ (id)_badStateError;	// 0x20521
// declared property setter: - (void)setContext:(id)context;	// 0x24895
// declared property getter: - (id)context;	// 0x24885
// declared property setter: - (void)_setRecordStoppedCompletion:(id)completion;	// 0x24861
// declared property getter: - (id)_recordStoppedCompletion;	// 0x24851
// declared property setter: - (void)_setRecordStartedCompletion:(id)completion;	// 0x2482d
// declared property getter: - (id)_recordStartedCompletion;	// 0x2481d
// declared property setter: - (void)_setRecordingError:(id)error;	// 0x247f9
// declared property getter: - (id)_recordingError;	// 0x247e9
// declared property setter: - (void)setDictationOptions:(id)options;	// 0x247c5
// declared property getter: - (id)dictationOptions;	// 0x247b5
// declared property setter: - (void)setDictationLanguage:(id)language;	// 0x24791
// declared property getter: - (id)dictationLanguage;	// 0x24781
// declared property setter: - (void)_setBluetoothDeviceAddress:(id)address;	// 0x2475d
// declared property getter: - (id)_bluetoothDeviceAddress;	// 0x2474d
- (void)setRecordingAlertRoute:(int)route;	// 0x24665
- (void)setBTAddressToPickRoute:(id)pickRoute wiredMic:(BOOL)mic;	// 0x24585
- (void)endSession;	// 0x241a5
- (void)stopSpeechCapture;	// 0x23f59
- (void)cancelSpeechCapture;	// 0x23ccd
- (void)startSpeechCaptureWithURL:(id)url;	// 0x23b11
- (void)startSpeechCaptureForDictation:(BOOL)dictation;	// 0x2369d
// declared property getter: - (BOOL)isCapturing;	// 0x235b9
- (void)setDelegate:(id)delegate andTargetQueue:(dispatch_queue_s *)queue;	// 0x234e1
- (void)preheatAudioSystem;	// 0x23461
- (void)voiceControllerRecordHardwareConfigurationDidChange:(id)voiceControllerRecordHardwareConfiguration toConfiguration:(int)configuration;	// 0x23415
- (void)voiceControllerEndRecordInterruption:(id)interruption;	// 0x233cd
- (void)voiceControllerBeginRecordInterruption:(id)interruption;	// 0x23385
- (void)voiceControllerRecordBufferAvailable:(id)available buffer:(id)buffer;	// 0x23035
- (void)voiceControllerDidStopRecording:(id)voiceController forReason:(int)reason;	// 0x22e59
- (void)voiceControllerDidDetectEndpoint:(id)voiceController;	// 0x22d51
- (void)voiceControllerDidDetectEndpoint:(id)voiceController ofType:(int)type;	// 0x22c21
- (void)voiceControllerDidDetectStartpoint:(id)voiceController;	// 0x22b65
- (void)voiceControllerCodecErrorDidOccur:(id)voiceControllerCodecError wasEncode:(BOOL)encode wasDecode:(BOOL)decode error:(id)error;	// 0x22b19
- (void)voiceControllerDidStartRecording:(id)voiceController successfully:(BOOL)successfully;	// 0x224a9
- (void)_pickRouteForBluetoothAddress:(id)bluetoothAddress wiredMic:(BOOL)mic;	// 0x21f8d
- (void)_setExtendedWaitTime;	// 0x21f01
- (id)_errorForRecordingStoppedReason:(int)recordingStoppedReason;	// 0x21e81
- (void)_recordingStoppedWithError:(id)error shouldPlayAlert:(BOOL)alert;	// 0x21c59
- (void)_cancelRecordingWithError:(id)error;	// 0x21c0d
- (void)_cleanupPowerTimer;	// 0x21b9d
- (void)_setupPowerTimer;	// 0x21951
- (void)_tellDelegateAboutAveragePower:(float)power peak:(float)peak;	// 0x21839
- (void)_tellDelegateAboutSpeechPackets:(id)packets count:(int)count;	// 0x21709
- (void)_tellDelegateSpeechStartedForDictation:(BOOL)dictation withCodec:(id)codec source:(id)source;	// 0x215bd
- (void)_tellDelegateSpeechWillBegin;	// 0x2159d
- (void)_tellDelegateSpeechFinishedWithPacketCount:(int)packetCount;	// 0x214a5
- (void)_tellDelegateSpeechFailedWithError:(id)error;	// 0x21381
- (void)_tellDelegateSpeechCanceled;	// 0x21291
- (void)_cleanUpDelegateInfo;	// 0x21229
- (void)_setUpAlertsForDictation:(BOOL)dictation;	// 0x210d1
- (id)_assistantErrorAlertURL;	// 0x21075
- (id)_assistantStopAlertURL;	// 0x21019
- (id)_assistantStartAlertURL;	// 0x20fbd
- (id)_dictationErrorAlertURL;	// 0x20f95
- (id)_dictationStopAlertURL;	// 0x20f6d
- (id)_dictationStartAlertURL;	// 0x20f45
- (void)_loadDictationAlertURLs;	// 0x20e59
- (void)_releaseSession;	// 0x20e21
- (BOOL)_setUpForCapture;	// 0x20ded
- (void)_setHWConfigIfNeeded;	// 0x20d9d
- (void)_resetVoiceController;	// 0x20d3d
- (BOOL)_prepareVoiceController;	// 0x20b7d
- (id)_voiceController;	// 0x20959
- (void)dealloc;	// 0x207c5
- (id)init;	// 0x20701
@end
