/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import <AssistantServices/assistantd-Structs.h>
#import <AssistantServices/XXUnknownSuperclass.h>
#import <AssistantServices/ADCommandCenter.h>
#import <AssistantServices/ADSessionDelegate.h>
#import <AssistantServices/ADSyncManagerDelegate.h>
#import <AssistantServices/ADSpeechManagerDelegate.h>
#import <AssistantServices/ADHandsFreeStateChangedObserver.h>
#import <AssistantServices/ADContextManagerDelegate.h>
#import <AssistantServices/ADLocationManagerDelegate.h>

@class ADAccount, ADServiceManager, NSMutableSet, SASStartSpeech, ADSession, ADSpeechManager, NSMutableDictionary, ADSyncManager, ADManagedStore, ADUndoManager, ADContextManager, ADRetryManager, ADCommandResultsManager, ADCallObserver, ADLocationManager;
@protocol SAServerBoundCommand, ADCommandCenterClient, ADCommandCenterRequestDelegate, ADCommandCenterSpeechDelegate;

__attribute__((visibility("hidden")))
@interface ADCommandCenter : XXUnknownSuperclass <ADSessionDelegate, ADSyncManagerDelegate, ADSpeechManagerDelegate, ADHandsFreeStateChangedObserver, ADContextManagerDelegate, ADLocationManagerDelegate> {
	dispatch_queue_s *_queue;	// 4 = 0x4
	id<ADCommandCenterClient> _currentClient;	// 8 = 0x8
	id<ADCommandCenterRequestDelegate> _requestDelegate;	// 12 = 0xc
	id<ADCommandCenterSpeechDelegate> _speechDelegate;	// 16 = 0x10
	ADAccount *_account;	// 20 = 0x14
	ADSession *_session;	// 24 = 0x18
	CFDictionaryRef _commandMap;	// 28 = 0x1c
	ADSyncManager *_syncManager;	// 32 = 0x20
	ADSpeechManager *_speechManager;	// 36 = 0x24
	ADServiceManager *_serviceManager;	// 40 = 0x28
	ADUndoManager *_undoManager;	// 44 = 0x2c
	ADContextManager *_contextManager;	// 48 = 0x30
	ADManagedStore *_managedStore;	// 52 = 0x34
	ADRetryManager *_retryManager;	// 56 = 0x38
	ADCommandResultsManager *_commandResultsManager;	// 60 = 0x3c
	ADCallObserver *_callObserver;	// 64 = 0x40
	ADLocationManager *_locationManager;	// 68 = 0x44
	int _callState;	// 72 = 0x48
	id _speechCompletion;	// 76 = 0x4c
	NSMutableSet *_outstandingSyncChunks;	// 80 = 0x50
	int _speechEvent;	// 84 = 0x54
	SASStartSpeech *_startSpeechCommand;	// 88 = 0x58
	id<SAServerBoundCommand> _currentRequest;	// 92 = 0x5c
	id<SAServerBoundCommand> _lastRequest;	// 96 = 0x60
	id<SAServerBoundCommand> _waitingSpeechFinished;	// 100 = 0x64
	struct {
		unsigned waitingOnApp : 1;
		unsigned waitingOnAlert : 1;
	} _contextFetchState;	// 104 = 0x68
	NSMutableSet *_outstandingRequestIds;	// 108 = 0x6c
	NSMutableDictionary *_aceCompletionMap;	// 112 = 0x70
}
@property(retain, nonatomic, setter=_setWaitingSpeechFinished:) id<SAServerBoundCommand> _waitingSpeechFinished;	// G=0x135f9; S=0x13609; @synthesize
@property(retain, nonatomic, setter=_setLastRequest:) id<SAServerBoundCommand> _lastRequest;	// G=0x13661; S=0x13671; @synthesize
@property(retain, nonatomic, setter=_setCurrentRequest:) id<SAServerBoundCommand> _currentRequest;	// G=0x1362d; S=0x1363d; @synthesize
@property(retain, nonatomic, setter=_setStartSpeechCommand:) SASStartSpeech *_startSpeechCommand;	// G=0x135c5; S=0x135d5; @synthesize
@property(copy, nonatomic, setter=_setSpeechCompletion:) id _speechCompletion;	// G=0x13591; S=0x135a1; @synthesize
@property(retain, nonatomic, setter=_setSession:) ADSession *_session;	// G=0x98d1; S=0x1356d; @synthesize
@property(retain, nonatomic, setter=_setAccount:) ADAccount *_account;	// G=0x9b99; S=0x13549; @synthesize
@property(retain, nonatomic, setter=_setSpeechDelegate:) id<ADCommandCenterSpeechDelegate> _speechDelegate;	// G=0x13515; S=0x13525; @synthesize
@property(retain, nonatomic, setter=_setRequestDelegate:) id<ADCommandCenterRequestDelegate> _requestDelegate;	// G=0x134e1; S=0x134f1; @synthesize
@property(readonly, assign, nonatomic) dispatch_queue_s *_queue;	// G=0x134d1; @synthesize
+ (id)sharedCommandCenter;	// 0x9071
// declared property setter: - (void)_setLastRequest:(id)request;	// 0x13671
// declared property getter: - (id)_lastRequest;	// 0x13661
// declared property setter: - (void)_setCurrentRequest:(id)request;	// 0x1363d
// declared property getter: - (id)_currentRequest;	// 0x1362d
// declared property setter: - (void)_setWaitingSpeechFinished:(id)finished;	// 0x13609
// declared property getter: - (id)_waitingSpeechFinished;	// 0x135f9
// declared property setter: - (void)_setStartSpeechCommand:(id)command;	// 0x135d5
// declared property getter: - (id)_startSpeechCommand;	// 0x135c5
// declared property setter: - (void)_setSpeechCompletion:(id)completion;	// 0x135a1
// declared property getter: - (id)_speechCompletion;	// 0x13591
// declared property setter: - (void)_setSession:(id)session;	// 0x1356d
// declared property setter: - (void)_setAccount:(id)account;	// 0x13549
// declared property setter: - (void)_setSpeechDelegate:(id)delegate;	// 0x13525
// declared property getter: - (id)_speechDelegate;	// 0x13515
// declared property setter: - (void)_setRequestDelegate:(id)delegate;	// 0x134f1
// declared property getter: - (id)_requestDelegate;	// 0x134e1
// declared property getter: - (dispatch_queue_s *)_queue;	// 0x134d1
- (void)clientDisconnected:(id)disconnected;	// 0x13365
- (void)clientConnected:(id)connected;	// 0x13251
- (void)fetchContext:(id)context;	// 0x13119
- (void)syncNeeded;	// 0x13099
- (void)syncAnchorKeys:(id)keys forceReset:(BOOL)reset;	// 0x12fd5
- (void)setManagedStoreObject:(id)object forKey:(id)key;	// 0x12f05
- (void)fetchManagedStoreObjectForKey:(id)key completion:(id)completion;	// 0x12e05
- (void)rescheduleValidationRefresh;	// 0x12d85
- (void)refreshAssistantValidation;	// 0x12d05
- (void)destroyAccountWithIdentifier:(id)identifier completion:(id)completion;	// 0x12c19
- (void)setActiveAccountIdentifier:(id)identifier;	// 0x12b69
- (void)fetchActiveAccountIdentifier:(id)identifier;	// 0x12a95
- (void)deleteAccountWithIdentifier:(id)identifier;	// 0x129e5
- (void)fetchAccounts:(id)accounts;	// 0x12911
- (void)redoRequest;	// 0x12891
- (void)undoRequest;	// 0x12811
- (void)fetchSupportedLanguages;	// 0x127fd
- (void)fetchSupportedLanguagesWithCompletion:(id)completion;	// 0x12739
- (void)clearConversationAndSetApplicationContext;	// 0x126b9
- (void)clearContext;	// 0x12639
- (void)handleReplyCommand:(id)command delegate:(id)delegate;	// 0x12569
- (void)handleGenericAceCommand:(id)command withDelegate:(id)delegate;	// 0x12499
- (void)sendSpeechCorrectionInfo:(id)info forCorrectionContext:(id)correctionContext;	// 0x123c9
- (void)setRecordingAlertRoute:(int)route forDelegate:(id)delegate;	// 0x122ad
- (void)setBluetoothDeviceAddress:(id)address;	// 0x121fd
- (void)cancelSpeechForDelegate:(id)delegate;	// 0x1214d
- (void)stopSpeechForDelegate:(id)delegate;	// 0x1209d
- (void)removeDelegate:(id)delegate;	// 0x11fed
- (void)startSpeechCorrectionWithText:(id)text forCorrectionContext:(id)correctionContext delegate:(id)delegate;	// 0x11ef5
- (void)startDictationWithLanguageCode:(id)languageCode options:(id)options delegate:(id)delegate;	// 0x11da9
- (void)rollbackRequestForDelegate:(id)delegate;	// 0x11cf9
- (void)cancelRequestForDelegate:(id)delegate;	// 0x11c49
- (void)startSpeechRequestWithURL:(id)url withDelegate:(id)delegate;	// 0x11b79
- (void)startSpeechRequestWithDelegate:(id)delegate withOptions:(id)options;	// 0x11a0d
- (void)startRequest:(id)request withDelegate:(id)delegate;	// 0x1193d
- (void)endSessionForDelegate:(id)delegate;	// 0x1188d
- (void)setLockState:(BOOL)state;	// 0x11805
- (void)setLanguageCode:(id)code;	// 0x11755
- (void)preheat;	// 0x116d5
- (void)_removeDelegate:(id)delegate;	// 0x11645
- (void)_syncNeeded;	// 0x1161d
- (void)_syncAnchorKeys:(id)keys forceReset:(BOOL)reset;	// 0x114b1
- (id)_managedStoreObjectForKey:(id)key;	// 0x11485
- (void)_setManagedStoreObject:(id)object forKey:(id)key;	// 0x11455
- (void)_rescheduleValidationRefresh;	// 0x11309
- (void)_refreshAssistantValidation;	// 0x1128d
- (void)_destroyAccountWithIdentifier:(id)identifier completion:(id)completion;	// 0x10f6d
- (void)_setActiveAccountIdentifier:(id)identifier;	// 0x10eb9
- (id)_activeAccountIdentifier;	// 0x10e91
- (void)_deleteAccountWithIdentifier:(id)identifier;	// 0x10e59
- (id)_accounts;	// 0x10d29
- (void)_redoRequest;	// 0x10cb9
- (void)_undoRequest;	// 0x10c49
- (void)_fetchSupportedLanguagesWithCompletion:(id)completion;	// 0x10a35
- (void)_handleReplyCommand:(id)command delegate:(id)delegate;	// 0x108fd
- (void)_handleGenericAceCommand:(id)command withDelegate:(id)delegate;	// 0x10545
- (void)_sendSpeechCorrectionInfo:(id)info forCorrectionContext:(id)correctionContext;	// 0x10461
- (void)_setRecordingAlertRoute:(int)route forDelegate:(id)delegate;	// 0x103dd
- (void)_setBluetoothDeviceAddress:(id)address;	// 0x10359
- (void)_cancelSpeechForDelegate:(id)delegate;	// 0x10265
- (void)_stopSpeechForDelegate:(id)delegate;	// 0x101a1
- (void)_startSpeechCorrectionWithText:(id)text forCorrectionContext:(id)correctionContext delegate:(id)delegate;	// 0x10095
- (void)_rollbackRequestForDelegate:(id)delegate;	// 0xff75
- (void)_cancelRequestForDelegate:(id)delegate;	// 0xfef5
- (void)_startDictationWithLanguageCode:(id)languageCode options:(id)options delegate:(id)delegate;	// 0xfd8d
- (void)_startSpeechRequestWithURL:(id)url withDelegate:(id)delegate;	// 0xfc61
- (void)_startSpeechRequestWithDelegate:(id)delegate withOptions:(id)options;	// 0xfa95
- (void)_startRequest:(id)request withDelegate:(id)delegate;	// 0xf9b9
- (void)_clearConversationAndSetApplicationContext;	// 0xf939
- (void)_setContext;	// 0xf449
- (void)_clearContext;	// 0xf1d9
- (void)_endSessionForDelegate:(id)delegate;	// 0xf001
- (void)_setLockState:(BOOL)state;	// 0xeecd
- (void)_setLanguageCode:(id)code;	// 0xee05
- (void)_preheat;	// 0xed89
- (void)contextManager:(id)manager didReceiveNewAlertContext:(id)context;	// 0xec25
- (void)adShouldSpeakStateDidChange:(BOOL)ad;	// 0xeaf5
- (void)speechManager:(id)manager didFailWithError:(id)error;	// 0xe9f1
- (void)speechManagerDidCancel:(id)speechManager;	// 0xe915
- (void)speechManager:(id)manager finishedWithTotalPackets:(int)totalPackets;	// 0xe6bd
- (void)speechManager:(id)manager updatedAveragePower:(float)power peakPower:(float)power3;	// 0xe695
- (void)speechManager:(id)manager capturedPackets:(id)packets totalCount:(int)count;	// 0xe57d
- (void)speechManager:(id)manager didStartForDictation:(BOOL)dictation withCodec:(id)codec source:(id)source;	// 0xdf85
- (void)speechManagerWillStartRecording:(id)speechManager;	// 0xdf65
- (void)syncManager:(id)manager finishedSyncForKeys:(id)keys;	// 0xdf01
- (void)syncManager:(id)manager chunkForKey:(id)key preAnchor:(id)anchor postAnchor:(id)anchor4 validity:(id)validity toAdd:(id)add toRemove:(id)remove;	// 0xdccd
- (void)locationManager:(id)manager wantsToSetRequestOrigin:(id)setRequestOrigin;	// 0xdcb9
- (BOOL)locationManager:(id)manager shouldStartMonitoringLocationForRequest:(id)request;	// 0xdc45
- (void)assistantSessionConnectionDidReset:(id)assistantSessionConnection;	// 0xdc19
- (BOOL)assistantSessionShouldRestartConnectionOnWiFi:(id)assistantSession;	// 0xdbe5
- (BOOL)assistantSessionShouldSetAssistantData:(id)assistantSession;	// 0xdbcd
- (void)assistantSession:(id)session receivedError:(id)error;	// 0xd759
- (BOOL)_isRetryableSessionError:(id)error;	// 0xd6c9
- (void)_sessionDidFailWithError:(id)_session;	// 0xd489
- (void)assistantSession:(id)session receivedCommand:(id)command;	// 0xd475
- (void)_handleCommand:(id)command;	// 0xd199
- (BOOL)_handleSystemDomainCommand:(id)command;	// 0xcd61
- (void)_saUnhandledObject:(id)object;	// 0xcd15
- (void)_saGetRequestOrigin:(id)origin;	// 0xcc79
- (void)_saAcknowledgeAlert:(id)alert;	// 0xcbbd
- (void)_sasSpeechFailure:(id)failure;	// 0xc9b5
- (void)_sasSpeechRecognized:(id)recognized;	// 0xc809
- (void)_saSyncChunkAccepted:(id)accepted;	// 0xc781
- (void)_saSyncChunkDenied:(id)denied;	// 0xc6bd
- (void)_saSyncGetAnchorsResponse:(id)response;	// 0xc51d
- (void)_saRollbackSucceeded:(id)succeeded;	// 0xc519
- (void)_saCancelSucceeded:(id)succeeded;	// 0xc515
- (void)_saAssistantDestroyed:(id)destroyed;	// 0xc511
- (void)_saSendCommands:(id)commands;	// 0xc461
- (void)_saCommandIgnored:(id)ignored;	// 0xc39d
- (void)_saCommandFailed:(id)failed;	// 0xc0d1
- (void)_saSetSupportedLocales:(id)locales;	// 0xc0b1
- (void)_saRequestCompleted:(id)completed;	// 0xbf65
- (void)_handleBareRequestCompleted:(id)completed;	// 0xbe5d
- (void)_handleRequestCompletedWithCallbacks:(id)callbacks;	// 0xbcd9
- (void)_endUndoGrouping;	// 0xbcb1
- (void)_beginUndoGrouping;	// 0xbc85
- (void)_stopObserveringCallState;	// 0xbc65
- (void)_startObservingCallState;	// 0xbaa5
- (BOOL)_isInCall;	// 0xba8d
- (void)_syncIfNeeded;	// 0xb979
- (void)_continueSyncIfConditionsMet;	// 0xb8dd
- (void)_requestAnchorsForKeys:(id)keys;	// 0xb78d
- (BOOL)_handleServiceCommand:(id)command;	// 0xb6c1
- (BOOL)_sendCommand:(id)command domain:(id)domain toBundleWithIdentifier:(id)identifier;	// 0xb55d
- (void)_handleBundleReply:(id)reply inverse:(id)inverse error:(id)error forCommand:(id)command onConnection:(id)connection;	// 0xb419
- (void)_handleBundleResponse:(id)response inverse:(id)inverse forCommand:(id)command;	// 0xb2c1
- (void)_handleBundleError:(id)error forCommand:(id)command;	// 0xb245
- (void)_sendUndoBundleCommands:(id)commands toServiceConnection:(id)serviceConnection;	// 0xb095
- (void)_cancelCurrentRequest;	// 0xaf6d
- (void)_handleNextResultCallbacksForReply:(id)reply;	// 0xad45
- (void)_handleNewStartRequest:(id)request;	// 0xabfd
- (void)_reallyHandleNewStartRequest:(id)request;	// 0xab3d
- (void)_sendWaitingSpeechFinished;	// 0xaab9
- (BOOL)_sendCommandToUIClient:(id)uiclient;	// 0xa9a5
- (void)_sendCancelSpeechForCommand:(id)command;	// 0xa8f9
- (void)_sendRollbackCommandForCommand:(id)command;	// 0xa84d
- (void)_sendCommandFailedForCommand:(id)command reason:(id)reason;	// 0xa7c1
- (void)_sendCommandIgnoredForCommand:(id)command;	// 0xa739
- (void)_sendRetryableRequestToServer:(id)server;	// 0xa6f5
- (void)_sendRequestToServer:(id)server;	// 0xa695
- (void)_sendCommandToServer:(id)server completion:(id)completion;	// 0xa609
- (void)_sendCommandToServer:(id)server;	// 0xa5b5
- (BOOL)_refIdIsSpeechStart:(id)start;	// 0xa535
- (void)_retryNakedCommandsIfNeeded;	// 0xa425
- (void)_speechCaptureCompleted;	// 0xa3f1
- (void)_replaceSpeechDelegateWhenReady:(id)ready withCompletion:(id)completion;	// 0xa129
- (void)_replaceRequestDelegate:(id)delegate;	// 0xa029
- (void)_clearSpeechDelegateState;	// 0x9fbd
- (void)_clearRequestDelegateState;	// 0x9f4d
- (void)_requestDidEnd;	// 0x9f1d
- (void)_requestDidStart;	// 0x9eed
- (id)_contextManager;	// 0x9e99
- (id)_undoManager;	// 0x9e95
- (id)_speechManager;	// 0x9dcd
- (id)_syncManager;	// 0x9d45
- (void)_clearAccount;	// 0x9ce1
// declared property getter: - (id)_account;	// 0x9b99
- (void)_cancelSessionIfIdle;	// 0x9af9
- (void)_cancelSession;	// 0x9aa1
- (id)_locationManager;	// 0x9a11
- (id)_resultsManager;	// 0x99c1
- (id)_retryManager;	// 0x9971
// declared property getter: - (id)_session;	// 0x98d1
- (id)_serviceManager;	// 0x9869
- (id)_managedStore;	// 0x9819
- (void)_removeAllCompletions;	// 0x97f9
- (void)_invokeAllCompletions;	// 0x9745
- (void)_invokeCompletionForCommand:(id)command;	// 0x96f9
- (void)_removeCompletionsForCommandId:(id)commandId;	// 0x96cd
- (void)_addCompletion:(id)completion forCommandId:(id)commandId;	// 0x95e9
- (BOOL)_syncChunkWindowFull;	// 0x95b9
- (void)_clearSyncChunks;	// 0x9599
- (void)_removeOutstandingSyncChunkId:(id)anId;	// 0x953d
- (void)_addOutstandingSyncChunkId:(id)anId;	// 0x94d9
- (BOOL)_hasOutstandingRequests;	// 0x94a9
- (BOOL)_hasOutstandingRequestId:(id)anId;	// 0x947d
- (void)_removeOutstandingRequestId:(id)anId;	// 0x9451
- (void)_addOutstandingRequestId:(id)anId;	// 0x93ed
- (void)dealloc;	// 0x9145
- (id)init;	// 0x90dd
@end

@interface ADCommandCenter (AMOS)
- (void)_handleCommandInAMOS:(id)amos;	// 0x292ed
- (void)_saDomainObjectCommit:(id)commit;	// 0x292b1
- (void)_amosSADomainObjectCommit:(id)commit;	// 0x28ea9
- (void)_sendCommitResponseForCommand:(id)command identifier:(id)identifier;	// 0x28e05
- (void)_saDomainObjectDelete:(id)aDelete;	// 0x28dc9
- (void)_amosSADomainObjectDelete:(id)aDelete;	// 0x28bb1
- (void)_sendDeleteResponseForCommand:(id)command;	// 0x28b29
- (void)_saDomainObjectCancel:(id)cancel;	// 0x28aed
- (void)_amosSADomainObjectCancel:(id)cancel;	// 0x28a6d
- (void)_sendCancelResponseForCommand:(id)command;	// 0x289e5
- (void)_saDomainObjectUpdate:(id)update;	// 0x289a9
- (void)_amosSADomainObjectUpdate:(id)update;	// 0x287e1
- (void)_updateObjectFromService:(id)service sadIdentifier:(id)identifier;	// 0x28409
- (void)_sendUpdateResponseForCommand:(id)command withUpdatedIdentifier:(id)updatedIdentifier;	// 0x28365
- (void)_saDomainObjectRetrieve:(id)retrieve;	// 0x28329
- (void)_amosSADomainObjectRetrieve:(id)retrieve;	// 0x27f45
- (void)_sendRetrieveResponseForCommand:(id)command withSADObjects:(id)sadobjects;	// 0x27ea1
- (void)_saDomainObjectCreate:(id)create;	// 0x27e65
- (void)_amosSADomainObjectCreate:(id)create;	// 0x27da9
- (void)_sendCreateResponseForCommand:(id)command withIdentifier:(id)identifier;	// 0x27d05
- (void)_sendAMOSCommandToService:(id)service responseHandler:(id)handler;	// 0x279f5
- (BOOL)_handleSADOCommandIfServiceDoesNotUseAMOS:(id)amos allowInterposing:(BOOL)interposing;	// 0x277e1
- (BOOL)_sendAMOSCommand:(id)command domain:(id)domain toBundleWithIdentifier:(id)identifier;	// 0x27665
@end
